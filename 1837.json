{"device":"Hacks and Mods","url":"http:\/\/makeprojects.com\/Project\/Kinect+Hacking%3A+Weather+Map\/1837\/1","guide":{"author":{"text":"Joshua Blake ","userid":14587},"categories":["Hacks and Mods","Programming"],"conclusion":"<p><strong>This project first appeared in <a href=\"http:\/\/www.makezine.com\/29\">MAKE Volume 29<\/a>.<\/strong><\/p>","difficulty":"Moderate","documents":[],"flags":[{"title":"From MAKE Magazine","flagid":"FROM_MAKE","text":"This project first appeared on the pages of MAKE magazine."}],"guideid":1837,"image":{"imageid":37722,"text":"http:\/\/guide-images.makeprojects.org\/igi\/WCndVutfkvRXpdUU"},"introduction":"<p>Kinect for Xbox 360 is an amazing little device stuffed with magical sensors. Its revolutionary power and affordability ($150 without the Xbox console) has sparked a wave of innovation in human-computer interfaces that engage the whole body. Now all kinds of games and gadgets can recognize your movements and gestures as commands to do all kinds of things, without you having to wear anything.<\/p>\n\n<p>This article will explain what Kinect is, how it works, and how you can develop your own Kinect hacks. As a starter application, I\u2019ll explain the Kinect Weather Map, a live video application that changes your background to a different animated weather map whenever you walk across the frame and turn \u2014 just like a TV meteorologist, but without a green screen.<\/p>","introduction_rendered":"<p>Kinect for Xbox 360 is an amazing little device stuffed with magical sensors. Its revolutionary power and affordability ($150 without the Xbox console) has sparked a wave of innovation in human-computer interfaces that engage the whole body. Now all kinds of games and gadgets can recognize your movements and gestures as commands to do all kinds of things, without you having to wear anything.<\/p>\n\n<p>This article will explain what Kinect is, how it works, and how you can develop your own Kinect hacks. As a starter application, I\u2019ll explain the Kinect Weather Map, a live video application that changes your background to a different animated weather map whenever you walk across the frame and turn \u2014 just like a TV meteorologist, but without a green screen.<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/make.dozuki.com\/Item\/Kinect_for_Xbox_360_retail_box\">Kinect for Xbox 360 retail box<\/a><\/li><\/ul><\/div><div class=\"tools\"><strong>Tools<\/strong><ul><li><a href=\"http:\/\/make.dozuki.com\/Item\/Compiler_and_IDE_software\">Compiler and IDE software<\/a><\/li><li><a href=\"http:\/\/make.dozuki.com\/Item\/Computer\">Computer<\/a><\/li><li><a href=\"http:\/\/make.dozuki.com\/Item\/Kinect_development_software\">Kinect development software<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"Kinect for Xbox 360 retail box","notes":"$150, includes the Kinect Sensor Power Supply that you\u2019ll need for plugging Kinect into your computer. The \u201cXbox Console with Kinect\u201d bundles do not include this power supply, but if you\u2019ve already got a bundle, you can buy the power supply separately for $35.","url":"http:\/\/make.dozuki.com\/Item\/Kinect_for_Xbox_360_retail_box","thumbnail":""}],"prereqs":[],"steps":[{"title":"","lines":[{"text":"In terms of components, Kinect integrates several sensors: a color (RGB) camera and an infrared (IR) camera, each capable of 640\u00d7480 pixel resolution at 30 frames per second (fps), a microphone array that isolates speech from background noise, and a 3-axis accelerometer, which is used to detect whether Kinect is level.","text_raw":"In terms of components, Kinect integrates several sensors: a color (RGB) camera and an infrared (IR) camera, each capable of 640\u00d7480 pixel resolution at 30 frames per second (fps), a microphone array that isolates speech from background noise, and a 3-axis accelerometer, which is used to detect whether Kinect is level.","bullet":"black","level":0},{"text":"Along with the sensors are a motor that tilts Kinect up and down, and a laser IR projector that uses a diffraction grating to project a speckle pattern onto the world in front of it. For power, Kinect requires 12V at 1.08A, which means you either plug it in with a wall wart or you can splice it to battery power, like an 8\u00d7AA battery pack.","text_raw":"Along with the sensors are a motor that tilts Kinect up and down, and a laser IR projector that uses a diffraction grating to project a speckle pattern onto the world in front of it. For power, Kinect requires 12V at 1.08A, which means you either plug it in with a wall wart or you can splice it to battery power, like an 8\u00d7AA battery pack.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37713,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/me5esKW6dUorSdlD"},{"imageid":37719,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/AJXWdfOgEnZkJYEN"}],"number":1},{"title":"The Z-plane and the skeleton.","lines":[{"text":"The IR projector and IR camera are where the magic begins. Here\u2019s a simplified explanation.","text_raw":"The IR projector and IR camera are where the magic begins. Here\u2019s a simplified explanation.","bullet":"black","level":0},{"text":"Every small grouping of dots in the projected IR laser speckle pattern is unique and recognizable to the IR image processor, even when deformed or displaced against the rest of the pattern. The IR projector is physically offset from the IR camera, about 5&quot; left of it from the camera\u2019s POV, which lets Kinect triangulate a depth value by determining the shift of each dot group.","text_raw":"Every small grouping of dots in the projected IR laser speckle pattern is unique and recognizable to the IR image processor, even when deformed or displaced against the rest of the pattern. The IR projector is physically offset from the IR camera, about 5\" left of it from the camera\u2019s POV, which lets Kinect triangulate a depth value by determining the shift of each dot group.","bullet":"black","level":0},{"text":"Any point in the speckle pattern will shift rightward, as seen by the camera, as it reflects off of a closer surface \u2014 like the way your car\u2019s headlights\u2019 reflections diverge as you approach a reflective surface.","text_raw":"Any point in the speckle pattern will shift rightward, as seen by the camera, as it reflects off of a closer surface \u2014 like the way your car\u2019s headlights\u2019 reflections diverge as you approach a reflective surface.","bullet":"black","level":0},{"text":"Image 1 shows an example of a horizontal slice representing dot brightness with numbers 1\u20136. In one part of its view field, the camera would see 6-1-2-3-4 reflected from 1 meter away, and 2-3-4-5-6 reflected from 2m. Also note the darkened triangle, which shows the area that the IR camera sees that is in the shadow of the object as illuminated by the projector. Kinect can\u2019t determine depth data for these parts of the scene without interpolating, giving possibly inaccurate values.","text_raw":"Image 1 shows an example of a horizontal slice representing dot brightness with numbers 1\u20136. In one part of its view field, the camera would see 6-1-2-3-4 reflected from 1 meter away, and 2-3-4-5-6 reflected from 2m. Also note the darkened triangle, which shows the area that the IR camera sees that is in the shadow of the object as illuminated by the projector. Kinect can\u2019t determine depth data for these parts of the scene without interpolating, giving possibly inaccurate values.","bullet":"black","level":0},{"text":"Kinect generates a depth image from each dot pattern offset, and transmits it via USB cable to the Xbox 360 or PC. Each pixel in the depth image represents a distance away from the camera plane in millimeters.","text_raw":"Kinect generates a depth image from each dot pattern offset, and transmits it via USB cable to the Xbox 360 or PC. Each pixel in the depth image represents a distance away from the camera plane in millimeters.","bullet":"black","level":0},{"text":"In addition, on the XBox 360 and PC, advanced software performs the sophisticated task of recognizing humans from the depth image and identifying (x, y, z) positions for up to 20 skeleton joints. The depth image and joints are available to developers, along with the RGB image from the color camera. These images are mirrored, so when you face a Kinect and a display, your left hand shows up on the left side of the image.","text_raw":"In addition, on the XBox 360 and PC, advanced software performs the sophisticated task of recognizing humans from the depth image and identifying (x, y, z) positions for up to 20 skeleton joints. The depth image and joints are available to developers, along with the RGB image from the color camera. These images are mirrored, so when you face a Kinect and a display, your left hand shows up on the left side of the image.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37723,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/HSLsINykgXwy3aKi"},{"imageid":37724,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/C1bBKtwnKB4yenVo"}],"number":2},{"title":"Kinect hacking setup.","lines":[{"text":"Commercial Kinect games are written using the Xbox Development Kit, which is only available to game studios with Xbox publishing agreements. For the rest of us, the current best way to tap into Kinect is to write client applications for a Windows PC connected to Kinect via a USB cable.","text_raw":"Commercial Kinect games are written using the Xbox Development Kit, which is only available to game studios with Xbox publishing agreements. For the rest of us, the current best way to tap into Kinect is to write client applications for a Windows PC connected to Kinect via a USB cable.","bullet":"black","level":0},{"text":"To enable your PC to communicate with Kinect, you need to install a set of drivers and an SDK (software development kit) defining the structures you can call from your program to get the data. There are 3 options here: <em>libfreenect<\/em> and <em>OpenNI<\/em>, which were developed independently, and the Kinect for Windows SDK, which Microsoft officially released more recently.","text_raw":"To enable your PC to communicate with Kinect, you need to install a set of drivers and an SDK (software development kit) defining the structures you can call from your program to get the data. There are 3 options here: ''libfreenect'' and ''OpenNI'', which were developed independently, and the Kinect for Windows SDK, which Microsoft officially released more recently.","bullet":"black","level":0},{"text":"For this article, I\u2019m using Kinect for Windows SDK, which requires a PC running Windows 7. (You can do everything described below with other Kinect drivers, but you\u2019ll need to translate the sample code into your own language and SDK of choice.) The Kinect SDK has a non-commercial use license during the beta, and a commercially licensed version is currently under development for release in early 2012.","text_raw":"For this article, I\u2019m using Kinect for Windows SDK, which requires a PC running Windows 7. (You can do everything described below with other Kinect drivers, but you\u2019ll need to translate the sample code into your own language and SDK of choice.) The Kinect SDK has a non-commercial use license during the beta, and a commercially licensed version is currently under development for release in early 2012.","bullet":"black","level":0},{"text":"If you already have <em>libfreenect<\/em> or <em>OpenNI<\/em> installed and you want to install the Kinect SDK, you must first plug in Kinect and un-install the previous drivers. To do this, open Windows Device Manager, right-click the Kinect Camera, Audio, and Motor devices, and then check the \u201cDelete the driver software\u201d checkbox, and confirm by clicking OK. Then launch Add or Remove Programs, and un-install any other driver installation packages listed that have Kinect in the name.","text_raw":"If you already have ''libfreenect'' or ''OpenNI'' installed and you want to install the Kinect SDK, you must first plug in Kinect and un-install the previous drivers. To do this, open Windows Device Manager, right-click the Kinect Camera, Audio, and Motor devices, and then check the \u201cDelete the driver software\u201d checkbox, and confirm by clicking OK. Then launch Add or Remove Programs, and un-install any other driver installation packages listed that have Kinect in the name.","bullet":"black","level":0},{"text":"We\u2019ll write an application in 2 languages: XAML and C#. The visuals and controls are designed in XAML, a markup language for Windows interfaces that\u2019s based on the XML document language. To define how the interface elements behave, and to make them object-oriented, you associate them with a \u201ccode-behind\u201d class written in C# (pronounced <em>see-sharp<\/em>), a language with a similar syntax to C++ that\u2019s used for writing Microsoft .NET programs.","text_raw":"We\u2019ll write an application in 2 languages: XAML and C#. The visuals and controls are designed in XAML, a markup language for Windows interfaces that\u2019s based on the XML document language. To define how the interface elements behave, and to make them object-oriented, you associate them with a \u201ccode-behind\u201d class written in C# (pronounced ''see-sharp''), a language with a similar syntax to C++ that\u2019s used for writing Microsoft .NET programs.","bullet":"black","level":0},{"text":"To create this application, we\u2019ll use Microsoft Visual Studio 2010 Express, which is the free version of Microsoft Visual Studio 2010, a development environment that supports C#, XAML, Visual Basic .NET, and other languages. (If you have the full Visual Studio, you can also develop in that, of course.)","text_raw":"To create this application, we\u2019ll use Microsoft Visual Studio 2010 Express, which is the free version of Microsoft Visual Studio 2010, a development environment that supports C#, XAML, Visual Basic .NET, and other languages. (If you have the full Visual Studio, you can also develop in that, of course.)","bullet":"black","level":0},{"text":"To get set up, download and install Microsoft Visual Studio 2010 Express from <a href=\"http:\/\/microsoft.com\/express\/downloads\" rel=\"nofollow\">http:\/\/microsoft.com\/express\/downloads<\/a> and the Kinect SDK Beta 2 from <a href=\"http:\/\/kinectforwindows.org\" rel=\"nofollow\">http:\/\/kinectforwindows.org<\/a>. Download the 32-bit or 64-bit version of the SDK depending on your edition of Windows 7; if you\u2019re unsure, open the Start menu and right-click on Computer, click Properties, and check whether the System Type line says \u201c64-bit.\u201d If you want to do voice-recognition applications, then there are a few additional components you also need to install, but for now this is all we need.","text_raw":"To get set up, download and install Microsoft Visual Studio 2010 Express from http:\/\/microsoft.com\/express\/downloads and the Kinect SDK Beta 2 from http:\/\/kinectforwindows.org. Download the 32-bit or 64-bit version of the SDK depending on your edition of Windows 7; if you\u2019re unsure, open the Start menu and right-click on Computer, click Properties, and check whether the System Type line says \u201c64-bit.\u201d If you want to do voice-recognition applications, then there are a few additional components you also need to install, but for now this is all we need.","bullet":"black","level":0}],"object":null,"images":[],"number":3},{"title":"Use it! Make a Kinect weather map.","lines":[{"text":"Here\u2019s an application that replaces the video background behind a subject with a weather map, the way TV meteorologists use green screens \u2014 except with Kinect, you don\u2019t need a green screen. You can easily adapt this technique to other backgrounds and uses.","text_raw":"Here\u2019s an application that replaces the video background behind a subject with a weather map, the way TV meteorologists use green screens \u2014 except with Kinect, you don\u2019t need a green screen. You can easily adapt this technique to other backgrounds and uses.","bullet":"black","level":0},{"text":"First we need to start getting data out of Kinect. Plug Kinect\u2019s USB plug into your computer and its power plug to an outlet. If the SDK is installed properly, Kinect\u2019s LED indicator should blink, and a Windows pop-up may also indicate that the Kinect device is ready.","text_raw":"First we need to start getting data out of Kinect. Plug Kinect\u2019s USB plug into your computer and its power plug to an outlet. If the SDK is installed properly, Kinect\u2019s LED indicator should blink, and a Windows pop-up may also indicate that the Kinect device is ready.","bullet":"black","level":0},{"text":"To verify communication to the PC, go to the Start menu under Microsoft Kinect 1.0 Beta2 SDK, and run the SkeletalViewer or ShapeGame samples. A zip file with source code for these samples can be found in the same location in the Start menu.","text_raw":"To verify communication to the PC, go to the Start menu under Microsoft Kinect 1.0 Beta2 SDK, and run the SkeletalViewer or ShapeGame samples. A zip file with source code for these samples can be found in the same location in the Start menu.","bullet":"black","level":0},{"text":"To create the project, launch your IDE (either Visual Studio 2010 Express or Visual Studio 2010) and select File \u2192 New \u2192 Project, then choose the WPF Application project template under Visual C# \u2192 Windows. (WPF, or Windows Presentation Foundation, is an interface framework that can encompass XAML elements with C# code-behind, as with our project.) Enter \u201cKinectWeatherMap\u201d for the project name, select a directory if you don\u2019t like the default one, then press OK. This creates a blank WPF application.","text_raw":"To create the project, launch your IDE (either Visual Studio 2010 Express or Visual Studio 2010) and select File \u2192 New \u2192 Project, then choose the WPF Application project template under Visual C# \u2192 Windows. (WPF, or Windows Presentation Foundation, is an interface framework that can encompass XAML elements with C# code-behind, as with our project.) Enter \u201cKinectWeatherMap\u201d for the project name, select a directory if you don\u2019t like the default one, then press OK. This creates a blank WPF application.","bullet":"black","level":0},{"text":"To tell your app to access the Kinect SDK, find the Solution Explorer (or select it from the View menu), right-click on References, and click Add Reference. Click the .NET tab in the popup, then find and select Microsoft.Research.Kinect and press OK. (To help find Microsoft.Research.Kinect, click the Component Name header to sort by name.) Now we\u2019re ready to write some code.","text_raw":"To tell your app to access the Kinect SDK, find the Solution Explorer (or select it from the View menu), right-click on References, and click Add Reference. Click the .NET tab in the popup, then find and select Microsoft.Research.Kinect and press OK. (To help find Microsoft.Research.Kinect, click the Component Name header to sort by name.) Now we\u2019re ready to write some code.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37725,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/6BRINyfMcZHJZgWH"}],"number":4},{"title":"","lines":[{"text":"Double-click on <em>MainWindow.xaml<\/em>. This is auto-generated XAML code for the default first window that opens when you run the application. The file defines what visuals and controls are displayed in that window, and defines names for use in the code-behind class. The file already includes a <tt>Window<\/tt> tag and a <tt>Grid tag<\/tt>, and we\u2019ll add 2 Image tags to define the frames that will hold the Kinect camera image and the background weather image. To do this, replace the contents of <em>'MainWindow.xaml<\/em> with:","text_raw":"Double-click on ''MainWindow.xaml''. This is auto-generated XAML code for the default first window that opens when you run the application. The file defines what visuals and controls are displayed in that window, and defines names for use in the code-behind class. The file already includes a ``Window`` tag and a ``Grid tag``, and we\u2019ll add 2 Image tags to define the frames that will hold the Kinect camera image and the background weather image. To do this, replace the contents of '''MainWindow.xaml'' with:","bullet":"black","level":0},{"text":"<tt>&lt;Window x:Class=&quot;KinectWeatherMap. MainWindow&quot;     xmlns=&quot;<a href=\"http:\/\/schemas.microsoft.com\/\" rel=\"nofollow\">http:\/\/schemas.microsoft.com\/<\/a> winfx\/2006\/xaml\/presentation&quot; xmlns:x=&quot;<a href=\"http:\/\/schemas.microsoft.com\/\" rel=\"nofollow\">http:\/\/schemas.microsoft.com\/<\/a> winfx\/2006\/xaml&quot; xmlns:local=&quot;clr-namespace:KinectWeatherMap&quot; Title=&quot;Kinect Weather Map&quot; WindowState=&quot;Maximized&quot;&gt;&lt;Grid&gt;<wbr \/>&lt;local:GifImage x:Name=&quot;weatherImage&quot;\/&gt; &lt;Image Name=&quot;kinectImage&quot; Stretch=&quot;Uniform&quot;\/&gt;&lt;\/Grid&gt;&lt;\/Wi<wbr \/>ndow&gt;<\/tt> (Copy and paste this text, but see the image for formatting.)","text_raw":"``<Window x:Class=\"KinectWeatherMap. MainWindow\"     xmlns=\"http:\/\/schemas.microsoft.com\/ winfx\/2006\/xaml\/presentation\" xmlns:x=\"http:\/\/schemas.microsoft.com\/ winfx\/2006\/xaml\" xmlns:local=\"clr-namespace:KinectWeatherMap\" Title=\"Kinect Weather Map\" WindowState=\"Maximized\"><Grid><local:GifImage x:Name=\"weatherImage\"\/> <Image Name=\"kinectImage\" Stretch=\"Uniform\"\/><\/Grid><\/Window>`` (Copy and paste this text, but see the image for formatting.)","bullet":"black","level":1},{"text":"The <tt>GifImage<\/tt> tag references our own control that supports animated GIFs like the ones we\u2019ll be pulling from the National Weather Service. You can find code for the <tt>GifImage<\/tt> class, along with all other code for this project, and updates for future releases of Kinect SDK, at <a href=\"http:\/\/makeprojects.com\/v\/29\">http:\/\/makeprojects.com\/v\/29<\/a>. This article steps through different versions of the code routines as we add functionality, so be sure to paste in the correct version for the step you\u2019re at.","text_raw":"The ``GifImage`` tag references our own control that supports animated GIFs like the ones we\u2019ll be pulling from the National Weather Service. You can find code for the ``GifImage`` class, along with all other code for this project, and updates for future releases of Kinect SDK, at http:\/\/makeprojects.com\/v\/29. This article steps through different versions of the code routines as we add functionality, so be sure to paste in the correct version for the step you\u2019re at.","bullet":"black","level":0},{"text":"Add the new <tt>GifImage<\/tt> class by right-clicking KinectWeatherMap in the Solution Explorer, then Add \u2192 Class. Name it <em>GifImage.cs<\/em> and then overwrite the file contents by pasting in the <em>GifImage.cs<\/em> code from the URL above.","text_raw":"Add the new ``GifImage`` class by right-clicking KinectWeatherMap in the Solution Explorer, then Add \u2192 Class. Name it ''GifImage.cs'' and then overwrite the file contents by pasting in the ''GifImage.cs'' code from the URL above.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37726,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/OACRUAYPH6bc5yBf"},{"imageid":37727,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/XPORkRBpsfUrrJNr"}],"number":5},{"title":"","lines":[{"text":"To work with the C# class, the code-behind for the XAML, open the Solution Explorer panel in the IDE, then click the little triangle next to <em>MainWindow.xaml<\/em> and double-click on <em>MainWindow.xaml.cs<\/em>. Now we see the code-behind file and can write some code to talk to Kinect. To tell the compiler where to find the class definitions used in the code, we declare:","text_raw":"To work with the C# class, the code-behind for the XAML, open the Solution Explorer panel in the IDE, then click the little triangle next to ''MainWindow.xaml'' and double-click on ''MainWindow.xaml.cs''. Now we see the code-behind file and can write some code to talk to Kinect. To tell the compiler where to find the class definitions used in the code, we declare:","bullet":"black","level":0},{"text":"<tt>using Microsoft.Research.Kinect.Nui;<\/tt>","text_raw":"``using Microsoft.Research.Kinect.Nui;``","bullet":"black","level":1},{"text":"Below the <tt>using<\/tt> statements, inside the <tt>MainWindow<\/tt> class definition but before its constructor routine, add the following fields to store the most recent depth image and a color offset map that translates between pixel positions in the IR camera\u2019s depth image and color camera pixel positions:","text_raw":"Below the ``using`` statements, inside the ``MainWindow`` class definition but before its constructor routine, add the following fields to store the most recent depth image and a color offset map that translates between pixel positions in the IR camera\u2019s depth image and color camera pixel positions:","bullet":"black","level":0},{"text":"<tt>ImageFrame lastDepthFrame;<\/tt> <tt>int[] colorOffsetMap;<\/tt>","text_raw":"``ImageFrame lastDepthFrame;`` ``int[] colorOffsetMap;``","bullet":"black","level":1},{"text":"Inside the constructor, add the lines below, which call the <tt>InitKinect<\/tt> method (which we\u2019ll add next) to initialize the first Kinect plugged in. With no Kinect connected, the program will just silently do nothing.","text_raw":"Inside the constructor, add the lines below, which call the ``InitKinect`` method (which we\u2019ll add next) to initialize the first Kinect plugged in. With no Kinect connected, the program will just silently do nothing.","bullet":"black","level":0},{"text":"<tt>this.Loaded += (s, e) =&gt;{InitKinect(Runtime.Kinects.           FirstOrDefault());};<\/tt> (See image for formatting)","text_raw":"``this.Loaded += (s, e) =>{InitKinect(Runtime.Kinects.           FirstOrDefault());};`` (See image for formatting)","bullet":"black","level":1},{"text":"After the constructor in <em>MainWindow.xaml.cs<\/em> add the methods <tt>InitKinect<\/tt>, <tt>runtime_DepthFrameReady<\/tt>, <tt>runtime_VideoFrameReady<\/tt>, and <tt>runtime_SkeletonFrameReady<\/tt>, pasting the code in from <a href=\"http:\/\/makeprojects.com\/v\/29\">http:\/\/makeprojects.com\/v\/29<\/a> . <tt>InitKinect<\/tt> configures Kinect to send us data and set up a <tt>colorOffsetMap<\/tt> array for us to use later, and the other 3 are event handlers that are called whenever Kinect sees new depth, RGB, or skeleton data.","text_raw":"After the constructor in ''MainWindow.xaml.cs'' add the methods ``InitKinect``, ``runtime_DepthFrameReady``, ``runtime_VideoFrameReady``, and ``runtime_SkeletonFrameReady``, pasting the code in from http:\/\/makeprojects.com\/v\/29 . ``InitKinect`` configures Kinect to send us data and set up a ``colorOffsetMap`` array for us to use later, and the other 3 are event handlers that are called whenever Kinect sees new depth, RGB, or skeleton data.","bullet":"black","level":0},{"text":"Now try running the application by pressing the F5 key or selecting Debug \u2192 Start Debugging. You should see a window with the RGB video image streaming from Kinect. Hello, World! We\u2019re also saving the depth image in the <tt>lastDepthFrame<\/tt> field, for processing later.","text_raw":"Now try running the application by pressing the F5 key or selecting Debug \u2192 Start Debugging. You should see a window with the RGB video image streaming from Kinect. Hello, World! We\u2019re also saving the depth image in the ``lastDepthFrame`` field, for processing later.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37728,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/gL3mPYOEuxnbZyCf"}],"number":6},{"title":"Remove the background.","lines":[{"text":"The depth image provides 2 values for each pixel: its distance from Kinect\u2019s camera plane (in meters), and the player index, indicating which player the pixel belongs to, if any. The player index ranges from 0 to 6, with 0 for no player (background or furniture), and 1\u20136 based on who enters the scene. In this application, each of the 76,800 pixels (320\u00d7240) in the depth image consists of 2 bytes that contain both the depth data and the player index.","text_raw":"The depth image provides 2 values for each pixel: its distance from Kinect\u2019s camera plane (in meters), and the player index, indicating which player the pixel belongs to, if any. The player index ranges from 0 to 6, with 0 for no player (background or furniture), and 1\u20136 based on who enters the scene. In this application, each of the 76,800 pixels (320\u00d7240) in the depth image consists of 2 bytes that contain both the depth data and the player index.","bullet":"black","level":0},{"text":"To remove the background, we\u2019re going to do some image processing using the player index. We\u2019ll create a new image to represent the foreground, initially set it to transparent, and then iterate over each depth image pixel. If the player index is not zero, we\u2019ll copy the corresponding RBG image pixel to our foreground image.","text_raw":"To remove the background, we\u2019re going to do some image processing using the player index. We\u2019ll create a new image to represent the foreground, initially set it to transparent, and then iterate over each depth image pixel. If the player index is not zero, we\u2019ll copy the corresponding RBG image pixel to our foreground image.","bullet":"black","level":0},{"text":"Since we\u2019re using images from both the IR and color cameras, we also need to convert between the 2 slightly different sets of coordinates using the colorOffsetMap array that we set up in the constructor. All of this happens in the <tt>runtime_VideoFrameReady<\/tt> method that we created earlier.","text_raw":"Since we\u2019re using images from both the IR and color cameras, we also need to convert between the 2 slightly different sets of coordinates using the colorOffsetMap array that we set up in the constructor. All of this happens in the ``runtime_VideoFrameReady`` method that we created earlier.","bullet":"black","level":0},{"text":"Copy the \u201cRemove the Background\u201d version of the code from <a href=\"http:\/\/makeprojects.com\/v\/29\">http:\/\/makeprojects.com\/v\/29<\/a>, and paste it into the project code.","text_raw":"Copy the \u201cRemove the Background\u201d version of the code from http:\/\/makeprojects.com\/v\/29, and paste it into the project code.","bullet":"black","level":0},{"text":"We\u2019re only using the player index, but if you also wanted to retrieve the depth data from the image, you could add the following line inside the method\u2019s inner for loop, after defining the <tt>depthIndex<\/tt> variable:","text_raw":"We\u2019re only using the player index, but if you also wanted to retrieve the depth data from the image, you could add the following line inside the method\u2019s inner for loop, after defining the ``depthIndex`` variable:","bullet":"black","level":0},{"text":"<tt>short depth = (short) ((depthBytes[depthIndex] &gt;&gt; 3) | (depthBytes[depthIndex + 1] &lt;&lt; 5));<\/tt>","text_raw":"``short depth = (short) ((depthBytes[depthIndex] >> 3) | (depthBytes[depthIndex + 1] << 5));``","bullet":"black","level":0}],"object":null,"images":[{"imageid":37729,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/jeXyQTrYcOvFnLdS"}],"number":7},{"title":"","lines":[{"text":"Now compile and run the application. You should see a blank white background on your computer, until you or someone else moves into Kinect\u2019s field of view, at least from the waist up. When you do, the player index will become non-zero for pixels where Kinect is tracking your body, the code will copy over those color pixels, and you\u2019ll see an image with only people and no background \u2014 like a green screen without a green screen!","text_raw":"Now compile and run the application. You should see a blank white background on your computer, until you or someone else moves into Kinect\u2019s field of view, at least from the waist up. When you do, the player index will become non-zero for pixels where Kinect is tracking your body, the code will copy over those color pixels, and you\u2019ll see an image with only people and no background \u2014 like a green screen without a green screen!","bullet":"black","level":0},{"text":"You may notice that the \u201ccutout\u201d doesn\u2019t always match the RGB image, especially if you\u2019re moving quickly. This glitch is partly noise, partly because the RGB and depth frames may not be delivered at exactly the same rate, and partly because our code is simplified for learning, rather than optimized for speed. There are several techniques an intermediate developer could use to speed up the code and to sync the RGB and depth frames better, based on timestamp.","text_raw":"You may notice that the \u201ccutout\u201d doesn\u2019t always match the RGB image, especially if you\u2019re moving quickly. This glitch is partly noise, partly because the RGB and depth frames may not be delivered at exactly the same rate, and partly because our code is simplified for learning, rather than optimized for speed. There are several techniques an intermediate developer could use to speed up the code and to sync the RGB and depth frames better, based on timestamp.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37718,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/JerDQZ6AEqyK6dgM"}],"number":8},{"title":"Track the skeleton and add the maps.","lines":[{"text":"Finally, we want to add the weather maps in the background and be able to switch them using a simple gesture. To recognize the gesture, we\u2019ll use Kinect\u2019s skeleton tracking data.","text_raw":"Finally, we want to add the weather maps in the background and be able to switch them using a simple gesture. To recognize the gesture, we\u2019ll use Kinect\u2019s skeleton tracking data.","bullet":"black","level":0},{"text":"What kind of gesture? Broadcast meteorologists often change the weather map as they walk across the screen and pivot to face the opposite direction.","text_raw":"What kind of gesture? Broadcast meteorologists often change the weather map as they walk across the screen and pivot to face the opposite direction.","bullet":"black","level":0},{"text":"To detect this gesture, we need to check 2 conditions: which side of the image the <tt>ShoulderCenter<\/tt> joint is on, and whether the left shoulder or right shoulder is closer to the camera. If both of these conditions change from their previous state, we know the user has performed the walk-and-turn gesture and we can cycle the background image. We check for turning so that the background doesn\u2019t cycle when the user is just reaching for the far side of the map.","text_raw":"To detect this gesture, we need to check 2 conditions: which side of the image the ``ShoulderCenter`` joint is on, and whether the left shoulder or right shoulder is closer to the camera. If both of these conditions change from their previous state, we know the user has performed the walk-and-turn gesture and we can cycle the background image. We check for turning so that the background doesn\u2019t cycle when the user is just reaching for the far side of the map.","bullet":"black","level":0},{"text":"To add this feature, we first need to add a few fields at the top of the <tt>MainWindow<\/tt> class:","text_raw":"To add this feature, we first need to add a few fields at the top of the ``MainWindow`` class:","bullet":"black","level":0},{"text":"<tt>int currentBackground = -1;<\/tt> <tt>List&lt;string&gt; bgImages = new List&lt;string&gt;();<\/tt> <tt>bool isPoseLeft = false;<\/tt> <tt>bool isPoseRight = false;<\/tt>","text_raw":"``int currentBackground = -1;`` ``List<string> bgImages = new List<string>();`` ``bool isPoseLeft = false;`` ``bool isPoseRight = false;``","bullet":"black","level":1}],"object":null,"images":[{"imageid":37721,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/GHUHYGwiWNMHTWuK"}],"number":9},{"title":"","lines":[{"text":"To retrieve the map images, add the following inside the MainWindow constructor after the call to <tt>InitializeComponent()<\/tt>. You can substitute the URLs for other animated GIF maps provided by the National Weather Service:","text_raw":"To retrieve the map images, add the following inside the MainWindow constructor after the call to ``InitializeComponent()``. You can substitute the URLs for other animated GIF maps provided by the National Weather Service:","bullet":"black","level":0},{"text":"<tt>bgImages.Add(&quot;<a href=\"http:\/\/radar.weather.gov\/\" rel=\"nofollow\">http:\/\/radar.weather.gov\/<\/a> ridge\/Conus\/Loop\/NatLoop_Small<wbr \/>.gif&quot;); bgImages.Add(&quot;<a href=\"http:\/\/radar.weather.gov\/\" rel=\"nofollow\">http:\/\/radar.weather.gov\/<\/a> ridge\/Conus\/Loop\/southeast_loo<wbr \/>p.gif&quot;); bgImages.Add(&quot;<a href=\"http:\/\/radar.weather.gov\/\" rel=\"nofollow\">http:\/\/radar.weather.gov\/<\/a> ridge\/Conus\/Loop\/northeast_loo<wbr \/>p.gif&quot;); bgImages.Add(&quot;<a href=\"http:\/\/radar.weather.gov\/\" rel=\"nofollow\">http:\/\/radar.weather.gov\/<\/a> ridge\/Conus\/Loop\/pacnorthwest_<wbr \/>loop.gif&quot;); bgImages.Add(&quot;<a href=\"http:\/\/radar.weather.gov\/\" rel=\"nofollow\">http:\/\/radar.weather.gov\/<\/a> ridge\/Conus\/Loop\/pacsouthwest_<wbr \/>loop.gif&quot;); CycleBackground();<\/tt>","text_raw":"``bgImages.Add(\"http:\/\/radar.weather.gov\/ ridge\/Conus\/Loop\/NatLoop_Small.gif\"); bgImages.Add(\"http:\/\/radar.weather.gov\/ ridge\/Conus\/Loop\/southeast_loop.gif\"); bgImages.Add(\"http:\/\/radar.weather.gov\/ ridge\/Conus\/Loop\/northeast_loop.gif\"); bgImages.Add(\"http:\/\/radar.weather.gov\/ ridge\/Conus\/Loop\/pacnorthwest_loop.gif\"); bgImages.Add(\"http:\/\/radar.weather.gov\/ ridge\/Conus\/Loop\/pacsouthwest_loop.gif\"); CycleBackground();``","bullet":"black","level":0},{"text":"Now update the <tt>runtime_SkeletonFrameReady<\/tt> method to the code version under \u201cTrack the Skeleton\u201d at <a href=\"http:\/\/makeprojects.com\/v\/29\">http:\/\/makeprojects.com\/v\/29<\/a>, and also add the new <tt>CycleBackground()<\/tt> method, which cycles through the background images with each body-turn gesture. The code will find the skeleton closest to the Kinect and use shoulder positions to determine if the skeleton is facing right or left, and if the pose changes it will call <tt>CycleBackground<\/tt> to put up a new animated background image, which is downloaded automatically.","text_raw":"Now update the ``runtime_SkeletonFrameReady`` method to the code version under \u201cTrack the Skeleton\u201d at http:\/\/makeprojects.com\/v\/29, and also add the new ``CycleBackground()`` method, which cycles through the background images with each body-turn gesture. The code will find the skeleton closest to the Kinect and use shoulder positions to determine if the skeleton is facing right or left, and if the pose changes it will call ``CycleBackground`` to put up a new animated background image, which is downloaded automatically.","bullet":"black","level":0},{"text":"Now stand up, and with your best voice, describe and gesticulate over the weather map background. To change images, walk to the other side of the image while turning your shoulders toward the center.","text_raw":"Now stand up, and with your best voice, describe and gesticulate over the weather map background. To change images, walk to the other side of the image while turning your shoulders toward the center.","bullet":"black","level":0},{"text":"Congratulations, you\u2019ve just made a Kinect hack! Now go show it off to your friends and see what else you can come up with.","text_raw":"Congratulations, you\u2019ve just made a Kinect hack! Now go show it off to your friends and see what else you can come up with.","bullet":"black","level":0}],"object":null,"images":[{"imageid":37730,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/sTSHADEIK2ofUVV6"}],"number":10}],"subject":"","summary":"Go from handwaving to coding with the Microsoft Kinect SDK.","time_required":"","title":"Kinect Hacking: Weather Map","tools":[{"text":"Compiler and IDE software","notes":"Microsoft Visual Studio 2010 Express (free) or other 2010 edition","url":"http:\/\/make.dozuki.com\/Item\/Compiler_and_IDE_software","thumbnail":""},{"text":"Computer","notes":"If you don\u2019t have Windows 7, you can still do everything described here with other Kinect drivers, but you\u2019ll need to translate the sample code into your own language and SDK of choice.","url":"http:\/\/make.dozuki.com\/Item\/Computer","thumbnail":""},{"text":"Kinect development software","notes":"If you want to do additional development with the SDK or try out the audio features of Kinect, see the Kinect SDK Readme for additional software to install.","url":"http:\/\/make.dozuki.com\/Item\/Kinect_development_software","thumbnail":""}],"type":"project"},"guideid":"1837"}