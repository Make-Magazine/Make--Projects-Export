{"device":"Musical Instruments","url":"http:\/\/makeprojects.com\/Project\/Random+Music+Box\/33\/1","guide":{"author":{"text":"Kevin Weekly","userid":57},"categories":["Musical Instruments"],"conclusion":"<p><strong>This project originally appeared in <a href=\"http:\/\/www.makezine.com\/17\/\">MAKE Magazine Volume 17<\/a>.<\/strong><\/p>\n\n<p><strong>Related Posts on Make: Online:<\/strong><\/p>\n\n<p><a href=\"http:\/\/blog.makezine.com\/archive\/2009\/12\/pic-based_melody_generator.html\">PIC-Based Melody Generator<\/a><\/p>\n\n<p><a href=\"http:\/\/makezine.com\/diymusic\/\">DIY Music Roundup<\/a><\/p>","difficulty":"Moderate","documents":[],"flags":[{"title":"From MAKE Magazine","flagid":"FROM_MAKE","text":"This project first appeared on the pages of MAKE magazine."}],"guideid":33,"image":{"imageid":662,"text":"http:\/\/guide-images.makeprojects.org\/igi\/NKfIHStPnGAOROFR"},"introduction":"<p>Here\u2019s a fairly inexpensive ($30\u2013$40) project that uses a microprocessor to generate a constant stream of random but pleasant-sounding music. A Microchip PIC16F685 generates 5 square waves that are amplified and combined to play on a small speaker. A lookup table in the software stores chord progressions common in Western music. As the music runs from chord to chord, 3 oscillators play the chord itself, 1 plays a tonic-dominant (1-5) bass pattern, and 1 plays random notes from the underlying scale as a melody. Potentiometers adjust how much of each component (chord, bass, and melody) is mixed into the final output. To keep the beat, the microcontroller also generates output for driving a servomotor to strike a drum or equivalent.<\/p>","introduction_rendered":"<p>Here\u2019s a fairly inexpensive ($30\u2013$40) project that uses a microprocessor to generate a constant stream of random but pleasant-sounding music. A Microchip PIC16F685 generates 5 square waves that are amplified and combined to play on a small speaker. A lookup table in the software stores chord progressions common in Western music. As the music runs from chord to chord, 3 oscillators play the chord itself, 1 plays a tonic-dominant (1-5) bass pattern, and 1 plays random notes from the underlying scale as a melody. Potentiometers adjust how much of each component (chord, bass, and melody) is mixed into the final output. To keep the beat, the microcontroller also generates output for driving a servomotor to strike a drum or equivalent.<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/www.digikey.com\">PIC16F685 microprocessor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Op-amp_chip\">Op-amp chip<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Capacitor\">Capacitor<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062357\">Potentiometer<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;amp;filterName=Brand&amp;amp;filterValue=RadioShack\">Resistor<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062406\">Speaker<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Male_header\">Male header<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/DIP_socket\">DIP socket<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2049738\">Hook-up wire<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2734155\">Breadboard<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=3802149\">Power supply<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Masking_tape\">Masking tape<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Drum_and_drumstick\">Drum and drumstick<\/a><\/li><li><a href=\"http:\/\/www.makershed.com\/ProductDetails.asp?ProductCode=JM395760\">Servo<\/a><\/li><\/ul><\/div><div class=\"tools\"><strong>Tools<\/strong><ul><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=4214667\">Digital multimeter<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/PIC_programmer\">PIC programmer<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Soldering_materials\">Soldering materials<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"PIC16F685 microprocessor","notes":"$3","url":"http:\/\/www.digikey.com","thumbnail":""},{"text":"Op-amp chip","notes":"or use another quad op-amp, like the cheaper LM324","url":"http:\/\/makeprojects.com\/Item\/Op-amp_chip","thumbnail":""},{"text":"Capacitor","notes":"","url":"http:\/\/makeprojects.com\/Item\/Capacitor","thumbnail":""},{"text":"Potentiometer","notes":"All 3 must be identical","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062357","thumbnail":""},{"text":"Resistor","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;filterName=Brand&amp;filterValue=RadioShack","thumbnail":""},{"text":"Speaker","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062406","thumbnail":""},{"text":"Male header","notes":"","url":"http:\/\/makeprojects.com\/Item\/Male_header","thumbnail":""},{"text":"DIP socket","notes":"","url":"http:\/\/makeprojects.com\/Item\/DIP_socket","thumbnail":""},{"text":"Hook-up wire","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2049738","thumbnail":""},{"text":"Breadboard","notes":"or ProtoBoard","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2734155","thumbnail":""},{"text":"Power supply","notes":"I used a 4xAA battery pack with a voltage regulator.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=3802149","thumbnail":""},{"text":"Masking tape","notes":"","url":"http:\/\/makeprojects.com\/Item\/Masking_tape","thumbnail":""},{"text":"Drum and drumstick","notes":"or equivalent. For one version, I used a metal rod and a cardboard box.","url":"http:\/\/makeprojects.com\/Item\/Drum_and_drumstick","thumbnail":""},{"text":"Servo","notes":"Other servos would probably work, but they must handle PWM (pulse width modulation) input. # I tried an HS-325HB and it did nothing but twitch.","url":"http:\/\/www.makershed.com\/ProductDetails.asp?ProductCode=JM395760","thumbnail":""}],"prereqs":[],"steps":[{"title":"Assemble the circuit.","lines":[{"text":"Download the project schematic at <a href=\"http:\/\/www.makezine.com\/17\/diymusic_random\" title=\"http:\/\/www.makezine.com\/17\/diymusic_random\">http:\/\/www.makezine.com\/17\/diymusic_rand...<\/a>.","text_raw":"Download the project schematic at http:\/\/www.makezine.com\/17\/diymusic_random.","bullet":"black","level":0},{"text":"You can solder it onto protoboard or put it together temporarily on a solderless breadboard. I placed and connected the components in this order: sockets, resistors, capacitors, power wires, signal wires, potentiometers, and finally the off-board connections to the speaker and servo. The web page has sketches showing each step.","text_raw":"You can solder it onto protoboard or put it together temporarily on a solderless breadboard. I placed and connected the components in this order: sockets, resistors, capacitors, power wires, signal wires, potentiometers, and finally the off-board connections to the speaker and servo. The web page has sketches showing each step.","bullet":"black","level":0}],"object":null,"images":[{"imageid":663,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/TwWux4KRtlTNrWqB"}],"number":1},{"title":"Program the microcontroller.","lines":[{"text":"Download the project code from makezine.com\/17\/diymusic_rando<wbr \/>m and use your PIC programmer to burn the firmware onto the microcontroller. You can either program it directly from the hex file main.HEX or compile the program from the source code main.asm.","text_raw":"Download the project code from makezine.com\/17\/diymusic_random and use your PIC programmer to burn the firmware onto the microcontroller. You can either program it directly from the hex file main.HEX or compile the program from the source code main.asm.","bullet":"black","level":0}],"object":null,"images":[{"imageid":664,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/HXKXUybLycrRuxBX"}],"number":2},{"title":"Verification","lines":[{"text":"Before inserting the ICs into the sockets and powering on, it\u2019s important to make some sanity checks, to avoid destroying the expensive ICs. First, check connections on the circuit with the digital multimeter.","text_raw":"Before inserting the ICs into the sockets and powering on, it\u2019s important to make some sanity checks, to avoid destroying the expensive ICs. First, check connections on the circuit with the digital multimeter.","bullet":"black","level":0},{"text":"Next, make sure the power and ground rails aren\u2019t shorted out. Then power on the circuit and make sure each chip\u2019s power pin (Vcc) is getting 5V.","text_raw":"Next, make sure the power and ground rails aren\u2019t shorted out. Then power on the circuit and make sure each chip\u2019s power pin (Vcc) is getting 5V.","bullet":"black","level":0},{"text":"Finally, plug in the ICs. If you don\u2019t hear music output, disconnect power immediately to avoid any magic smoke.","text_raw":"Finally, plug in the ICs. If you don\u2019t hear music output, disconnect power immediately to avoid any magic smoke.","bullet":"black","level":0}],"object":null,"images":[],"number":3},{"title":"Add the drum.","lines":[{"text":"You should now have a noisy circuit happily playing chords. To add percussion, the servo output alternates between maximum and minimum deflection every beat. The music box MAKE built uses a metal case as both project box and drum.","text_raw":"You should now have a noisy circuit happily playing chords. To add percussion, the servo output alternates between maximum and minimum deflection every beat. The music box MAKE built uses a metal case as both project box and drum.","bullet":"black","level":0},{"text":"For my original version, I soldered the circuit onto protoboard and taped everything into a cardboard box.","text_raw":"For my original version, I soldered the circuit onto protoboard and taped everything into a cardboard box.","bullet":"black","level":0},{"text":"For those with some PIC coding experience, the source code for the firmware is mainly driven by lookup tables, which you can easily modify to do other musical things such as playing songs, scales, etc.","text_raw":"For those with some PIC coding experience, the source code for the firmware is mainly driven by lookup tables, which you can easily modify to do other musical things such as playing songs, scales, etc.","bullet":"black","level":0},{"text":"For the schematic, a GIMP file with wiring, compiled firmware, source code, and an audio sample, go to <a href=\"http:\/\/www.makezine.com\/17\/diymusic_random\" title=\"http:\/\/www.makezine.com\/17\/diymusic_random\">http:\/\/www.makezine.com\/17\/diymusic_rand...<\/a>.","text_raw":"For the schematic, a GIMP file with wiring, compiled firmware, source code, and an audio sample, go to http:\/\/www.makezine.com\/17\/diymusic_random.","bullet":"black","level":0}],"object":null,"images":[{"imageid":665,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/eqcPE6WO5eKuXKXp"},{"imageid":666,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/VXAIRJQ2jZcSbdDv"}],"number":4}],"subject":"","summary":"Microprocessor organ and servo drum play an endless song.","time_required":"","title":"Random Music Box","tools":[{"text":"Digital multimeter","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=4214667","thumbnail":""},{"text":"PIC programmer","notes":"","url":"http:\/\/makeprojects.com\/Item\/PIC_programmer","thumbnail":""},{"text":"Soldering materials","notes":"","url":"http:\/\/makeprojects.com\/Item\/Soldering_materials","thumbnail":""}],"type":"project"},"guideid":"33"}