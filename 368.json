{"device":"Remote Control","url":"http:\/\/makeprojects.com\/Project\/USB-IR-Boy%2C+Linux+Remote+Receiver\/368\/1","guide":{"author":{"text":"nuess0r","userid":1805},"categories":["Remote Control"],"conclusion":"","difficulty":"Difficult","documents":[{"text":"usb-ir-boy.pdf","url":"http:\/\/make-documents.s3.amazonaws.com\/xyu3x5gxeqO1tWnV.pdf","documentid":66},{"text":"usb-ir-boy-Copper.pdf","url":"http:\/\/make-documents.s3.amazonaws.com\/XJibnFQBSL5XhrQy.pdf","documentid":67},{"text":"usb-ir-boy-SilkSCmp.pdf","url":"http:\/\/make-documents.s3.amazonaws.com\/AkJ3ZhDO2jDKQLu1.pdf","documentid":68}],"flags":[],"guideid":368,"image":{"imageid":5998,"text":"http:\/\/guide-images.makeprojects.org\/igi\/SGTRrCJEjKnRIDDK"},"introduction":"<p>One day I realized that I would like to have the ability to control my computer's media player (for me this is Amarok under Linux) with the IR remote from my NAD amplifier.<\/p>\n\n<p><strong>Description<\/strong><\/p>\n\n<p>This project describes an infrared (IR) receiver for IR remote controls commonly used by consumer electronic devices like TVs, amplifiers, DVD players, etc. Most of them use the same coding scheme, called <a href=\"http:\/\/en.wikipedia.org\/wiki\/RC-5\">RC-5<\/a>, so you can use your extra remotes or some unused buttons on your remote together with this receiver.<\/p>\n\n<p>As the name suggests, this receiver is connected to the USB port of your computer.<\/p>\n\n<p>This receiver can be used with the well-known Linux software LIRC. There is a description of my LIRC\/Amarok setup below.<\/p>\n\n<p>I found the <a href=\"http:\/\/usbirboy.sourceforge.net\/\" rel=\"nofollow\">original of this project<\/a> and decided that I had to build one for myself.<\/p>\n\n<p>It's a Sourceforge project and I tried to send my stuff to the original developer without success. So I am publishing it here.<\/p>","introduction_rendered":"<p>One day I realized that I would like to have the ability to control my computer's media player (for me this is Amarok under Linux) with the IR remote from my NAD amplifier.<\/p>\n\n<p><strong>Description<\/strong><\/p>\n\n<p>This project describes an infrared (IR) receiver for IR remote controls commonly used by consumer electronic devices like TVs, amplifiers, DVD players, etc. Most of them use the same coding scheme, called <a href=\"http:\/\/en.wikipedia.org\/wiki\/RC-5\">RC-5<\/a>, so you can use your extra remotes or some unused buttons on your remote together with this receiver.<\/p>\n\n<p>As the name suggests, this receiver is connected to the USB port of your computer.<\/p>\n\n<p>This receiver can be used with the well-known Linux software LIRC. There is a description of my LIRC\/Amarok setup below.<\/p>\n\n<p>I found the <a href=\"http:\/\/usbirboy.sourceforge.net\/\" rel=\"nofollow\">original of this project<\/a> and decided that I had to build one for myself.<\/p>\n\n<p>It's a Sourceforge project and I tried to send my stuff to the original developer without success. So I am publishing it here.<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/FREESCALE_MC68HC908JB8JPE_8BIT_MCU_8K_FLASH_USB_Farnell_1148404\">FREESCALE MC68HC908JB8JPE 8BIT MCU 8K FLASH USB Farnell 1148404<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/MULTICOMP_IC_SOCKET_DIL_0.3%22_20WAY_Farnell_1103848\">MULTICOMP IC SOCKET DIL 0.3&amp;quot; 20WAY Farnell 1103848<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/VISHAY_TSOP34836_PHOTODIODE_IR_RECEIVER_36KHZ_Farnell_4913127\">VISHAY TSOP34836 PHOTODIODE IR RECEIVER 36KHZ Farnell 4913127<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/AVX_CRYSTAL_HC-49_6MHZ_Farnell_1368787\">AVX CRYSTAL HC-49 6MHZ Farnell 1368787<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/USB_Cable_is_from_a_broken_USB_Mouse.\">USB Cable is from a broken USB Mouse.<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Case_is_from_a_HP_IRDA_receiver_%28HP_C4103A%29_for_HP_printers.\">Case is from a HP IRDA receiver (HP C4103A) for HP printers.<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/MOhm_Resistor\">MOhm Resistor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/nF_Capacitor\">nF Capacitor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/pF_Capacitor\">pF Capacitor<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"FREESCALE MC68HC908JB8JPE 8BIT MCU 8K FLASH USB Farnell 1148404","notes":"","url":"http:\/\/makeprojects.com\/Item\/FREESCALE_MC68HC908JB8JPE_8BIT_MCU_8K_FLASH_USB_Farnell_1148404","thumbnail":""},{"text":"MULTICOMP IC SOCKET DIL 0.3&quot; 20WAY Farnell 1103848","notes":"","url":"http:\/\/makeprojects.com\/Item\/MULTICOMP_IC_SOCKET_DIL_0.3%22_20WAY_Farnell_1103848","thumbnail":""},{"text":"VISHAY TSOP34836 PHOTODIODE IR RECEIVER 36KHZ Farnell 4913127","notes":"","url":"http:\/\/makeprojects.com\/Item\/VISHAY_TSOP34836_PHOTODIODE_IR_RECEIVER_36KHZ_Farnell_4913127","thumbnail":""},{"text":"AVX CRYSTAL HC-49 6MHZ Farnell 1368787","notes":"","url":"http:\/\/makeprojects.com\/Item\/AVX_CRYSTAL_HC-49_6MHZ_Farnell_1368787","thumbnail":""},{"text":"USB Cable is from a broken USB Mouse.","notes":"","url":"http:\/\/makeprojects.com\/Item\/USB_Cable_is_from_a_broken_USB_Mouse.","thumbnail":""},{"text":"Case is from a HP IRDA receiver (HP C4103A) for HP printers.","notes":"","url":"http:\/\/makeprojects.com\/Item\/Case_is_from_a_HP_IRDA_receiver_%28HP_C4103A%29_for_HP_printers.","thumbnail":""},{"text":"MOhm Resistor","notes":"","url":"http:\/\/makeprojects.com\/Item\/MOhm_Resistor","thumbnail":""},{"text":"nF Capacitor","notes":"2","url":"http:\/\/makeprojects.com\/Item\/nF_Capacitor","thumbnail":""},{"text":"pF Capacitor","notes":"2","url":"http:\/\/makeprojects.com\/Item\/pF_Capacitor","thumbnail":""}],"prereqs":[],"steps":[{"title":"Get all needed stuff","lines":[{"text":"Order the parts you need. In the parts list are Farnell\/Newark order numbers.","text_raw":"Order the parts you need. In the parts list are Farnell\/Newark order numbers.","bullet":"black","level":0},{"text":"Make the PCB. At the moment there is no fabricated PCB available; you have to do it on your own. You can also build the circuit onto a prototype board since there are only a few components to wire.","text_raw":"Make the PCB. At the moment there is no fabricated PCB available; you have to do it on your own. You can also build the circuit onto a prototype board since there are only a few components to wire.","bullet":"black","level":0},{"text":"Get a small enclosure. There has to be something like a &quot;window&quot; in front of it. Place the IR receiver behind this. You can also simply cut out a hole for the receiver.","text_raw":"Get a small enclosure. There has to be something like a \"window\" in front of it. Place the IR receiver behind this. You can also simply cut out a hole for the receiver.","bullet":"black","level":0},{"text":"If you use the same type of IRDA receiver box as I did, remove the rubber feet on the bottom and keep them. Under the feet you will see the case screws. Open the case, cut the wires to the LED close to the board and remove the PCB. We don't need it.","text_raw":"If you use the same type of IRDA receiver box as I did, remove the rubber feet on the bottom and keep them. Under the feet you will see the case screws. Open the case, cut the wires to the LED close to the board and remove the PCB. We don't need it.","bullet":"black","level":0}],"object":null,"images":[],"number":1},{"title":"Get the firmware and program the microcontroller","lines":[{"text":"The most complicated part is to get your microcontroller programmed. If you are lucky you know someone with a programmer for Freescale HC8 controllers. Most of us will not...","text_raw":"The most complicated part is to get your microcontroller programmed. If you are lucky you know someone with a programmer for Freescale HC8 controllers. Most of us will not...","bullet":"black","level":0},{"text":"Build a programmer. For this refer to the <a href=\"http:\/\/usbirboy.sourceforge.net\/prommer.html\" rel=\"nofollow\">original project description<\/a>. It is rather clear and complete.","text_raw":"Build a programmer. For this refer to the [http:\/\/usbirboy.sourceforge.net\/prommer.html|original project description]. It is rather clear and complete.","bullet":"black","level":0},{"text":"Download all necessary files: <a href=\"http:\/\/sourceforge.net\/projects\/usbirboy\/files\/usbirboy\/usbirboy-0.3.1\/usbirboy-0.3.1.tar.gz\/download\" rel=\"nofollow\">USB-IR-Boy Firmware<\/a>, <a href=\"http:\/\/sourceforge.net\/projects\/spgmr08\/files\/Spgmr08\/0.12\/spgmr08-0.12.tar.gz\/download\" rel=\"nofollow\">M68HC908 Programmer Utility<\/a> (or install it through your package manager).","text_raw":"Download all necessary files: [http:\/\/sourceforge.net\/projects\/usbirboy\/files\/usbirboy\/usbirboy-0.3.1\/usbirboy-0.3.1.tar.gz\/download|USB-IR-Boy Firmware], [http:\/\/sourceforge.net\/projects\/spgmr08\/files\/Spgmr08\/0.12\/spgmr08-0.12.tar.gz\/download|M68HC908 Programmer Utility] (or install it through your package manager).","bullet":"black","level":0},{"text":"Flash the firmware to the microcontroller: This part is well documented in the <a href=\"http:\/\/usbirboy.sourceforge.net\/docs.html\" rel=\"nofollow\">original project docs<\/a>, chapter <em>Programming the board MCU<\/em>.","text_raw":"Flash the firmware to the microcontroller: This part is well documented in the [http:\/\/usbirboy.sourceforge.net\/docs.html|original project docs], chapter ''Programming the board MCU''.","bullet":"black","level":0}],"object":null,"images":[{"imageid":9635,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/5oCFyEAvSdRHS6ZF"}],"number":2},{"title":"Build the receiver circuit","lines":[{"text":"Solder the few parts to the PCB. Use the attached file <strong>usb-ir-boy-SilkSCmp.pdf<\/strong> as an assembly drawing. Start with the resistor, followed by the IC socket and the crystal, then the capacitors and finally the IR receiver.","text_raw":"Solder the few parts to the PCB. Use the attached file '''usb-ir-boy-SilkSCmp.pdf''' as an assembly drawing. Start with the resistor, followed by the IC socket and the crystal, then the capacitors and finally the IR receiver.","bullet":"black","level":0},{"text":"If you have one at hand (or desoldered from the mouse where you got the USB cable), solder in a connector for the USB cable. Else, solder the cable directly onto the PCB. USB D+ is the green wire, D- is the white one.","text_raw":"If you have one at hand (or desoldered from the mouse where you got the USB cable), solder in a connector for the USB cable. Else, solder the cable directly onto the PCB. USB D+ is the green wire, D- is the white one.","bullet":"black","level":0},{"text":"Put the programmed microcontroller into the socket.","text_raw":"Put the programmed microcontroller into the socket.","bullet":"black","level":0},{"text":"Solder the LED wires to the board. We use it for testing only (because the firmware is only using it as a heartbeat, not as a receiving notification).","text_raw":"Solder the LED wires to the board. We use it for testing only (because the firmware is only using it as a heartbeat, not as a receiving notification).","bullet":"black","level":0},{"text":"Plug the unit into a USB port. The LED should blink in a constant rhythm.","text_raw":"Plug the unit into a USB port. The LED should blink in a constant rhythm.","bullet":"black","level":0},{"text":"Unsolder the LED and close the case.","text_raw":"Unsolder the LED and close the case.","bullet":"black","level":0}],"object":null,"images":[{"imageid":5989,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/NWfDtTLYBeu4UeaU"}],"number":3},{"title":"See if it works and install Linux driver","lines":[{"text":"Let's see if our device is talking to the USB port: <tt>lsusb -v -d fffe:0000<\/tt>","text_raw":"Let's see if our device is talking to the USB port: ``lsusb -v -d fffe:0000``","bullet":"black","level":0},{"text":"This should return something like: <tt>idVendor 0xfffe idProduct 0x0000 bcdDevice 0.31   iManufacturer 2 I made it! iProduct 1 IR BOY iSerial 0 bNumConfigurations 1<\/tt>","text_raw":"This should return something like: ``idVendor 0xfffe idProduct 0x0000 bcdDevice 0.31   iManufacturer 2 I made it! iProduct 1 IR BOY iSerial 0 bNumConfigurations 1``","bullet":"black","level":0},{"text":"Install the Linux Kernel module according to the original <a href=\"http:\/\/usbirboy.sourceforge.net\/docs.html\" rel=\"nofollow\">project documentation<\/a>, Chapter <em>Kernel module<\/em>.","text_raw":"Install the Linux Kernel module according to the original [http:\/\/usbirboy.sourceforge.net\/docs.html|project documentation], Chapter ''Kernel module''.","bullet":"black","level":0}],"object":null,"images":[],"number":4},{"title":"Configure LIRC and Amarok","lines":[{"text":"Install LIRC and the LIRC tools using your package manager. For general help with LIRC visit their homepage: <a href=\"http:\/\/lirc.org\/\" rel=\"nofollow\">http:\/\/lirc.org\/<\/a>","text_raw":"Install LIRC and the LIRC tools using your package manager. For general help with LIRC visit their homepage: http:\/\/lirc.org\/","bullet":"black","level":0},{"text":"I had some problems with irrecord. It recognised the remote control in raw mode and not as something more standard. The produced <tt>*.conf<\/tt> file was not working.","text_raw":"I had some problems with irrecord. It recognised the remote control in raw mode and not as something more standard. The produced ``*.conf`` file was not working.","bullet":"black","level":0},{"text":"Using a <tt>*.conf<\/tt> file for a similar remote control provided by the LIRC package is working fine for me. It seems that this is a known problem in the latest firmware version. On the mailing list Norbert Hohenbichler has reported this error.","text_raw":"Using a ``*.conf`` file for a similar remote control provided by the LIRC package is working fine for me. It seems that this is a known problem in the latest firmware version. On the mailing list Norbert Hohenbichler has reported this error.","bullet":"black","level":0},{"text":"To use Amarok with your freshly built USB-IR-Boy and your running LIRC daemon I used <a href=\"http:\/\/amarok.kde.org\/wiki\/RemoteControl\" rel=\"nofollow\">this description<\/a>. In short, make sure lircd and irexec are running, and configure your .lirc configuration in such a way that for a key press irexec is executed and sends a DCOP message to Amarok to do what you want. In this way you can use your remote control for all DCOP-capable software!","text_raw":"To use Amarok with your freshly built USB-IR-Boy and your running LIRC daemon I used [http:\/\/amarok.kde.org\/wiki\/RemoteControl|this description]. In short, make sure lircd and irexec are running, and configure your .lirc configuration in such a way that for a key press irexec is executed and sends a DCOP message to Amarok to do what you want. In this way you can use your remote control for all DCOP-capable software!","bullet":"black","level":0},{"text":"One example section of my .lirc file: <tt>begin  prog = irexec  remote = nad450  button = TapeA-Play  repeat = 2  config = dcop amarok player volumeUp end<\/tt>","text_raw":"One example section of my .lirc file: ``begin  prog = irexec  remote = nad450  button = TapeA-Play  repeat = 2  config = dcop amarok player volumeUp end``","bullet":"black","level":0}],"object":null,"images":[],"number":5}],"subject":"","summary":"Build a LIRC-compatible receiver that connects to your computer's USB port.","time_required":"","title":"USB-IR-Boy, Linux Remote Receiver","tools":[],"type":"project"},"guideid":"368"}