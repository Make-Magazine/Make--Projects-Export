{"device":"Arduino","url":"http:\/\/makeprojects.com\/Project\/Hot-Cold+LEDs\/2445\/1","guide":{"author":{"text":"Julius Schmiedel","userid":13393},"categories":["Arduino","Circuits"],"conclusion":"","difficulty":"Easy","documents":[],"flags":[{"title":"Weekend Project","flagid":"GUIDE_SPONSOR_RADIO_SHACK","text":"This project is part of RadioShack's The Great Create."}],"guideid":2445,"image":{"imageid":49719,"text":"http:\/\/guide-images.makeprojects.org\/igi\/PhiFTbRmBJaVi1mP"},"introduction":"<div class=\"videoBox_center\" style=\"width:592px;\"><iframe class=\"youtube-player\" type=\"text\/html\" width=\"560\" height=\"315\" src=\"http:\/\/www.youtube.com\/embed\/Y2yZ2q9G6bc?wmode=opaque\" frameborder=\"0\"><\/iframe><\/div>\n\n<p>In this project, we will combine an Arduino, a Ping sensor, and a small assortment of components, to build a project that senses distances as &quot;hot\/cold.&quot; Once built, we'll walk through the software running our basic &quot;sketch,&quot; (what an Arduino program is called) and then experiment with variations of the &quot;hot\/cold&quot; theme, all the while using the same circuit.<\/p>\n\n<p>For the Arduino sketch files provided, the V1 sketch is detailed below. It measures distance from the sensor. The farther you are from the sensor, the &quot;cold&quot; blue LED begins to glow, and then the closer you get to the sensor, the &quot;cold&quot; LED fades away and the &quot;hot&quot; red LED turns up to full brightness!<\/p>\n\n<p>The V2 sketch is a &quot;capture the ping&quot; game. At first, the &quot;cold&quot; blue LED glows, and every so often, the &quot;hot&quot; red LED will flash. When the red LED is on, try to move your hand in front of the sensor quickly. If you are fast enough, the red LED will flash; if you are too slow (or cheat!), the blue LED will flash.<\/p>\n\n<p>And finally, the V3 sketch is a simple &quot;hot\/cold&quot; switch. When no object is present in front of the sensor, the &quot;cold&quot; blue LED will produce a slow pulse. When it does sense an object, say when you sit down in front of your computer, the &quot;cold&quot; blue LED will turn off and the &quot;hot&quot; red one will shine at full brightness. This switch can be used to trigger other effects, such as waking your computer up from sleep mode.<\/p>","introduction_rendered":"<div class=\"videoBox_center\" style=\"width:592px;\"><iframe class=\"youtube-player\" type=\"text\/html\" width=\"560\" height=\"315\" src=\"http:\/\/www.youtube.com\/embed\/Y2yZ2q9G6bc?wmode=opaque\" frameborder=\"0\"><\/iframe><\/div>\n\n<p>In this project, we will combine an Arduino, a Ping sensor, and a small assortment of components, to build a project that senses distances as &quot;hot\/cold.&quot; Once built, we'll walk through the software running our basic &quot;sketch,&quot; (what an Arduino program is called) and then experiment with variations of the &quot;hot\/cold&quot; theme, all the while using the same circuit.<\/p>\n\n<p>For the Arduino sketch files provided, the V1 sketch is detailed below. It measures distance from the sensor. The farther you are from the sensor, the &quot;cold&quot; blue LED begins to glow, and then the closer you get to the sensor, the &quot;cold&quot; LED fades away and the &quot;hot&quot; red LED turns up to full brightness!<\/p>\n\n<p>The V2 sketch is a &quot;capture the ping&quot; game. At first, the &quot;cold&quot; blue LED glows, and every so often, the &quot;hot&quot; red LED will flash. When the red LED is on, try to move your hand in front of the sensor quickly. If you are fast enough, the red LED will flash; if you are too slow (or cheat!), the blue LED will flash.<\/p>\n\n<p>And finally, the V3 sketch is a simple &quot;hot\/cold&quot; switch. When no object is present in front of the sensor, the &quot;cold&quot; blue LED will produce a slow pulse. When it does sense an object, say when you sit down in front of your computer, the &quot;cold&quot; blue LED will turn off and the &quot;hot&quot; red one will shine at full brightness. This switch can be used to trigger other effects, such as waking your computer up from sleep mode.<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12268262\">Arduino Uno Board<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2261723\">USB cable<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12326359\">Parallax &amp;apos;Ping&amp;apos; Sensor<\/a><\/li><li><a href=\"http:\/\/www.makershed.com\/product_p\/mkseeed3.htm\">Breadboard Jumper Wires<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062306\">Carbon-film resistor assortment pack<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12582714\">Super-bright Blue LED<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12582712\">Super-bright Red LED<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12554426\">Resistor, 56\u03a9, 1\/4W<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12554430\">Resistor, 150\u03a9, 1\/4W<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"Arduino Uno Board","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12268262","thumbnail":""},{"text":"USB cable","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2261723","thumbnail":""},{"text":"Parallax &apos;Ping&apos; Sensor","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12326359","thumbnail":""},{"text":"Breadboard Jumper Wires","notes":"","url":"http:\/\/www.makershed.com\/product_p\/mkseeed3.htm","thumbnail":""},{"text":"Carbon-film resistor assortment pack","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062306","thumbnail":""},{"text":"Super-bright Blue LED","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12582714","thumbnail":""},{"text":"Super-bright Red LED","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12582712","thumbnail":""},{"text":"Resistor, 56\u03a9, 1\/4W","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12554426","thumbnail":""},{"text":"Resistor, 150\u03a9, 1\/4W","notes":"from RadioShack.","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=12554430","thumbnail":""}],"prereqs":[],"steps":[{"title":"Gather all your components.","lines":[{"text":"Believe it or not, these are all the parts you will require for this build!","text_raw":"Believe it or not, these are all the parts you will require for this build!","bullet":"black","level":0},{"text":"NOTE: Resistors listed in subsequent steps are for the LEDs suggested in the parts list. If you want to use different LEDs, you'll have to calculate the resistor required using Ohm's Law. Search online for &quot;LED calculator&quot; to determine the resistor needed. <em>The 500-pack of resistors is recommended so you always have a range of options available.<\/em>","text_raw":"NOTE: Resistors listed in subsequent steps are for the LEDs suggested in the parts list. If you want to use different LEDs, you'll have to calculate the resistor required using Ohm's Law. Search online for \"LED calculator\" to determine the resistor needed. ''The 500-pack of resistors is recommended so you always have a range of options available.''","bullet":"icon_note","level":0},{"text":"First, connect the breadboard to the Arduino. Using two jumper wires: connect one wire from the 5V pin on the Arduino to the power rail on the breadboard. Have the other go from the GND pin to the ground rail.","text_raw":"First, connect the breadboard to the Arduino. Using two jumper wires: connect one wire from the 5V pin on the Arduino to the power rail on the breadboard. Have the other go from the GND pin to the ground rail.","bullet":"black","level":0},{"text":"Take a look at the Ping sensor. You\u2018ll notice three pins next to each other, labeled GND, 5V, and Sig (as in &quot;Signal&quot;). Now, let's wire up the connections necessary to supply power, ground, and signal to the Ping Sensor.","text_raw":"Take a look at the Ping sensor. You\u2018ll notice three pins next to each other, labeled GND, 5V, and Sig (as in \"Signal\"). Now, let's wire up the connections necessary to supply power, ground, and signal to the Ping Sensor.","bullet":"black","level":0},{"text":"Decide where you want your Ping sensor located on the breadboard. Make a connection between the ground rail and the sensor's GND pin row. Add another wire between the power rail and the sensor's 5V pin row. Alternatively, you could use short pieces of 20 AWG hookup wire.","text_raw":"Decide where you want your Ping sensor located on the breadboard. Make a connection between the ground rail and the sensor's GND pin row. Add another wire between the power rail and the sensor's 5V pin row. Alternatively, you could use short pieces of 20 AWG hookup wire.","bullet":"black","level":0},{"text":"Lastly, make a connection between the Ping sensor's Sig(nal) pin row, and the Arduino pin labeled number 7. This connection will work in two directions: It will be used to send the &quot;ping\u201c from the sensor, and also transmit the signal coming back from an object in front of the sensor.","text_raw":"Lastly, make a connection between the Ping sensor's Sig(nal) pin row, and the Arduino pin labeled number 7. This connection will work in two directions: It will be used to send the \"ping\u201c from the sensor, and also transmit the signal coming back from an object in front of the sensor.","bullet":"black","level":0}],"object":null,"images":[{"imageid":49533,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/WNpxmMNJpItVcwSN"},{"imageid":49532,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/ZNdODwB3kCI4iQXK"},{"imageid":49488,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/ZuDnvuEwuYPgiyHy"}],"number":1},{"title":"Place the Ping sensor.","lines":[{"text":"Place the Ping sensor on the board so that the connections line up with the wires you just placed. Carefully check to ensure all the connections are correct. Trace the connection from the Arduino GND pin to the ground rail, to the GND pin on the Ping sensor. Do the same for the supply voltage.","text_raw":"Place the Ping sensor on the board so that the connections line up with the wires you just placed. Carefully check to ensure all the connections are correct. Trace the connection from the Arduino GND pin to the ground rail, to the GND pin on the Ping sensor. Do the same for the supply voltage.","bullet":"black","level":0},{"text":"Next, use two jumper wires which will eventually connect the LEDs to the Arduino. Place a wire from the Arduino pin 6 to the row where you want to place your blue LED. Do the same for the row intended for the red LED, and connect it to the Arduino pin 5.","text_raw":"Next, use two jumper wires which will eventually connect the LEDs to the Arduino. Place a wire from the Arduino pin 6 to the row where you want to place your blue LED. Do the same for the row intended for the red LED, and connect it to the Arduino pin 5.","bullet":"black","level":0},{"text":"If you\u2018re curious about why I left two rows empty in-between the two jumper wires on the breadboard, that's because we need a resistor for each LED (see next step for details). The resistor values are calculated by using the rated voltage and current of the LED, and the voltage supplied, and Ohm's Law.","text_raw":"If you\u2018re curious about why I left two rows empty in-between the two jumper wires on the breadboard, that's because we need a resistor for each LED (see next step for details). The resistor values are calculated by using the rated voltage and current of the LED, and the voltage supplied, and Ohm's Law.","bullet":"icon_note","level":0}],"object":null,"images":[{"imageid":49534,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/VFvfUOGulsQUUxRA"},{"imageid":49489,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/1CKGYEsOVOfNBMxU"}],"number":2},{"title":"Connect the LEDs and resistors.","lines":[{"text":"First, take the 150\u03a9 resistor (brown-green-brown) and make a connection between the ground rail and the row next to the row connected to pin 5 (driving the red LED). Using the 56\u03a9 resistor (green-blue-black), do the same for the blue LED, connecting the ground rail and the row next to the one connected to pin 6 on the Arduino.","text_raw":"First, take the 150\u03a9 resistor (brown-green-brown) and make a connection between the ground rail and the row next to the row connected to pin 5 (driving the red LED). Using the 56\u03a9 resistor (green-blue-black), do the same for the blue LED, connecting the ground rail and the row next to the one connected to pin 6 on the Arduino.","bullet":"black","level":0},{"text":"All we need to do now is connect our LEDs to the board. Since LEDs, like all diodes, work only in one direction, you have to make sure to place them so the shorter leg, called cathode, is connected to GND through the resistor. The &quot;positive\u201c side, called anode, has the longer leg and will be connected to the Arduino via a jumper wire.","text_raw":"All we need to do now is connect our LEDs to the board. Since LEDs, like all diodes, work only in one direction, you have to make sure to place them so the shorter leg, called cathode, is connected to GND through the resistor. The \"positive\u201c side, called anode, has the longer leg and will be connected to the Arduino via a jumper wire.","bullet":"black","level":0},{"text":"Place the red LED so the shorter leg will be connected to the resistor, and the longer leg goes in the row which is connected to pin 5. Do the same for the blue LED, connecting its cathode to the resistor, and the anode to the row going to pin 6 of your Arduino.","text_raw":"Place the red LED so the shorter leg will be connected to the resistor, and the longer leg goes in the row which is connected to pin 5. Do the same for the blue LED, connecting its cathode to the resistor, and the anode to the row going to pin 6 of your Arduino.","bullet":"black","level":0},{"text":"A simple visual check now will save time in the future. Trace the connections to make sure everything is in its designated place. Once you're ready to load the software sketches, continue to the next step.","text_raw":"A simple visual check now will save time in the future. Trace the connections to make sure everything is in its designated place. Once you're ready to load the software sketches, continue to the next step.","bullet":"icon_reminder","level":0}],"object":null,"images":[{"imageid":49535,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/MCjiWaqjfHqqWF4X"},{"imageid":49490,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/xWeXSVOtZaVaOYWa"},{"imageid":49491,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/SfKCmJs4ShHVuCI5"}],"number":3},{"title":"Watch them glow!","lines":[{"text":"When everything looks okay, we\u2018re done building the hardware part of our project. Now, fire up your computer. If this is your first Arduino build, download the Arduino Software from <a href=\"http:\/\/arduino.cc\" rel=\"nofollow\">http:\/\/arduino.cc<\/a>","text_raw":"When everything looks okay, we\u2018re done building the hardware part of our project. Now, fire up your computer. If this is your first Arduino build, download the Arduino Software from http:\/\/arduino.cc","bullet":"black","level":0},{"text":"A lot of makers use the <em>blink<\/em> tutorial for their first build. It's a great primer for understanding the Arduino SDK, or software development kit: <a href=\"http:\/\/arduino.cc\/en\/Tutorial\/blink\" rel=\"nofollow\">http:\/\/arduino.cc\/en\/Tutorial\/blink<\/a>","text_raw":"A lot of makers use the ''blink'' tutorial for their first build. It's a great primer for understanding the Arduino SDK, or software development kit: http:\/\/arduino.cc\/en\/Tutorial\/blink","bullet":"icon_note","level":0},{"text":"Start the Arduino Software, and <a href=\"https:\/\/github.com\/Make-Magazine\/HotCold-LEDs\" rel=\"nofollow\">download the Hot\/Cold sketch files for this project<\/a>. Begin with the V1 sketch, which is a &quot;hot\/cold&quot; proximity sketch. Hit the Upload button in the Arduino software and the sketch will compile.","text_raw":"Start the Arduino Software, and [https:\/\/github.com\/Make-Magazine\/HotCold-LEDs|download the Hot\/Cold sketch files for this project]. Begin with the V1 sketch, which is a \"hot\/cold\" proximity sketch. Hit the Upload button in the Arduino software and the sketch will compile.","bullet":"black","level":0},{"text":"Use your hand or an object to quickly test the Ping sensor and see how it works. Now that the hardware of your Hot\/Cold LEDs is working, we will take a look at the code in the subsequent steps.","text_raw":"Use your hand or an object to quickly test the Ping sensor and see how it works. Now that the hardware of your Hot\/Cold LEDs is working, we will take a look at the code in the subsequent steps.","bullet":"black","level":0},{"text":"The V2 &amp; V3 sketches are additional programs that use the same Arduino and breadboard hardware configuration to produce variations of the &quot;hot\/cold&quot; theme. Once you understand the V1 sketch, upload the V2 &amp; V3 sketches and experiment with them. Then, build your own hot\/cold project!","text_raw":"The V2 & V3 sketches are additional programs that use the same Arduino and breadboard hardware configuration to produce variations of the \"hot\/cold\" theme. Once you understand the V1 sketch, upload the V2 & V3 sketches and experiment with them. Then, build your own hot\/cold project!","bullet":"icon_note","level":0}],"object":null,"images":[{"imageid":49625,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/vSlqTKG2kl1eSvjD"},{"imageid":49626,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/IhHDX63ZBjcHSLGX"}],"number":4},{"title":"Calculate the ''ping'' time.","lines":[{"text":"The first lines of code are a basic configuration: declare the pins used for the sensor and the LEDs, measure the &quot;distance&quot; which will be used to store the distance (in cm), and determine the &quot;pulseDuration&quot; which stores the time it takes between sending the <em>ping<\/em> and receiving it again by the sensor.","text_raw":"The first lines of code are a basic configuration: declare the pins used for the sensor and the LEDs, measure the \"distance\" which will be used to store the distance (in cm), and determine the \"pulseDuration\" which stores the time it takes between sending the ''ping'' and receiving it again by the sensor.","bullet":"black","level":0},{"text":"In the &quot;loop()&quot; - the main program being run by the Arduino - you can see the three steps used to measure the distance of an object from the sensor. First, it sets the SensorPin to output and emits a 5 microsecond long impulse, the <em>ping.<\/em> Then, the SensorPin gets switched to input, and the program counts the time for the <em>ping<\/em> to return.","text_raw":"In the \"loop()\" - the main program being run by the Arduino - you can see the three steps used to measure the distance of an object from the sensor. First, it sets the SensorPin to output and emits a 5 microsecond long impulse, the ''ping.'' Then, the SensorPin gets switched to input, and the program counts the time for the ''ping'' to return.","bullet":"black","level":0},{"text":"The &quot;pulseDuration&quot; first gets divided by two, because we measure the time the ping takes going from and back to the sensor. Then it gets divided by 29. Why 29? Our measurement is in microseconds, and <a href=\"http:\/\/arduino.cc\/en\/Tutorial\/Ping\" rel=\"nofollow\">sound travels at 1cm per 29 microseconds<\/a>.","text_raw":"The \"pulseDuration\" first gets divided by two, because we measure the time the ping takes going from and back to the sensor. Then it gets divided by 29. Why 29? Our measurement is in microseconds, and [http:\/\/arduino.cc\/en\/Tutorial\/Ping|sound travels at 1cm per 29 microseconds].","bullet":"black","level":0}],"object":null,"images":[{"imageid":49511,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/fMkQQWhYyhtXwqFR"}],"number":5},{"title":"The Red LED code.","lines":[{"text":"Given the distance from an object, the program calculates output for the LEDs. First, let's take a look at the code driving the red LED.","text_raw":"Given the distance from an object, the program calculates output for the LEDs. First, let's take a look at the code driving the red LED.","bullet":"black","level":0},{"text":"The Parallax Ping Sensor can measure distances up to 300cm, but we will be restricting the device (in software) to measure between 0-50cm.","text_raw":"The Parallax Ping Sensor can measure distances up to 300cm, but we will be restricting the device (in software) to measure between 0-50cm.","bullet":"icon_note","level":0},{"text":"The red LED will light up starting at 25cm, and will increase to full brightness at 0cm. First, we check if the object is within 25cm. If true, we need to translate the distance of 25-0cm into an integer value between 0 and 255, which determines the brightness of the LED.","text_raw":"The red LED will light up starting at 25cm, and will increase to full brightness at 0cm. First, we check if the object is within 25cm. If true, we need to translate the distance of 25-0cm into an integer value between 0 and 255, which determines the brightness of the LED.","bullet":"black","level":0},{"text":"Don't let the similar numbers confuse you. The value 255 is considered &quot;always on&quot; to the Arduino, whereas 0 is considered &quot;off.&quot; The measurement and brightness intensity operate so that \u226525cm=0 and 0cm=255.","text_raw":"Don't let the similar numbers confuse you. The value 255 is considered \"always on\" to the Arduino, whereas 0 is considered \"off.\" The measurement and brightness intensity operate so that \u226525cm=0 and 0cm=255.","bullet":"icon_note","level":0}],"object":null,"images":[{"imageid":49512,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/VVqOWubXLITBTbUF"}],"number":6},{"title":"The Blue LED code.","lines":[{"text":"For the blue LED, it's a bit more complex. Since it should light up between 50-25cm, but fade out between 25-10cm, we need to add an additional &quot;if&quot; statement to the code. Again, there is calculation to translate the distance of 10-25cm into an integer value between 0 and 255.","text_raw":"For the blue LED, it's a bit more complex. Since it should light up between 50-25cm, but fade out between 25-10cm, we need to add an additional \"if\" statement to the code. Again, there is calculation to translate the distance of 10-25cm into an integer value between 0 and 255.","bullet":"black","level":0},{"text":"Then we do another translation for the case of distance being between 25 and 50cm. This time, an input between 25 and 50 gets translated into an integer between 255 and 0, respectively.","text_raw":"Then we do another translation for the case of distance being between 25 and 50cm. This time, an input between 25 and 50 gets translated into an integer between 255 and 0, respectively.","bullet":"black","level":0},{"text":"If the Distance is not within the two specified ranges in the &quot;if&quot; and &quot;else if&quot; statements above, the blue LED is &quot;0,&quot; or &quot;off&quot;.","text_raw":"If the Distance is not within the two specified ranges in the \"if\" and \"else if\" statements above, the blue LED is \"0,\" or \"off\".","bullet":"icon_note","level":0}],"object":null,"images":[{"imageid":49585,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/OwEfZklYNpWKnYv3"}],"number":7},{"title":"Experiment with Hot\/Cold","lines":[{"text":"The last instruction is a &quot;delay()&quot; of 20 milliseconds, which gives us approximately 50 loops per second. This could be called the <em>polling interval,<\/em> or refresh rate, for our code.","text_raw":"The last instruction is a \"delay()\" of 20 milliseconds, which gives us approximately 50 loops per second. This could be called the ''polling interval,'' or refresh rate, for our code.","bullet":"black","level":0},{"text":"Since it takes some time to execute the instructions in our loop, the actual rate is slightly lower, but there are still plenty of updates per second to trick the human eye.","text_raw":"Since it takes some time to execute the instructions in our loop, the actual rate is slightly lower, but there are still plenty of updates per second to trick the human eye.","bullet":"icon_note","level":0},{"text":"The V2 and V3 sketches provide other examples of how to turn this exact same circuit configuration into another project, including a &quot;capture the ping&quot; game and a &quot;hot\/cold&quot; on\/off switch. Just download the sketches, open them in the Arduino Software, and upload them! (Comments in the sketches tell you exactly what they do.)","text_raw":"The V2 and V3 sketches provide other examples of how to turn this exact same circuit configuration into another project, including a \"capture the ping\" game and a \"hot\/cold\" on\/off switch. Just download the sketches, open them in the Arduino Software, and upload them! (Comments in the sketches tell you exactly what they do.)","bullet":"black","level":0},{"text":"Now that you know all about the hardware <em>and<\/em> software for this build, you should hack, modify, and improve Hot\/Cold LEDs by turning it into your own project!","text_raw":"Now that you know all about the hardware ''and'' software for this build, you should hack, modify, and improve Hot\/Cold LEDs by turning it into your own project!","bullet":"black","level":0}],"object":null,"images":[{"imageid":49584,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/wBkbafYENtvD5oSy"}],"number":8}],"subject":"","summary":"With an Arduino, ultrasonic distance sensor, and some LEDs, we are going to build a classic \"hot\/cold\" project.","time_required":"30 to 60 minutes","title":"Hot\/Cold LEDs","tools":[],"type":"project"},"guideid":"2445"}