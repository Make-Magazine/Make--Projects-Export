{"device":"Arduino","url":"http:\/\/makeprojects.com\/Project\/Labyrinth+Video+Game\/2894\/1","guide":{"author":{"text":"Baxter Eldridge","userid":16188},"categories":["Arduino","Programming"],"conclusion":"","difficulty":"Moderate","documents":[],"flags":[{"title":"User-Contributed Project","flagid":"GUIDE_USER_CONTRIBUTED","text":"This project guide is not managed by MAKE staff."}],"guideid":2894,"image":{"imageid":54844,"text":"http:\/\/guide-images.makeprojects.org\/igi\/XXpoXCGPcgXehC1T"},"introduction":"<p>This guide will teach you how to build and program your own accelerometer-controlled maze game. It does assume a basic knowledge of soldering, breadboards, and programming an Arduino. By the end of this guide you should be able to make your own maze by editing the code and then solve it by tilting your game to move the ball. The program itself is fairly complicated but fully commented and the main components of it are described in this guide.<\/p>","introduction_rendered":"<p>This guide will teach you how to build and program your own accelerometer-controlled maze game. It does assume a basic knowledge of soldering, breadboards, and programming an Arduino. By the end of this guide you should be able to make your own maze by editing the code and then solve it by tilting your game to move the ball. The program itself is fairly complicated but fully commented and the main components of it are described in this guide.<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/www.adafruit.com\/products\/338\">Nokia 5110\/3310 monochrome<\/a><\/li><li><a href=\"http:\/\/www.hobbyengineering.com\/H1581.html\">Accelerometer, Memsic MX2125<\/a><\/li><li><a href=\"http:\/\/www.makershed.com\/ProductDetails.asp?ProductCode=MKSEEED3\">Jumper Wire<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2734155\">Breadboard<\/a><\/li><li><a href=\"http:\/\/www.makershed.com\/ProductDetails.asp?ProductCode=MKSP4\">Arduino Uno<\/a><\/li><li><a href=\"http:\/\/www.jameco.com\/webapp\/wcs\/stores\/servlet\/Product_10001_10001_198731_-1\">9 Volt alkaline battery<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/9_volt_battery_case\">9 volt battery case<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Arduino_compatible_power_plug\">Arduino compatible power plug<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Logic_Level_Shifter_Chip_HEF4050BP\">Logic Level Shifter Chip HEF4050BP<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Cardboard_or_MDF_%281_8%22%29\">Cardboard or MDF (1\/8&amp;quot;)<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/1_4-20_Machine_Screw\">1\/4-20 Machine Screw<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/1_4-20_Nut\">1\/4-20 Nut<\/a><\/li><li><a href=\"http:\/\/www.makershed.com\/product_p\/mkrs1.htm\">Tape, masking<\/a><\/li><\/ul><\/div><div class=\"tools\"><strong>Tools<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/Soldering_Iron_and_rosin_core_solder.\">Soldering Iron and rosin core solder.<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"Nokia 5110\/3310 monochrome","notes":"From Adafruit, this includes a logic level shifter chip necessary for this project: http:\/\/www.adafruit.com\/products\/338","url":"http:\/\/www.adafruit.com\/products\/338","thumbnail":""},{"text":"Accelerometer, Memsic MX2125","notes":"","url":"http:\/\/www.hobbyengineering.com\/H1581.html","thumbnail":""},{"text":"Jumper Wire","notes":"A pack with red, orange, yellow, green, blue, white, and black","url":"http:\/\/www.makershed.com\/ProductDetails.asp?ProductCode=MKSEEED3","thumbnail":""},{"text":"Breadboard","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2734155","thumbnail":""},{"text":"Arduino Uno","notes":"Board and programming cable","url":"http:\/\/www.makershed.com\/ProductDetails.asp?ProductCode=MKSP4","thumbnail":""},{"text":"9 Volt alkaline battery","notes":"","url":"http:\/\/www.jameco.com\/webapp\/wcs\/stores\/servlet\/Product_10001_10001_198731_-1","thumbnail":""},{"text":"9 volt battery case","notes":"","url":"http:\/\/makeprojects.com\/Item\/9_volt_battery_case","thumbnail":""},{"text":"Arduino compatible power plug","notes":"","url":"http:\/\/makeprojects.com\/Item\/Arduino_compatible_power_plug","thumbnail":""},{"text":"Logic Level Shifter Chip HEF4050BP","notes":"Included when you order the Nokia 5110 monochrome from Adafruit","url":"http:\/\/makeprojects.com\/Item\/Logic_Level_Shifter_Chip_HEF4050BP","thumbnail":""},{"text":"Cardboard or MDF (1\/8&quot;)","notes":"Minimum size 2.5&quot; x 4&quot;","url":"http:\/\/makeprojects.com\/Item\/Cardboard_or_MDF_%281_8%22%29","thumbnail":""},{"text":"1\/4-20 Machine Screw","notes":"","url":"http:\/\/makeprojects.com\/Item\/1_4-20_Machine_Screw","thumbnail":""},{"text":"1\/4-20 Nut","notes":"","url":"http:\/\/makeprojects.com\/Item\/1_4-20_Nut","thumbnail":""},{"text":"Tape, masking","notes":"","url":"http:\/\/www.makershed.com\/product_p\/mkrs1.htm","thumbnail":""}],"prereqs":[],"steps":[{"title":"Assembling Your Game","lines":[{"text":"Create your breadboard-Arduino setup:","text_raw":"Create your breadboard-Arduino setup:","bullet":"black","level":0},{"text":"Cut a piece of cardboard or pre-holed 1\/8&quot; MDF that is 3&quot; x 4&quot;.","text_raw":"Cut a piece of cardboard or pre-holed 1\/8\" MDF that is 3\" x 4\".","bullet":"black","level":1},{"text":"Cut two 2&quot;-long strips of foam tape and put one on each corner of the bottom of your breadboard. Press your breadboard on to one side of the cardboard\/MDF rectangle as shown.","text_raw":"Cut two 2\"-long strips of foam tape and put one on each corner of the bottom of your breadboard. Press your breadboard on to one side of the cardboard\/MDF rectangle as shown.","bullet":"black","level":1},{"text":"Do the same for your Arduino or thread two or three 1\/4-20 screws and corresponding nuts through your pre-holed board (or poke holes in your cardboard using a pencil or similar) and the mounting holes on the Arduino.","text_raw":"Do the same for your Arduino or thread two or three 1\/4-20 screws and corresponding nuts through your pre-holed board (or poke holes in your cardboard using a pencil or similar) and the mounting holes on the Arduino.","bullet":"black","level":1},{"text":"Solder the header pins on to your Nokia LCD screen. A step-by-step guide can be found <a href=\"http:\/\/ladyada.net\/products\/nokia5110\/\" rel=\"nofollow\">here<\/a>.","text_raw":"Solder the header pins on to your Nokia LCD screen. A step-by-step guide can be found [http:\/\/ladyada.net\/products\/nokia5110\/|here].","bullet":"black","level":0},{"text":"Take a strip of masking tape (approximately 4&quot;) and wrap it into a loop with the sticky side facing out. Place the loop against the back of your screen and then replace it on your board. Make sure the screen is as far to the left as possible.","text_raw":"Take a strip of masking tape (approximately 4\") and wrap it into a loop with the sticky side facing out. Place the loop against the back of your screen and then replace it on your board. Make sure the screen is as far to the left as possible.","bullet":"black","level":0}],"object":null,"images":[{"imageid":54840,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/aGwCLfMxr1RudSNH"},{"imageid":54838,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/ylKLwbHDgfvg1gj5"},{"imageid":54842,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/XKdo4vp3OmfuSMa2"}],"number":1},{"title":"Wiring Your Game","lines":[{"text":"Wire your screen up with your logic level shifter chip (included in the Adafruit package). A guide can be found <a href=\"http:\/\/ladyada.net\/products\/nokia5110\/\" rel=\"nofollow\">here<\/a>. The next step in this guide also has a series of step-by-step pictures for the complete wiring of the game.","text_raw":"Wire your screen up with your logic level shifter chip (included in the Adafruit package). A guide can be found [http:\/\/ladyada.net\/products\/nokia5110\/|here]. The next step in this guide also has a series of step-by-step pictures for the complete wiring of the game.","bullet":"black","level":0},{"text":"Make sure that both your LCD and your logic level shifter chip are as far to the left of your board as possible, as shown in the picture. Otherwise you may not have room for the accelerometer.","text_raw":"Make sure that both your LCD and your logic level shifter chip are as far to the left of your board as possible, as shown in the picture. Otherwise you may not have room for the accelerometer.","bullet":"black","level":0},{"text":"Add your accelerometer to your board. Take care to orient the accelerometer such that the +5V\/Xout side points toward the top of the screen. Otherwise the directions that the ball moves when the game is tilted will be wrong. A complete wiring guide can be found <a href=\"http:\/\/arduino.cc\/en\/Tutorial\/Memsic2125?from=Tutorial.AccelerometerMemsic2125\" rel=\"nofollow\">here<\/a>.","text_raw":"Add your accelerometer to your board. Take care to orient the accelerometer such that the +5V\/Xout side points toward the top of the screen. Otherwise the directions that the ball moves when the game is tilted will be wrong. A complete wiring guide can be found [http:\/\/arduino.cc\/en\/Tutorial\/Memsic2125?from=Tutorial.AccelerometerMemsic2125|here].","bullet":"black","level":0},{"text":"A diagram of my breadboard can be seen to the left. It also includes all the wire color conventions which I used which may make reading the other steps in this tutorial easier. This diagram and the wiring schematic were made using Fritzing.","text_raw":"A diagram of my breadboard can be seen to the left. It also includes all the wire color conventions which I used which may make reading the other steps in this tutorial easier. This diagram and the wiring schematic were made using Fritzing.","bullet":"black","level":0}],"object":null,"images":[{"imageid":53510,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/4bTMIBG6rAJa3DdP"},{"imageid":54472,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/6WeXaKVrhS6UyBvx"},{"imageid":53505,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/yYxnVfTwebKoXNYZ"}],"number":2},{"title":"Wiring Step-By-Step","lines":[{"text":"First wire the LCD to the logic level shifter chip, power, and ground, as shown in the first picture.","text_raw":"First wire the LCD to the logic level shifter chip, power, and ground, as shown in the first picture.","bullet":"black","level":0},{"text":"Then wire the logic level shifter chip to the Arduino. This can be seen in picture two and completes the connections necessary for the LCD screen.","text_raw":"Then wire the logic level shifter chip to the Arduino. This can be seen in picture two and completes the connections necessary for the LCD screen.","bullet":"black","level":0},{"text":"Finally you will need to connect the accelerometer to the Arduino, power, and ground. These connections are diagrammed in the third picture.","text_raw":"Finally you will need to connect the accelerometer to the Arduino, power, and ground. These connections are diagrammed in the third picture.","bullet":"black","level":0}],"object":null,"images":[{"imageid":54848,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/H11g4lmKt3bmLomO"},{"imageid":54849,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/YahiDNRY64TvBSqj"},{"imageid":54850,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/w3FqCs3qYANtpEd4"}],"number":3},{"title":"Setting Up Your Program","lines":[{"text":"Install the latest version of the Arduino IDE if you have not already. The installation link can be found <a href=\"http:\/\/arduino.cc\/en\/Main\/Software\" rel=\"nofollow\">here<\/a>.","text_raw":"Install the latest version of the Arduino IDE if you have not already. The installation link can be found [http:\/\/arduino.cc\/en\/Main\/Software|here].","bullet":"black","level":0},{"text":"Install the PCD8544 library and GFX library found in the Adafruit how-to link for the LCD screen (previously listed under the &quot;Assembling Your Game&quot; step). The links for downloading are under the &quot;Testing&quot; heading.","text_raw":"Install the PCD8544 library and GFX library found in the Adafruit how-to link for the LCD screen (previously listed under the \"Assembling Your Game\" step). The links for downloading are under the \"Testing\" heading.","bullet":"black","level":0},{"text":"To install a library first download it from the internet. Then, after extracting the files from the .zip file you downloaded, drag and drop the library of unzipped files into the &quot;library&quot; folder. This is found in the Arduino software folder. A complete guide from Adafruit can be found <a href=\"http:\/\/www.ladyada.net\/library\/arduino\/libraries.html\" rel=\"nofollow\">here<\/a>.","text_raw":"To install a library first download it from the internet. Then, after extracting the files from the .zip file you downloaded, drag and drop the library of unzipped files into the \"library\" folder. This is found in the Arduino software folder. A complete guide from Adafruit can be found [http:\/\/www.ladyada.net\/library\/arduino\/libraries.html|here].","bullet":"black","level":0},{"text":"The getPixel command in the original PCD8544 library does not work correctly. For this reason you will need to open the file and make the edit pictured here. I opened it in Atmel studio (found for free <a href=\"http:\/\/www.atmel.com\/tools\/ATMELSTUDIO.aspx\" rel=\"nofollow\">here<\/a>) which makes it a lot easier to figure out what's what.","text_raw":"The getPixel command in the original PCD8544 library does not work correctly. For this reason you will need to open the file and make the edit pictured here. I opened it in Atmel studio (found for free [http:\/\/www.atmel.com\/tools\/ATMELSTUDIO.aspx|here]) which makes it a lot easier to figure out what's what.","bullet":"icon_note","level":0},{"text":"Under the heading that says <tt>else<\/tt>, indicated by the yellow box, comment out the existing code, shown in the red box, and type in the updated code found in the green box.","text_raw":"Under the heading that says ``else``, indicated by the yellow box, comment out the existing code, shown in the red box, and type in the updated code found in the green box.","bullet":"black","level":1}],"object":null,"images":[{"imageid":53885,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/kbqKmQDjiK3FLsEw"}],"number":4},{"title":"Inserting The Code","lines":[{"text":"Now that you have everything set up you're ready to upload the code to your Arduino! You can get the code <a href=\"https:\/\/docs.google.com\/document\/d\/1_p4reK2iZoP3F1gvVCab73Ud6T_xPebgxcL_Pa05azE\/edit\" rel=\"nofollow\">here<\/a>.","text_raw":"Now that you have everything set up you're ready to upload the code to your Arduino! You can get the code [https:\/\/docs.google.com\/document\/d\/1_p4reK2iZoP3F1gvVCab73Ud6T_xPebgxcL_Pa05azE\/edit|here].","bullet":"black","level":0},{"text":"To get it on your Arduino:","text_raw":"To get it on your Arduino:","bullet":"black","level":0},{"text":"Open the Arduino software on your computer.","text_raw":"Open the Arduino software on your computer.","bullet":"black","level":1},{"text":"Click on the &quot;new&quot; button which sits directly to the right of the upload button.","text_raw":"Click on the \"new\" button which sits directly to the right of the upload button.","bullet":"black","level":1},{"text":"Copy and paste the entire code found in the link above into this sketch.","text_raw":"Copy and paste the entire code found in the link above into this sketch.","bullet":"black","level":1},{"text":"Save the program naming it whatever you want. I recommend a  name that describes the program accurately so that it is easier to identify when you want to find it later. For example, I named mine Maze_Game_V2 since it is the second version of my program for my maze game","text_raw":"Save the program naming it whatever you want. I recommend a  name that describes the program accurately so that it is easier to identify when you want to find it later. For example, I named mine Maze_Game_V2 since it is the second version of my program for my maze game","bullet":"black","level":1},{"text":"Plug in your Arduino, select the correct Arduino model and serial port (under Tools\/Board and Tools\/Serial Port respectively) and click the upload icon.","text_raw":"Plug in your Arduino, select the correct Arduino model and serial port (under Tools\/Board and Tools\/Serial Port respectively) and click the upload icon.","bullet":"black","level":0}],"object":null,"images":[],"number":5},{"title":"How The Code Works","lines":[{"text":"The ball is moved around by mapping the tilting of the screen to a certain range of speeds (in this case from 0 to 3 pixels per loop through the program). In the code the maximum speed is set to the radius of the ball so as to stop the ball from jumping through the walls when it is at top speed.","text_raw":"The ball is moved around by mapping the tilting of the screen to a certain range of speeds (in this case from 0 to 3 pixels per loop through the program). In the code the maximum speed is set to the radius of the ball so as to stop the ball from jumping through the walls when it is at top speed.","bullet":"black","level":0},{"text":"A maximum speed in any direction is set using a series of <tt>if<\/tt> statements which limit the maximum and minimum values which the Arduino will read from the accelerometer.","text_raw":"A maximum speed in any direction is set using a series of ``if`` statements which limit the maximum and minimum values which the Arduino will read from the accelerometer.","bullet":"black","level":1},{"text":"Stopping the ball from going off the screen is controlled by a series of <tt>if<\/tt> statements which limit the maximum and minimum positions of the ball on the screen.","text_raw":"Stopping the ball from going off the screen is controlled by a series of ``if`` statements which limit the maximum and minimum positions of the ball on the screen.","bullet":"black","level":0},{"text":"Collision detection is performed by a group of <tt>if<\/tt> statements which check four separate subroutines (located under the main program loop).","text_raw":"Collision detection is performed by a group of ``if`` statements which check four separate subroutines (located under the main program loop).","bullet":"black","level":0},{"text":"Each of these subroutines checks a line of pixels running from the outermost pixel of the ball to the center of the ball.","text_raw":"Each of these subroutines checks a line of pixels running from the outermost pixel of the ball to the center of the ball.","bullet":"black","level":1},{"text":"These lines run top-center, bottom-center, right side-center, and left side-center. Every pixel in each line is checked so that even if the ball is moving fast enough that its velocity will carry its outermost pixel into a wall the other pixels in the check line will recognize that the ball is going into the wall and stop it.","text_raw":"These lines run top-center, bottom-center, right side-center, and left side-center. Every pixel in each line is checked so that even if the ball is moving fast enough that its velocity will carry its outermost pixel into a wall the other pixels in the check line will recognize that the ball is going into the wall and stop it.","bullet":"black","level":1},{"text":"Great care was taken so that the size of the ball can be changed by editing a single variable (RAD) and all other attributes of the program will remain the same. The program will work with walls of any thickness.","text_raw":"Great care was taken so that the size of the ball can be changed by editing a single variable (RAD) and all other attributes of the program will remain the same. The program will work with walls of any thickness.","bullet":"black","level":0}],"object":null,"images":[{"imageid":54415,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/PsK1FdobHcHXSLHM"}],"number":6},{"title":"Making Your Own Maze","lines":[{"text":"The massive bitmap array at the beginning of the code is the maze itself. If you look closely you'll see that the 1s, which make black pixels, are organized in the same way as the walls of the maze. The array is acually 88 pixels wide even though the screen is advertised as being 84 pixels wide because my screen had four more usable pixels.","text_raw":"The massive bitmap array at the beginning of the code is the maze itself. If you look closely you'll see that the 1s, which make black pixels, are organized in the same way as the walls of the maze. The array is acually 88 pixels wide even though the screen is advertised as being 84 pixels wide because my screen had four more usable pixels.","bullet":"black","level":0},{"text":"You can edit the maze by changing which pixels are zeros and ones and therefore change which are black and white.","text_raw":"You can edit the maze by changing which pixels are zeros and ones and therefore change which are black and white.","bullet":"black","level":0},{"text":"I am sorry that this is a very time-consuming and clunky way to make new mazes. To ease the design process at least you can download the FastLCD program (which unfortunately only works on PCs) <a href=\"http:\/\/www.amontec.com\/lcd_nokia_3310.shtml\" rel=\"nofollow\">here<\/a>.","text_raw":"I am sorry that this is a very time-consuming and clunky way to make new mazes. To ease the design process at least you can download the FastLCD program (which unfortunately only works on PCs) [http:\/\/www.amontec.com\/lcd_nokia_3310.shtml|here].","bullet":"black","level":0},{"text":"FastLCD is designed to generate bitmaps which could be used in your existing code in place of the binary array; however, I have not been able to get this to work yet.","text_raw":"FastLCD is designed to generate bitmaps which could be used in your existing code in place of the binary array; however, I have not been able to get this to work yet.","bullet":"black","level":1},{"text":"You can also check to make sure the LCD is reading your maze correctly using the <tt>getPixel<\/tt> command by un-commenting the <tt>serial_print_bitmap<\/tt> line (located in the blue box in the picture). Open the serial monitor (Ctrl+Shift+M) while the program is running to view the maze as the program reads it.","text_raw":"You can also check to make sure the LCD is reading your maze correctly using the ``getPixel`` command by un-commenting the ``serial_print_bitmap`` line (located in the blue box in the picture). Open the serial monitor (Ctrl+Shift+M) while the program is running to view the maze as the program reads it.","bullet":"black","level":0},{"text":"The program will start reading it from the beginning again once it reaches the end. For this reason click the &quot;auto scroll&quot; box at the bottom of the serial monitor once the maze has been displayed once.","text_raw":"The program will start reading it from the beginning again once it reaches the end. For this reason click the \"auto scroll\" box at the bottom of the serial monitor once the maze has been displayed once.","bullet":"black","level":1},{"text":"Activating this line will knock out any screen movement but it is a really good way to make sure that your edit to the <tt>getPixel<\/tt> command is correct and it's also an interesting exercise in watching your code work.","text_raw":"Activating this line will knock out any screen movement but it is a really good way to make sure that your edit to the ``getPixel`` command is correct and it's also an interesting exercise in watching your code work.","bullet":"black","level":1}],"object":null,"images":[{"imageid":54413,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/fO5RudPgaApjVXTr"},{"imageid":54418,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/IeaoJeu6pcBYjTt6"}],"number":7},{"title":"Play Your Game!","lines":[{"text":"You can now solder your Arduino power plug to the leads of your 9V battery case to make your came more mobile. Use the picture to the left as a guide for which tab the red and black wires connect to.","text_raw":"You can now solder your Arduino power plug to the leads of your 9V battery case to make your came more mobile. Use the picture to the left as a guide for which tab the red and black wires connect to.","bullet":"black","level":0},{"text":"You can also tape the battery pack to your cardboard\/MDF back plate using a strip of masking tape (approximately 5&quot; long) to make the game a little more handheld.","text_raw":"You can also tape the battery pack to your cardboard\/MDF back plate using a strip of masking tape (approximately 5\" long) to make the game a little more handheld.","bullet":"black","level":0},{"text":"Enjoy your custom handheld game and show it off to friends!","text_raw":"Enjoy your custom handheld game and show it off to friends!","bullet":"black","level":0}],"object":null,"images":[{"imageid":54852,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/hPVPOKbRwCweTMWS"},{"imageid":54854,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/mumtH4pcoGESQqDU"},{"imageid":54853,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/GlwVTXGBj5bQS3ES"}],"number":8}],"subject":"","summary":"Program a tilt-controlled maze game on an Arduino using an LCD and an accelerometer.","time_required":"45 minutes to 2 hours","title":"Labyrinth Video Game","tools":[{"text":"Soldering Iron and rosin core solder.","notes":"","url":"http:\/\/makeprojects.com\/Item\/Soldering_Iron_and_rosin_core_solder.","thumbnail":""}],"type":"project"},"guideid":"2894"}