{"device":"3D Printing","url":"http:\/\/makeprojects.com\/Project\/3D+Models+with+OpenSCAD\/165\/1","guide":{"author":{"text":"Sean Michael Ragan","userid":33},"categories":["3D Printing","Computers"],"conclusion":"<p>OpenSCAD is still very much a work-in-progress. Although it crashed on me a couple of times when I tried to render DXF files with unsupported drawing elements, and I had a helluva time figuring out that the units of the Z-extrusion height were millimeters, generally I was very pleased with its performance and ease of use. If you have problems that you can't solve by experimentation<wbr \/>, or that are clearly bugs, you can report them and\/or get help by subscribing to the OpenSCAD <a href=\"http:\/\/rocklinux.net\/mailman\/listinfo\/openscad\" rel=\"nofollow\">mailing list here<\/a>. There is also a <a href=\"http:\/\/en.wikibooks.org\/wiki\/OpenSCAD_User_Manual\" rel=\"nofollow\">wiki here<\/a>. OpenSCAD is already very popular in <a href=\"http:\/\/wiki.makerbot.com\/forum\/start\" rel=\"nofollow\">the MakerBot community<\/a>, and <a href=\"http:\/\/groups.google.com\/group\/makerbot\" rel=\"nofollow\">their Google group<\/a> can also be a helpful source of information.<\/p>","difficulty":"Easy","documents":[],"flags":[],"guideid":165,"image":{"imageid":3479,"text":"http:\/\/guide-images.makeprojects.org\/igi\/goDVTND1YJTwViGJ"},"introduction":"<p>I <a href=\"http:\/\/blog.makezine.com\/archive\/2009\/11\/openscad_constructive_solid_geometr.html\">wrote recently<\/a> about the excitement surrounding Clifford Wolf's new freeware <a href=\"http:\/\/openscad.org\/\" rel=\"nofollow\">OpenSCAD<\/a> program. OpenSCAD uses a cool keep-it-super-simple approach to 3D modeling, eliminating the resource-hungry what-you-see-is-what-you-get (WYSIWYG) editing environment favored by most 3D modeling packages, and replacing it with a text-based scripting environment in which models are programmed, instead of sculpted. Basically, you write a script describing your model's shape and then compile it to produce the actual model, which is then rendered onscreen and can be exported to STL format for 3D printing or other purposes.<\/p>\n\n<p>OpenSCAD has two powerful features to facilitate this programming process. The first is support for so-called &quot;constructive solid geometry&quot; (CSG) modeling, in which complex forms are built up as intersections, unions, and differences of simple primary shapes like boxes, cylinders, cones, and ellipsoids. If you've ever used the ray-tracing program <a href=\"http:\/\/www.povray.org\/\" rel=\"nofollow\">POV-Ray<\/a> before, this idea will be familiar to you.<\/p>\n\n<p>The second, less-well-publicized (but perhaps equally powerful) feature of OpenSCAD is &quot;DXF extrusion,&quot; in which OpenSCAD will import a 2D drawing in AutoCAD's popular drawing exchange format (DXF) and &quot;extrude&quot; it into the third dimension. OpenSCAD has support for linear extrusion, in which the resulting part has straight vertical sides, and also rotating extrusion, which results in a part with helical sides. Since a large number of models for rapid prototyping are simple extruded profiles, I expect this feature to see a lot of use.<\/p>\n\n<p>In this tutorial, I'm going to show you how to use OpenSCAD to produce a simple 3D model by extruding a part profile produced in normal drawing software. I use Adobe Illustrator CS3 because I have access to it and am familiar with its interface, but the popular freeware drawing program <a href=\"http:\/\/www.inkscape.org\/\" rel=\"nofollow\">InkScape<\/a> will read and write DXF files natively, and there's no reason why it couldn't serve just as well if you prefer it. There are a number of other free and low-cost programs that will export DXF files. OpenSCAD's developer mentions QCAD, which, as of this writing, is <a href=\"http:\/\/www.qcad.org\/store\/\" rel=\"nofollow\">available from its developer RibbonSoft for \u20ac24<\/a>.<\/p>\n\n<p>The part I'm making is one of 12 solid pentomino puzzle pieces based on the animals of the Chinese zodiac--in this case, the rabbit or &quot;Z&quot; pentomino. The designs are based on those of Japanese schoolteacher Sabu Oguro as published on p. 40 of Jerry Slocum and Jack Botermans' 1986 book <em>Puzzles Old &amp; New: How to Make and Solve Them<\/em>, an image from which is reproduced at the top of this article. My original DXF files and the extruded 3D STL files are freely available for download at <a href=\"http:\/\/www.thingiverse.com\/thing:1453\" rel=\"nofollow\">Thingiverse<\/a>. <a href=\"http:\/\/sternlab.org\" rel=\"nofollow\">Becky Stern<\/a> printed all the real-world models shown in this article on her <a href=\"http:\/\/makerbot.com\/\" rel=\"nofollow\">MakerBot<\/a> Cupcake 3D printer, and photographed them for this tutorial.<\/p>","introduction_rendered":"<p>I <a href=\"http:\/\/blog.makezine.com\/archive\/2009\/11\/openscad_constructive_solid_geometr.html\">wrote recently<\/a> about the excitement surrounding Clifford Wolf's new freeware <a href=\"http:\/\/openscad.org\/\" rel=\"nofollow\">OpenSCAD<\/a> program. OpenSCAD uses a cool keep-it-super-simple approach to 3D modeling, eliminating the resource-hungry what-you-see-is-what-you-get (WYSIWYG) editing environment favored by most 3D modeling packages, and replacing it with a text-based scripting environment in which models are programmed, instead of sculpted. Basically, you write a script describing your model's shape and then compile it to produce the actual model, which is then rendered onscreen and can be exported to STL format for 3D printing or other purposes.<\/p>\n\n<p>OpenSCAD has two powerful features to facilitate this programming process. The first is support for so-called &quot;constructive solid geometry&quot; (CSG) modeling, in which complex forms are built up as intersections, unions, and differences of simple primary shapes like boxes, cylinders, cones, and ellipsoids. If you've ever used the ray-tracing program <a href=\"http:\/\/www.povray.org\/\" rel=\"nofollow\">POV-Ray<\/a> before, this idea will be familiar to you.<\/p>\n\n<p>The second, less-well-publicized (but perhaps equally powerful) feature of OpenSCAD is &quot;DXF extrusion,&quot; in which OpenSCAD will import a 2D drawing in AutoCAD's popular drawing exchange format (DXF) and &quot;extrude&quot; it into the third dimension. OpenSCAD has support for linear extrusion, in which the resulting part has straight vertical sides, and also rotating extrusion, which results in a part with helical sides. Since a large number of models for rapid prototyping are simple extruded profiles, I expect this feature to see a lot of use.<\/p>\n\n<p>In this tutorial, I'm going to show you how to use OpenSCAD to produce a simple 3D model by extruding a part profile produced in normal drawing software. I use Adobe Illustrator CS3 because I have access to it and am familiar with its interface, but the popular freeware drawing program <a href=\"http:\/\/www.inkscape.org\/\" rel=\"nofollow\">InkScape<\/a> will read and write DXF files natively, and there's no reason why it couldn't serve just as well if you prefer it. There are a number of other free and low-cost programs that will export DXF files. OpenSCAD's developer mentions QCAD, which, as of this writing, is <a href=\"http:\/\/www.qcad.org\/store\/\" rel=\"nofollow\">available from its developer RibbonSoft for \u20ac24<\/a>.<\/p>\n\n<p>The part I'm making is one of 12 solid pentomino puzzle pieces based on the animals of the Chinese zodiac--in this case, the rabbit or &quot;Z&quot; pentomino. The designs are based on those of Japanese schoolteacher Sabu Oguro as published on p. 40 of Jerry Slocum and Jack Botermans' 1986 book <em>Puzzles Old &amp; New: How to Make and Solve Them<\/em>, an image from which is reproduced at the top of this article. My original DXF files and the extruded 3D STL files are freely available for download at <a href=\"http:\/\/www.thingiverse.com\/thing:1453\" rel=\"nofollow\">Thingiverse<\/a>. <a href=\"http:\/\/sternlab.org\" rel=\"nofollow\">Becky Stern<\/a> printed all the real-world models shown in this article on her <a href=\"http:\/\/makerbot.com\/\" rel=\"nofollow\">MakerBot<\/a> Cupcake 3D printer, and photographed them for this tutorial.<\/p><div class=\"tools\"><strong>Tools<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/Computer\">Computer<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Drawing_software\">Drawing software<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/OpenSCAD\">OpenSCAD<\/a><\/li><\/ul><\/div>","locale":"en","parts":[],"prereqs":[],"steps":[{"title":"Size art board appropriately","lines":[{"text":"Sizing the page or art board to exactly the size of your finished part will make it easier to view the rendered extrusion in OpenSCAD. The zero coordinate seems to be determined based on one corner of the art board, and if you draw a 1.5&quot; x 1.5&quot; part in the middle of a letter-sized page, the actual model tends to end up out off the edge of the screen when you render it. Save yourself the nuisance and shrink the art board down when you first create the new drawing.","text_raw":"Sizing the page or art board to exactly the size of your finished part will make it easier to view the rendered extrusion in OpenSCAD. The zero coordinate seems to be determined based on one corner of the art board, and if you draw a 1.5\" x 1.5\" part in the middle of a letter-sized page, the actual model tends to end up out off the edge of the screen when you render it. Save yourself the nuisance and shrink the art board down when you first create the new drawing.","bullet":"black","level":0}],"object":null,"images":[{"imageid":3469,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/x4LCnNP5lYaRNkM3"}],"number":1},{"title":"Draw grid in bottom layer","lines":[{"text":"A grid or any other drawing guides you may want to include should be drawn first, in a separate layer.","text_raw":"A grid or any other drawing guides you may want to include should be drawn first, in a separate layer. ","bullet":"black","level":0},{"text":"In the case of the rabbit pentomino, the animal profile needs to fit into the outline of the normal &quot;Z&quot; pentomino, which is five squares simply joined as shown.","text_raw":"In the case of the rabbit pentomino, the animal profile needs to fit into the outline of the normal \"Z\" pentomino, which is five squares simply joined as shown. ","bullet":"black","level":0},{"text":"These puzzle pieces are designed on a 0.5&quot; grid, so start by drawing a single 0.5&quot; square using the box tool. Then make a copy of that square, paste it, and use the arrow tool to snap its corners to the corners of the original square. Then repeat the copy-paste-snap process to add the remaining three squares in their proper positions. Then &quot;select all&quot; and change the stroke color to something other than black to make it easy to distinguish part lines from grid lines later on.","text_raw":"These puzzle pieces are designed on a 0.5\" grid, so start by drawing a single 0.5\" square using the box tool. Then make a copy of that square, paste it, and use the arrow tool to snap its corners to the corners of the original square. Then repeat the copy-paste-snap process to add the remaining three squares in their proper positions. Then \"select all\" and change the stroke color to something other than black to make it easy to distinguish part lines from grid lines later on. ","bullet":"black","level":0},{"text":"Finally, lock the layer and create a new one to draw the actual part lines in. Change the stroke color back to black.","text_raw":"Finally, lock the layer and create a new one to draw the actual part lines in. Change the stroke color back to black. ","bullet":"black","level":0}],"object":null,"images":[{"imageid":3470,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/MQQ56Iau5KwUBDG4"}],"number":2},{"title":"Draw profile without using splines or polylines","lines":[{"text":"The DXF importer in OpenSCAD is based on AutoCAD's DXF revision 12 (R12) file specification, which does not include some of the more advanced drawing elements included in revisions 13 and later. Most notably, these are the POLYLINE and SPLINE elements.","text_raw":"The DXF importer in OpenSCAD is based on AutoCAD's DXF revision 12 (R12) file specification, which does not include some of the more advanced drawing elements included in revisions 13 and later. Most notably, these are the POLYLINE and SPLINE elements.","bullet":"icon_note","level":0},{"text":"It is doubtlessly not an accident that my version of Illustrator (CS3) only exports DXFs revision 13 and later, but these seem to be backwards-compatible with R12 as long as you avoid using certain drawing tools, notably compound paths. Put simply, each line in the drawing has to be a separate line segment with its endpoints unjoined. The box and ellipse tools seem to work, also.","text_raw":"It is doubtlessly not an accident that my version of Illustrator (CS3) only exports DXFs revision 13 and later, but these seem to be backwards-compatible with R12 as long as you avoid using certain drawing tools, notably compound paths. Put simply, each line in the drawing has to be a separate line segment with its endpoints unjoined. The box and ellipse tools seem to work, also. ","bullet":"icon_note","level":0},{"text":"Make sure that snapping is turned on, and that the beginning of each line segment is snapped exactly to the endpoint of the preceding line segment. Otherwise your part profile will have openings and will not render correctly. If you screw up and include an unsupported drawing element or create a non-closed part profile, you'll get a warning later when OpenSCAD tries to render the model.","text_raw":"Make sure that snapping is turned on, and that the beginning of each line segment is snapped exactly to the endpoint of the preceding line segment. Otherwise your part profile will have openings and will not render correctly. If you screw up and include an unsupported drawing element or create a non-closed part profile, you'll get a warning later when OpenSCAD tries to render the model. ","bullet":"black","level":0}],"object":null,"images":[{"imageid":3471,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/GtWKV14NJGkwrcQT"}],"number":3},{"title":"Delete grid layer","lines":[{"text":"When you've got the profile drawn to your satisfaction, save your drawing in its native format (.AI in the case of Illustrator).","text_raw":"When you've got the profile drawn to your satisfaction, save your drawing in its native format (.AI in the case of Illustrator). ","bullet":"black","level":0},{"text":"Then select the bottom layer containing the grid or other drawing guides and delete it, leaving only your part profile in the drawing's single remaining layer.","text_raw":"Then select the bottom layer containing the grid or other drawing guides and delete it, leaving only your part profile in the drawing's single remaining layer.","bullet":"black","level":0}],"object":null,"images":[{"imageid":3472,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/nMsTE2HNLM2J3Z5m"}],"number":4},{"title":"Export as DXF","lines":[{"text":"If you have the option to export in DXF R12, use it.","text_raw":"If you have the option to export in DXF R12, use it. ","bullet":"black","level":0},{"text":"In Illustrator CS3, just use the default DXF export options.","text_raw":"In Illustrator CS3, just use the default DXF export options.","bullet":"black","level":0}],"object":null,"images":[{"imageid":3478,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/oeLxAgCgoB3OFWbg"}],"number":5},{"title":"Import DXF file into OpenSCAD","lines":[{"text":"Launch OpenSCAD, then enter (or copy-paste) the following code into the new document:","text_raw":"Launch OpenSCAD, then enter (or copy-paste) the following code into the new document:","bullet":"black","level":0},{"text":"<tt>dxf_linear_extrude(file = &quot;rabbit-Z.dxf&quot;, height = 12.7, center = true, convexity=1);<\/tt>","text_raw":"``dxf_linear_extrude(file = \"rabbit-Z.dxf\", height = 12.7, center = true, convexity=1);``","bullet":"blue","level":1},{"text":"&quot;file&quot; is the name of the DXF file you want to import, &quot;height&quot; is the height in millimeters you want to extrude the profile (12.7 mm = 0.5&quot;), &quot;center&quot; is a Boolean variable that tells OpenSCAD whether to center the rendered model or not (I've never really messed with it), and &quot;convexity&quot; is a scalar representing the fineness with which to render curved surfaces. Given that my part profiles contain almost no curved surfaces, I was happy with the minimum convexity of 1. If your parts are curvier than mine you may want to raise it.","text_raw":"\"file\" is the name of the DXF file you want to import, \"height\" is the height in millimeters you want to extrude the profile (12.7 mm = 0.5\"), \"center\" is a Boolean variable that tells OpenSCAD whether to center the rendered model or not (I've never really messed with it), and \"convexity\" is a scalar representing the fineness with which to render curved surfaces. Given that my part profiles contain almost no curved surfaces, I was happy with the minimum convexity of 1. If your parts are curvier than mine you may want to raise it.","bullet":"black","level":0},{"text":"Save the OpenSCAD script as a .SCAD file with an appropriate name.","text_raw":"Save the OpenSCAD script as a .SCAD file with an appropriate name.","bullet":"black","level":0}],"object":null,"images":[{"imageid":3474,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/xK5cvM6SOwXjLTet"}],"number":6},{"title":"Compile and render model","lines":[{"text":"From the drop-down menus select &quot;Design &gt; Compile and render (CGAL)&quot; or just press F6.","text_raw":"From the drop-down menus select \"Design > Compile and render (CGAL)\" or just press F6. ","bullet":"black","level":0},{"text":"If you've done everything right, your extruded part should appear in the render window in the upper-right corner of the workspace, as shown.","text_raw":"If you've done everything right, your extruded part should appear in the render window in the upper-right corner of the workspace, as shown. ","bullet":"black","level":0},{"text":"You can rotate it around by left-clicking and dragging the mouse, pan the camera by right-clicking and dragging, and zoom in and out with the scroll wheel.","text_raw":"You can rotate it around by left-clicking and dragging the mouse, pan the camera by right-clicking and dragging, and zoom in and out with the scroll wheel.","bullet":"black","level":0},{"text":"If the DXF file contains open paths or unsupported drawing elements, you will see corresponding error messages in the log window at the lower right. You may have to scroll up to see them. For whatever reason, even though you have produced only a single part, OpenSCAD will probably report that you have 2 volumes in your rendered model. This may or may not be a bug; in any case, it doesn't seem to hurt anything so don't worry about it.","text_raw":"If the DXF file contains open paths or unsupported drawing elements, you will see corresponding error messages in the log window at the lower right. You may have to scroll up to see them. For whatever reason, even though you have produced only a single part, OpenSCAD will probably report that you have 2 volumes in your rendered model. This may or may not be a bug; in any case, it doesn't seem to hurt anything so don't worry about it.","bullet":"icon_note","level":0}],"object":null,"images":[{"imageid":3475,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/5PfNtvALUWYuq3c6"}],"number":7},{"title":"Export model as STL file","lines":[{"text":"From the drop-down menus, select &quot;Design &gt; Export as STL...&quot;, choose an appropriate filename, and click &quot;Save.&quot;","text_raw":"From the drop-down menus, select \"Design > Export as STL...\", choose an appropriate filename, and click \"Save.\" ","bullet":"black","level":0},{"text":"OpenSCAD should report &quot;STL export finished&quot; in the log window. And that's it! Your 3D model should be ready for printing or import into a compatible 3D WYSIWYG modeler like Blender.","text_raw":"OpenSCAD should report \"STL export finished\" in the log window. And that's it! Your 3D model should be ready for printing or import into a compatible 3D WYSIWYG modeler like Blender. ","bullet":"black","level":0}],"object":null,"images":[{"imageid":3476,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/GlWGf22Fm36ENLcN"},{"imageid":3491,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/EnbQ2qD6byRXL1RI"},{"imageid":3492,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/HVLWDMIEmM6JD5Ro"}],"number":8}],"subject":"","summary":"Easily program your 3D models instead of sculpting them!","time_required":"30 minutes","title":"3D Models with OpenSCAD","tools":[{"text":"Computer","notes":"","url":"http:\/\/makeprojects.com\/Item\/Computer","thumbnail":""},{"text":"Drawing software","notes":"","url":"http:\/\/makeprojects.com\/Item\/Drawing_software","thumbnail":""},{"text":"OpenSCAD","notes":"","url":"http:\/\/makeprojects.com\/Item\/OpenSCAD","thumbnail":""}],"type":"project"},"guideid":"165"}