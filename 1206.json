{"device":"Musical Instruments","url":"http:\/\/makeprojects.com\/Project\/Headgear+MIDI+Control\/1206\/1","guide":{"author":{"text":"Tristan Shone","userid":7094},"categories":["Musical Instruments","Audio"],"conclusion":"<p><strong>This project first appeared in <a href=\"http:\/\/makezine.com\/22\">MAKE Volume 22<\/a>, page 118.<\/strong><\/p>","difficulty":"Moderate","documents":[],"flags":[{"title":"From MAKE Magazine","flagid":"FROM_MAKE","text":"This project first appeared on the pages of MAKE magazine."}],"guideid":1206,"image":{"imageid":23497,"text":"http:\/\/guide-images.makeprojects.org\/igi\/SVcXvcvKLGIpj6bQ"},"introduction":"<p>Based on my lifelong habit of \u201cbeatboxing\u201d melodies and rhythms and essentially songwriting as I walk, drive, or shower, I\u2019ve always wanted to make a device that would take my vocal mush and output exactly what\u2019s in my head, in real time on stage.<\/p>\n\n<p>Well, I haven\u2019t achieved exactly that yet, but I have created an 8-microphone input device that allows me to trigger or control 8 simultaneous sounds from music sequencing software (Ableton Live) as well as output 8 different mic\/audio channels of my voice for input into the computer or mixer.<\/p>\n\n<p>The 2 rows of 4 electret condenser microphones are unidirectional and compartmentaliz<wbr \/>ed, so there\u2019s little cross-contamination of the audio inputs or vocals. Each microphone\u2019s distance from your mouth is adjustable through a custom spring-loaded mechanism, and they\u2019re close enough together that simply by turning your head or twitching a bit (much like a cat following a fly) you can easily place your mouth over any of them.<\/p>\n\n<p>The brain of the Headgear is the Arduino Duemilanove microcontroller<wbr \/>. The entire device (microcontrolle<wbr \/>r and mics) is USB powered and has 8 mono microphone outputs. Since there are only 6 ADC (analog-to-digital converter) inputs on the Duemilanove, only the first 6 mic signals are used for MIDI triggering, but all 8 are live mic signals.<\/p>\n\n<p>The signal from the microphones is split: it goes to the preamplifier as the audio signal that you hear, and also goes to the analog (ADC) pins of the Arduino. The Arduino converts the signal to serial data to send to a computer, and the computer uses the Serial-MIDI software to convert it into MIDI, which is then used by Ableton Live as a trigger to do whatever you want. The device is programmed to output MIDI commands to Ableton, but can easily be programmed to output OSC commands to communicate with Pd or Max\/MSP.<\/p>\n\n<p><strong>NOTE: Some hard-to-find tools and materials in this design can easily be simplified. For example, the stainless steel cut and drilled with a water jet can be substituted with plastic cut with a razor blade and drilled with a normal drill.<\/strong><\/p>","introduction_rendered":"<p>Based on my lifelong habit of \u201cbeatboxing\u201d melodies and rhythms and essentially songwriting as I walk, drive, or shower, I\u2019ve always wanted to make a device that would take my vocal mush and output exactly what\u2019s in my head, in real time on stage.<\/p>\n\n<p>Well, I haven\u2019t achieved exactly that yet, but I have created an 8-microphone input device that allows me to trigger or control 8 simultaneous sounds from music sequencing software (Ableton Live) as well as output 8 different mic\/audio channels of my voice for input into the computer or mixer.<\/p>\n\n<p>The 2 rows of 4 electret condenser microphones are unidirectional and compartmentaliz<wbr \/>ed, so there\u2019s little cross-contamination of the audio inputs or vocals. Each microphone\u2019s distance from your mouth is adjustable through a custom spring-loaded mechanism, and they\u2019re close enough together that simply by turning your head or twitching a bit (much like a cat following a fly) you can easily place your mouth over any of them.<\/p>\n\n<p>The brain of the Headgear is the Arduino Duemilanove microcontroller<wbr \/>. The entire device (microcontrolle<wbr \/>r and mics) is USB powered and has 8 mono microphone outputs. Since there are only 6 ADC (analog-to-digital converter) inputs on the Duemilanove, only the first 6 mic signals are used for MIDI triggering, but all 8 are live mic signals.<\/p>\n\n<p>The signal from the microphones is split: it goes to the preamplifier as the audio signal that you hear, and also goes to the analog (ADC) pins of the Arduino. The Arduino converts the signal to serial data to send to a computer, and the computer uses the Serial-MIDI software to convert it into MIDI, which is then used by Ableton Live as a trigger to do whatever you want. The device is programmed to output MIDI commands to Ableton, but can easily be programmed to output OSC commands to communicate with Pd or Max\/MSP.<\/p>\n\n<p><strong>NOTE: Some hard-to-find tools and materials in this design can easily be simplified. For example, the stainless steel cut and drilled with a water jet can be substituted with plastic cut with a razor blade and drilled with a normal drill.<\/strong><\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/Microphones\">Microphones<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Microphone_housing\">Microphone housing<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Microphone_case_cartridges\">Microphone case cartridges<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Mic-stand_attachment\">Mic-stand attachment<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Microcontroller\">Microcontroller<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Arduino_ProtoShield\">Arduino ProtoShield<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Mic_outputs\">Mic outputs<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/USB_hub\">USB hub<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Preamp_unit\">Preamp unit<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Computer\">Computer<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"Microphones","notes":"Digi-Key part  #AUM-5247L-R","url":"http:\/\/makeprojects.com\/Item\/Microphones","thumbnail":""},{"text":"Microphone housing","notes":"","url":"http:\/\/makeprojects.com\/Item\/Microphone_housing","thumbnail":""},{"text":"Microphone case cartridges","notes":"machined in aluminum from my design; you can substitute common hardware.","url":"http:\/\/makeprojects.com\/Item\/Microphone_case_cartridges","thumbnail":""},{"text":"Mic-stand attachment","notes":"","url":"http:\/\/makeprojects.com\/Item\/Mic-stand_attachment","thumbnail":""},{"text":"Microcontroller","notes":"available at makershed.com item #MKSP4","url":"http:\/\/makeprojects.com\/Item\/Microcontroller","thumbnail":""},{"text":"Arduino ProtoShield","notes":"containing basic mic-powering circuit","url":"http:\/\/makeprojects.com\/Item\/Arduino_ProtoShield","thumbnail":""},{"text":"Mic outputs","notes":"","url":"http:\/\/makeprojects.com\/Item\/Mic_outputs","thumbnail":""},{"text":"USB hub","notes":"for adding additional devices","url":"http:\/\/makeprojects.com\/Item\/USB_hub","thumbnail":""},{"text":"Preamp unit","notes":"or other FireWire mic preamps, for input into computer","url":"http:\/\/makeprojects.com\/Item\/Preamp_unit","thumbnail":""},{"text":"Computer","notes":"","url":"http:\/\/makeprojects.com\/Item\/Computer","thumbnail":""}],"prereqs":[],"steps":[{"title":"Decide on a shape for the Headgear casing.","lines":[{"text":"The first and most exciting part of this device (for me at least) is the shape. Since this is a sound controller using your mouth, think about how you want to move, what configuration your body will be in, and what your hands will be doing while you perform.","text_raw":"The first and most exciting part of this device (for me at least) is the shape. Since this is a sound controller using your mouth, think about how you want to move, what configuration your body will be in, and what your hands will be doing while you perform.","bullet":"black","level":0},{"text":"Design your Headgear based upon the movement and space limitations of your performance. This is the sculptural component of this project, so be creative!","text_raw":"Design your Headgear based upon the movement and space limitations of your performance. This is the sculptural component of this project, so be creative!","bullet":"black","level":0},{"text":"The curvature of the Headgear matches the sweeping path of my mouth as I rotate my head, and the placement of the microphones allows me to basically tilt my head and rotate it \u00b160\u00b0 (much like with a harmonica neck brace).","text_raw":"The curvature of the Headgear matches the sweeping path of my mouth as I rotate my head, and the placement of the microphones allows me to basically tilt my head and rotate it \u00b160\u00b0 (much like with a harmonica neck brace).","bullet":"black","level":0}],"object":null,"images":[{"imageid":23497,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/SVcXvcvKLGIpj6bQ"},{"imageid":23488,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/tc1BmfpCx6OBoodZ"}],"number":1},{"title":"Make the Headgear frame.","lines":[{"text":"First, choose your material. I chose stainless steel because it\u2019s strong and, when polished, it\u2019s not abrasive against the mouth as it glides from position to position.","text_raw":"First, choose your material. I chose stainless steel because it\u2019s strong and, when polished, it\u2019s not abrasive against the mouth as it glides from position to position.","bullet":"black","level":0},{"text":"Second, work out the envelope for the microphone placement. With your body within your self-defined performance limits, put a marker in your mouth and draw on a piece of paper placed in front of your face as you move your head; this defines the region where your mics can be placed.","text_raw":"Second, work out the envelope for the microphone placement. With your body within your self-defined performance limits, put a marker in your mouth and draw on a piece of paper placed in front of your face as you move your head; this defines the region where your mics can be placed.","bullet":"black","level":0},{"text":"Using this parameter, along with the shape you decided on, create your template for the Headgear frame, either by hand or using software such as Illustrator, SolidWorks, or SketchUp.","text_raw":"Using this parameter, along with the shape you decided on, create your template for the Headgear frame, either by hand or using software such as Illustrator, SolidWorks, or SketchUp.","bullet":"black","level":0},{"text":"In your template, each mic \u201ccell\u201d should be isolated from the next by horizontal and vertical braces.","text_raw":"In your template, each mic \u201ccell\u201d should be isolated from the next by horizontal and vertical braces.","bullet":"black","level":0},{"text":"Also make sure to include small sound holes at the location of each mic, and four #4-40 machine screw clearance holes around each microphone location for attaching the mic cartridge mechanism.","text_raw":"Also make sure to include small sound holes at the location of each mic, and four #4-40 machine screw clearance holes around each microphone location for attaching the mic cartridge mechanism.","bullet":"black","level":0},{"text":"The template shows the flattened Headgear shape with the braces and sides. I exported the drawings as <em>.dxf<\/em> files at 1:1 scale ratio and had the parts cut with a water jet.","text_raw":"The template shows the flattened Headgear shape with the braces and sides. I exported the drawings as ''.dxf'' files at 1:1 scale ratio and had the parts cut with a water jet.","bullet":"black","level":0},{"text":"If you don\u2019t have access to a water jet or laser cutter, you can print the drawings out at 1:1 and use them as a template to cut out with a jigsaw and drill. The pieces can then be welded, or bonded with metallic tape or epoxy.","text_raw":"If you don\u2019t have access to a water jet or laser cutter, you can print the drawings out at 1:1 and use them as a template to cut out with a jigsaw and drill. The pieces can then be welded, or bonded with metallic tape or epoxy.","bullet":"black","level":0}],"object":null,"images":[{"imageid":23492,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/CgTkZMSCEHg3qWVP"},{"imageid":23498,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/Y3XPP6TbahJWleaN"}],"number":2},{"title":"Mount the microphones.","lines":[{"text":"Notice how I mounted the electret condenser microphone disk in each mic cell. A custom mic cartridge was designed and machined to fit the four #4-40\u00d71&quot; machine screws, resting on top of the 4 springs and fastened with #4-40 nuts.","text_raw":"Notice how I mounted the electret condenser microphone disk in each mic cell. A custom mic cartridge was designed and machined to fit the four #4-40\u00d71\" machine screws, resting on top of the 4 springs and fastened with #4-40 nuts.","bullet":"black","level":0},{"text":"This design allows the distance of the mic from your mouth to be adjusted, which will change your signal\/volume level. When mounted in the cartridge, the black foam side of the electret microphone disk faces toward your mouth.","text_raw":"This design allows the distance of the mic from your mouth to be adjusted, which will change your signal\/volume level. When mounted in the cartridge, the black foam side of the electret microphone disk faces toward your mouth.","bullet":"black","level":0},{"text":"Again, in place of the machined aluminum mic cartridge, you could use rubber bands, foam rubber, or any number of materials that allow you to mount to the 4 screws.","text_raw":"Again, in place of the machined aluminum mic cartridge, you could use rubber bands, foam rubber, or any number of materials that allow you to mount to the 4 screws.","bullet":"black","level":0}],"object":null,"images":[{"imageid":23490,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/tEWRGjkEyYsHAstv"},{"imageid":23493,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/UDBVFYmc1SLeNVKr"}],"number":3},{"title":"Wire up the microphones (Headgear side).","lines":[{"text":"Using at least a 9-conductor cable, strip each wire at both ends. At one end, solder one wire to each of the 8 signal (not ground) solder lugs of the mics. Notice the ground pin on the mic in the photo is the one connected to the casing. Solder the ninth wire to one of the mic ground pins.","text_raw":"Using at least a 9-conductor cable, strip each wire at both ends. At one end, solder one wire to each of the 8 signal (not ground) solder lugs of the mics. Notice the ground pin on the mic in the photo is the one connected to the casing. Solder the ninth wire to one of the mic ground pins.","bullet":"black","level":0},{"text":"Then, using some extra wire, daisy-chain that last ground pin to the next mic ground pin, and so on, until all grounds are connected to the ninth wire and soldered together.","text_raw":"Then, using some extra wire, daisy-chain that last ground pin to the next mic ground pin, and so on, until all grounds are connected to the ninth wire and soldered together.","bullet":"black","level":0}],"object":null,"images":[{"imageid":23494,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/MZyDPrnvsgBLZRmh"},{"imageid":23489,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/BZP1MaOqWdrROMQw"}],"number":4},{"title":"Build the microphone power circuitry.","lines":[{"text":"There are many options for powering and amplifying electret condenser microphones (essentially the same mic in your laptop or in Britney Spears\u2019 mobile mic). It comes down to how much time, headache, and money you want to invest. These mics tend to sound tinny to me, picking up every small drop and ping from my mouth \u2014 which is what I like about them.","text_raw":"There are many options for powering and amplifying electret condenser microphones (essentially the same mic in your laptop or in Britney Spears\u2019 mobile mic). It comes down to how much time, headache, and money you want to invest. These mics tend to sound tinny to me, picking up every small drop and ping from my mouth \u2014 which is what I like about them.","bullet":"black","level":0},{"text":"The goal with the Headgear is twofold: to power the mic enough to input a decent line level into the FireWire mic preamp unit (I chose the PreSonus FireStudio because of its 8 mic preamps) and to make sure your max and min output signals are within 0V to 5V for input into the ADC pin on the Arduino microcontroller.","text_raw":"The goal with the Headgear is twofold: to power the mic enough to input a decent line level into the FireWire mic preamp unit (I chose the PreSonus FireStudio because of its 8 mic preamps) and to make sure your max and min output signals are within 0V to 5V for input into the ADC pin on the Arduino microcontroller.","bullet":"black","level":0},{"text":"This way you get 2 sounds with one mic: your voice and the triggered sound (MIDI volume\/expression is controlled by the loudness of your voice or ADC level). Here are the circuits you can use:","text_raw":"This way you get 2 sounds with one mic: your voice and the triggered sound (MIDI volume\/expression is controlled by the loudness of your voice or ADC level). Here are the circuits you can use:","bullet":"black","level":0},{"text":"<strong>Option 1:<\/strong> Simple mic power circuit. Solder the circuit in the diagram onto the Arduino ProtoShield. Because of the circuit\u2019s simplicity, all 8 of the powering circuits can fit onto one Proto-Shield. This circuit amplifies the incoming signal using the onboard USB power and outputs to the ADC pin of the Arduino and also the mic preamp of the FireWire device. Without an op-amp, the output is somewhere between 0V and 5V, but not exactly. I compensate for this in the Arduino code simply by setting limits, a quick and easy hack that works!","text_raw":"'''Option 1:''' Simple mic power circuit. Solder the circuit in the diagram onto the Arduino ProtoShield. Because of the circuit\u2019s simplicity, all 8 of the powering circuits can fit onto one Proto-Shield. This circuit amplifies the incoming signal using the onboard USB power and outputs to the ADC pin of the Arduino and also the mic preamp of the FireWire device. Without an op-amp, the output is somewhere between 0V and 5V, but not exactly. I compensate for this in the Arduino code simply by setting limits, a quick and easy hack that works!","bullet":"black","level":1},{"text":"<strong>Option 2:<\/strong> Off-the-shelf circuit. For a more robust solution, create or buy the Amplified Mic op-amp circuit from SparkFun (<a href=\"http:\/\/makezine.com\/go\/SFcircuit\">http:\/\/makezine.com\/go\/SFcircuit<\/a>). Soldering it yourself takes up a lot of space, so  I recommend buying it, but SparkFun is nice enough to provide the schematic if you don\u2019t want to buy their kit. This utilizes a rail-to-rail op-amp that ensures 0V\u20135V low to high signal.","text_raw":"'''Option 2:''' Off-the-shelf circuit. For a more robust solution, create or buy the Amplified Mic op-amp circuit from SparkFun (http:\/\/makezine.com\/go\/SFcircuit). Soldering it yourself takes up a lot of space, so  I recommend buying it, but SparkFun is nice enough to provide the schematic if you don\u2019t want to buy their kit. This utilizes a rail-to-rail op-amp that ensures 0V\u20135V low to high signal.","bullet":"black","level":1}],"object":null,"images":[{"imageid":23500,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/lVnQ6gCsfwQiVb5x"},{"imageid":23495,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/CBnASEkq4EajcZQC"},{"imageid":23496,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/QGNWipjDrST3OIqX"}],"number":5},{"title":"Wire up the microphones (electronics side).","lines":[{"text":"At the other end of the 9-conductor mic cable (the Arduino side), you need to solder each of the (+) mic signal wires into one of the 8 powering circuits created in Step 5, and the single (\u2013) mic wire to ground. Arduino ground, mic preamp ground, and mic ground should all be the same. To reduce hum and buzzing, connect this ground to the rack mount frame.","text_raw":"At the other end of the 9-conductor mic cable (the Arduino side), you need to solder each of the (+) mic signal wires into one of the 8 powering circuits created in Step 5, and the single (\u2013) mic wire to ground. Arduino ground, mic preamp ground, and mic ground should all be the same. To reduce hum and buzzing, connect this ground to the rack mount frame.","bullet":"black","level":0},{"text":"Connect signal to the Arduino and mic preamp. The output of the powering circuit in is both your input signal to your preamp (usable vocal audio) and the analog input  to your Arduino ADC pin(s).","text_raw":"Connect signal to the Arduino and mic preamp. The output of the powering circuit in is both your input signal to your preamp (usable vocal audio) and the analog input  to your Arduino ADC pin(s).","bullet":"black","level":0},{"text":"Since the Arduino Duemilanove has only 6 ADC inputs, only the first 6 mic signals are used for MIDI triggering, but all 8 are live mic signals. An upgrade to the Arduino Mega or some additional circuitry would allow all 8 channels to trigger.","text_raw":"Since the Arduino Duemilanove has only 6 ADC inputs, only the first 6 mic signals are used for MIDI triggering, but all 8 are live mic signals. An upgrade to the Arduino Mega or some additional circuitry would allow all 8 channels to trigger.","bullet":"icon_note","level":0}],"object":null,"images":[{"imageid":23502,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/YskJnXRMn6GmPQBM"}],"number":6},{"title":"Get the software.","lines":[{"text":"Three pieces of software are required to make the Headgear function: Arduino IDE, Serial-MIDI Converter, and Ableton Live (or the music sequencer of your choice).","text_raw":"Three pieces of software are required to make the Headgear function: Arduino IDE, Serial-MIDI Converter, and Ableton Live (or the music sequencer of your choice).","bullet":"black","level":0},{"text":"<strong>Arduino IDE<\/strong> The <a href=\"http:\/\/arduino.cc\/en\/Main\/Software\" rel=\"nofollow\">Arduino IDE<\/a> (Integrated Development Environment) software is a very user-friendly, C-like programming environment.","text_raw":"'''Arduino IDE''' The [http:\/\/arduino.cc\/en\/Main\/Software|Arduino IDE] (Integrated Development Environment) software is a very user-friendly, C-like programming environment.","bullet":"black","level":0},{"text":"You need only a small amount of programming to read the ADC pins of the Arduino and then output the MIDI commands to trigger and control sounds; the code can be downloaded <a href=\"http:\/\/tristanshone.com\/soundmachines\/headgear\" rel=\"nofollow\">here<\/a>.","text_raw":"You need only a small amount of programming to read the ADC pins of the Arduino and then output the MIDI commands to trigger and control sounds; the code can be downloaded [http:\/\/tristanshone.com\/soundmachines\/headgear|here].","bullet":"black","level":1},{"text":"<strong>Serial-MIDI Converter<\/strong> This software from Spikenzie Labs allows you to convert serial commands coming from the Arduino via USB into MIDI data that\u2019s readable by music sequencing software without the need for a MIDI-to-USB adapter.","text_raw":"'''Serial-MIDI Converter''' This software from Spikenzie Labs allows you to convert serial commands coming from the Arduino via USB into MIDI data that\u2019s readable by music sequencing software without the need for a MIDI-to-USB adapter.","bullet":"black","level":0},{"text":"It\u2019s very helpful to be able to both program and power your Arduino, as well as read MIDI, with a USB cable \u2014 no adapters or power cables. Download and follow the detailed instructions for setup <a href=\"http:\/\/spikenzielabs.com\/SpikenzieLabs\/Serial_MIDI.html\" rel=\"nofollow\">here<\/a>. This software must run in the background while Ableton is open in order for Ableton to recognize the MIDI input.","text_raw":"It\u2019s very helpful to be able to both program and power your Arduino, as well as read MIDI, with a USB cable \u2014 no adapters or power cables. Download and follow the detailed instructions for setup [http:\/\/spikenzielabs.com\/SpikenzieLabs\/Serial_MIDI.html|here]. This software must run in the background while Ableton is open in order for Ableton to recognize the MIDI input.","bullet":"black","level":1},{"text":"<strong>Ableton Live<\/strong> Within Ableton Live\u2019s preferences, you need to select the device; the Headgear device will show up as IAC Driver, which is set up in the folder Utilities\/Mac Audio MIDI Setup.","text_raw":"'''Ableton Live''' Within Ableton Live\u2019s preferences, you need to select the device; the Headgear device will show up as IAC Driver, which is set up in the folder Utilities\/Mac Audio MIDI Setup.","bullet":"black","level":0},{"text":"Once you select it, you can begin to map the Headgear MIDI to any parameters in Ableton, like drums or samples. You might need to play around with the actual MIDI command you have programmed on the Arduino (e.g., MIDI_TX(149,64,0)) so as to not interfere with other controllers. In addition to triggering, each of the 8 channels of vocal audio is fed into 8 different audio channels with different effects. Have fun!","text_raw":"Once you select it, you can begin to map the Headgear MIDI to any parameters in Ableton, like drums or samples. You might need to play around with the actual MIDI command you have programmed on the Arduino (e.g., MIDI_TX(149,64,0)) so as to not interfere with other controllers. In addition to triggering, each of the 8 channels of vocal audio is fed into 8 different audio channels with different effects. Have fun!","bullet":"black","level":1}],"object":null,"images":[],"number":7},{"title":"Headgear as harmonica.","lines":[{"text":"To use the Headgear as a \u201charmonica\u201d-style drum machine, I use either the drum machine or the Impulse drum machine in Ableton. Both of these Ableton instruments are essentially samplers where you drop a sound\/sample into a slot that\u2019s actually a MIDI note.","text_raw":"To use the Headgear as a \u201charmonica\u201d-style drum machine, I use either the drum machine or the Impulse drum machine in Ableton. Both of these Ableton instruments are essentially samplers where you drop a sound\/sample into a slot that\u2019s actually a MIDI note.","bullet":"black","level":0},{"text":"You\u2019ll need to figure out which MIDI notes your samples are on in the Ableton drum machine so that you can output the correct 6 MIDI commands from the Arduino (e.g., middle C is <em>60<\/em>, so choose <em>60\u201365<\/em>) to trigger 6 consecutive sounds. Once you have each of these 6 microphones triggering from your voice, you\u2019ll need to make some adjustments based upon how you\u2019ll use it.","text_raw":"You\u2019ll need to figure out which MIDI notes your samples are on in the Ableton drum machine so that you can output the correct 6 MIDI commands from the Arduino (e.g., middle C is ''60'', so choose ''60\u201365'') to trigger 6 consecutive sounds. Once you have each of these 6 microphones triggering from your voice, you\u2019ll need to make some adjustments based upon how you\u2019ll use it.","bullet":"black","level":0},{"text":"If you\u2019re controlling drum sounds, to prevent multiple triggers from one voice impulse, utilize the <em>millis()<\/em> command (a real-time timer) in the Arduino code to make sure not to trigger twice within a certain time frame (you can see how I\u2019ve done this in my code).","text_raw":"If you\u2019re controlling drum sounds, to prevent multiple triggers from one voice impulse, utilize the ''millis()'' command (a real-time timer) in the Arduino code to make sure not to trigger twice within a certain time frame (you can see how I\u2019ve done this in my code).","bullet":"black","level":0},{"text":"With drum or rhythmic samples, you can play around with the mic order so that your head movement is optimized; for example, a configuration of upper left (kick drum), upper left inside (high hat), upper right inside (snare) creates a simple setup for basic beat making. For a more robotic movement, you can set up 4 samples in a row so that your head moves like a typewriter (my preferred setup).","text_raw":"With drum or rhythmic samples, you can play around with the mic order so that your head movement is optimized; for example, a configuration of upper left (kick drum), upper left inside (high hat), upper right inside (snare) creates a simple setup for basic beat making. For a more robotic movement, you can set up 4 samples in a row so that your head moves like a typewriter (my preferred setup).","bullet":"black","level":0},{"text":"If you intend to utilize both audio and triggering from a mic simultaneously (making a sound that might have an effect applied while triggering), you\u2019ll need to play around with the <em>millis()<\/em> timer again in the C code to control how many times you trigger. In this case you might want to also adjust your analog input threshold.","text_raw":"If you intend to utilize both audio and triggering from a mic simultaneously (making a sound that might have an effect applied while triggering), you\u2019ll need to play around with the ''millis()'' timer again in the C code to control how many times you trigger. In this case you might want to also adjust your analog input threshold.","bullet":"black","level":0}],"object":null,"images":[],"number":8}],"subject":"","summary":"Make your own octo-microphone USB\/MIDI controller.","time_required":"","title":"Headgear MIDI Control","tools":[],"type":"project"},"guideid":"1206"}