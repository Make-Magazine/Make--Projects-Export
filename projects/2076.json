{"device":"Arduino","url":"http:\/\/makeprojects.com\/Project\/Read+%26+Write+Flash+Contents+of+Your+Arduino+or+AVR+Chip\/2076\/1","guide":{"author":{"text":"Ben L","userid":7628},"categories":["Arduino","Computers"],"conclusion":"<p>I hope this has helped you understand the use of Avrdude for mass burning of chips. Again, this is only worthwhile if you have a large quantity, or want a scriptable method of Arduino management. Using the Arduino software is far easier for small numbers of jobs. If anything is unclear, don't hesitate to comment, and I'll see what I can do.<\/p>","difficulty":"Moderate","documents":[],"flags":[{"title":"User-Contributed Project","flagid":"GUIDE_USER_CONTRIBUTED","text":"This project guide is not managed by MAKE staff."}],"guideid":2076,"image":{"imageid":41506,"text":"http:\/\/guide-images.makeprojects.org\/igi\/IXyfH3ZEnSB4ESHj"},"introduction":"<p>Need to burn Arduino bootloaders onto lots of Arduinos or AVR chips? Avrdude is the perfect tool to configure and burn those things REALLY fast! Plus it's terminal-based and easily scriptable. I'll show you how to bend Avrdude to your will!<\/p>","introduction_rendered":"<p>Need to burn Arduino bootloaders onto lots of Arduinos or AVR chips? Avrdude is the perfect tool to configure and burn those things REALLY fast! Plus it's terminal-based and easily scriptable. I'll show you how to bend Avrdude to your will!<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/ATMega328p\">ATMega328p<\/a><\/li><\/ul><\/div><div class=\"tools\"><strong>Tools<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/Arduino_Duemilanove_or_Diavolino_%28UNO_is_iffy_and_not_recommended%29\">Arduino Duemilanove or Diavolino (UNO is iffy and not recommended)<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Computer_running_Linux_Windows_or_Mac_OSX\">Computer running Linux, Windows, or Mac OSX<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Evil_Mad_Scientist%27s_ISP_Shield_2.0_or_any_AVR_ISP_%28In_System_Programmer%29\">Evil Mad Scientist&amp;apos;s ISP Shield 2.0, or any AVR ISP (In System Programmer)<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/USB_A_to_B_cable\">USB A to B cable<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"ATMega328p","notes":"","url":"http:\/\/makeprojects.com\/Item\/ATMega328p","thumbnail":""}],"prereqs":[],"steps":[{"title":"","lines":[{"text":"First we have to install Avrdude. This method will vary based on your operating system, as we'll see below:","text_raw":"First we have to install Avrdude. This method will vary based on your operating system, as we'll see below:","bullet":"black","level":0},{"text":"For <strong>Windows<\/strong>, an executable can be found <a href=\"http:\/\/sourceforge.net\/projects\/winavr\/files\/\" rel=\"nofollow\">here<\/a>.","text_raw":"For '''Windows''', an executable can be found [http:\/\/sourceforge.net\/projects\/winavr\/files\/|here].","bullet":"black","level":0},{"text":"For <strong>Mac OSX<\/strong>, I recommend following the instructions <a href=\"http:\/\/www.ladyada.net\/learn\/avr\/setup-mac.html\" rel=\"nofollow\">here<\/a>.","text_raw":"For '''Mac OSX''', I recommend following the instructions [http:\/\/www.ladyada.net\/learn\/avr\/setup-mac.html|here].","bullet":"black","level":0},{"text":"For <strong>Linux<\/strong>, your distro may have it in its repository. If you're an Arch Linux user, it can be found in the AUR as avrdude-arduino.","text_raw":"For '''Linux''', your distro may have it in its repository. If you're an Arch Linux user, it can be found in the AUR as avrdude-arduino.","bullet":"black","level":0},{"text":"As I am an Arch Linux user, my initial screenshots will be Arch-based. I'll expand to Windows and perhaps OSX later.","text_raw":"As I am an Arch Linux user, my initial screenshots will be Arch-based. I'll expand to Windows and perhaps OSX later.","bullet":"black","level":0}],"object":null,"images":[{"imageid":41506,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/IXyfH3ZEnSB4ESHj"}],"number":1},{"title":"","lines":[{"text":"Now we're going to show you how to get to Avrdude, which also varies by operating system.","text_raw":"Now we're going to show you how to get to Avrdude, which also varies by operating system.","bullet":"black","level":0},{"text":"For <strong>Windows<\/strong>, type &quot;cmd&quot; in the Run dialog. Type &quot;avrdude&quot; into the terminal. If it installed sucessfully, it should show you a list of options.","text_raw":"For '''Windows''', type \"cmd\" in the Run dialog. Type \"avrdude\" into the terminal. If it installed sucessfully, it should show you a list of options.","bullet":"black","level":0},{"text":"For <strong>OSX<\/strong>, open Terminal and type &quot;avrdude&quot;. A list of options should appear","text_raw":"For '''OSX''', open Terminal and type \"avrdude\". A list of options should appear","bullet":"black","level":0},{"text":"And with <strong>Linux<\/strong>, just open a terminal and type &quot;avrdude&quot; and a list will appear. Like magic.","text_raw":"And with '''Linux''', just open a terminal and type \"avrdude\" and a list will appear. Like magic.","bullet":"black","level":0}],"object":null,"images":[{"imageid":41508,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/OoKi1CpM2sCAcHjl"}],"number":2},{"title":"","lines":[{"text":"Now we're going to connect our AVR ISP programmer to the computer. The steps vary somewhat based on the programmer, but I will show you how to use Evil Mad Scientist's ISP Shield 2.0 on top of an Arduino Duemilanove.","text_raw":"Now we're going to connect our AVR ISP programmer to the computer. The steps vary somewhat based on the programmer, but I will show you how to use Evil Mad Scientist's ISP Shield 2.0 on top of an Arduino Duemilanove.","bullet":"black","level":0},{"text":"Currently, this method may not work with Arduino UNOs without some modifications. This is because of the bootloader used on the UNO.","text_raw":"Currently, this method may not work with Arduino UNOs without some modifications. This is because of the bootloader used on the UNO.","bullet":"icon_note","level":0},{"text":"If you feel like trying, according to <a href=\"http:\/\/arduino.cc\/en\/Tutorial\/ArduinoISP\" rel=\"nofollow\">this site<\/a> it may work with a 10uF capacitor connected between reset and ground. Or it may work unedited, I haven't tested it yet","text_raw":"If you feel like trying, according to [http:\/\/arduino.cc\/en\/Tutorial\/ArduinoISP|this site] it may work with a 10uF capacitor connected between reset and ground. Or it may work unedited, I haven't tested it yet","bullet":"black","level":0}],"object":null,"images":[{"imageid":41511,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/g2XTScBfG1p564bc"}],"number":3},{"title":"","lines":[{"text":"Now we're going to invoke the Avrdude command to do something; in this case copy the flash contents of an ATmega328p chip to a file named &quot;flash.bin&quot; in the current directory.","text_raw":"Now we're going to invoke the Avrdude command to do something; in this case copy the flash contents of an ATmega328p chip to a file named \"flash.bin\" in the current directory.","bullet":"black","level":0},{"text":"In the screenshot we see the command being invoked. <tt>avrdude<\/tt> runs the command, while <tt>-p m328p<\/tt> tells Avrdude we're programming an ATmega328p chip.","text_raw":"In the screenshot we see the command being invoked. ``avrdude`` runs the command, while ``-p m328p`` tells Avrdude we're programming an ATmega328p chip.","bullet":"black","level":0},{"text":"<tt>-P<\/tt> tells Avrdude where to look for the USB programmer. On my Linux computer, it's at <tt>\/dev\/ttyUSB0<\/tt>.","text_raw":"``-P`` tells Avrdude where to look for the USB programmer. On my Linux computer, it's at ``\/dev\/ttyUSB0``.","bullet":"black","level":0},{"text":"On <strong>Windows<\/strong>, the command used is based on the programmer being used. If it's USB-based, than you can put <tt>usb<\/tt> after <tt>-P<\/tt>, if it's on a parallel port it's probably LPT1, or if it's serial, COM1. If you can't find it, you can always look in Device Manager to find out.","text_raw":"On '''Windows''', the command used is based on the programmer being used. If it's USB-based, than you can put ``usb`` after ``-P``, if it's on a parallel port it's probably LPT1, or if it's serial, COM1. If you can't find it, you can always look in Device Manager to find out.","bullet":"black","level":0},{"text":"<strong>OSX<\/strong> users have it tough. If you have the Arduino IDE installed, look under the serial ports option and see where your Arduino is.....","text_raw":"'''OSX''' users have it tough. If you have the Arduino IDE installed, look under the serial ports option and see where your Arduino is.....","bullet":"black","level":0},{"text":"The stuff after <tt>-c<\/tt> is the programmer you're using. For the ISP Shield 2.0, use <tt>avrisp<\/tt>. Look at the documentation on yours to find out.","text_raw":"The stuff after ``-c`` is the programmer you're using. For the ISP Shield 2.0, use ``avrisp``. Look at the documentation on yours to find out.","bullet":"black","level":0},{"text":"Penultimately, the number after <tt>-b<\/tt> is the new baud rate. I could only get the ISP Shield 2.0 on a Duemilanove to work with a rate of 19200. Common baud rates also include 9600. Leave this option off and see if it works. If it doesn't work, and you have the right programmer location, try the two above. Otherwise, Google is your friend.","text_raw":"Penultimately, the number after ``-b`` is the new baud rate. I could only get the ISP Shield 2.0 on a Duemilanove to work with a rate of 19200. Common baud rates also include 9600. Leave this option off and see if it works. If it doesn't work, and you have the right programmer location, try the two above. Otherwise, Google is your friend.","bullet":"black","level":0},{"text":"And finally <tt>-U flash:r:flash.bin:r<\/tt> is the command for reading the flash memory and saving it in raw format to &quot;flash.bin&quot;. Replacing <tt>flash:r:flash.bin:r<\/tt> with <tt>flash:w:flash.bin<\/tt> will write the contents of &quot;flash.bin&quot; to the chip","text_raw":"And finally ``-U flash:r:flash.bin:r`` is the command for reading the flash memory and saving it in raw format to \"flash.bin\". Replacing ``flash:r:flash.bin:r`` with ``flash:w:flash.bin`` will write the contents of \"flash.bin\" to the chip","bullet":"black","level":0}],"object":null,"images":[{"imageid":41513,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/fEc5BiudIjPOOWeQ"}],"number":4},{"title":"","lines":[{"text":"The last thing to worry about, once Avrdude has run succesfully, is the fuse values. These should only be trifled with if your Arduino or chip is not working. I had to change them on some blank 328p chips. The best thing to do is plug it in and test it with the <em>Blink<\/em> sketch. If it doesn't work, then you might have to change the fuses. Proceed to the next step:","text_raw":"The last thing to worry about, once Avrdude has run succesfully, is the fuse values. These should only be trifled with if your Arduino or chip is not working. I had to change them on some blank 328p chips. The best thing to do is plug it in and test it with the ''Blink'' sketch. If it doesn't work, then you might have to change the fuses. Proceed to the next step:","bullet":"black","level":0},{"text":"The fuses are kind of like the config values for the chip itself. They control the speed, voltage, and type of clock used in the chip. Changing these is not difficult, but it is not for the foolhardy. I burned one 328p chip with the <em>Blink<\/em> sketch, and used Avrdude to check the fuses.","text_raw":"The fuses are kind of like the config values for the chip itself. They control the speed, voltage, and type of clock used in the chip. Changing these is not difficult, but it is not for the foolhardy. I burned one 328p chip with the ''Blink'' sketch, and used Avrdude to check the fuses.","bullet":"black","level":0},{"text":"Command for viewing fuses on my computer: <tt>avrdude -p m328p -P \/dev\/ttyUSB0 -c avrisp -b 19200 -v<\/tt>","text_raw":"Command for viewing fuses on my computer: ``avrdude -p m328p -P \/dev\/ttyUSB0 -c avrisp -b 19200 -v``","bullet":"black","level":0},{"text":"In the screenshot, you can see the results of two different chips. To show the date, just replace the <tt>-U<\/tt> option and everything after it with <tt>-v<\/tt>. That will only show you info about the chip, not change it","text_raw":"In the screenshot, you can see the results of two different chips. To show the date, just replace the ``-U`` option and everything after it with ``-v``. That will only show you info about the chip, not change it","bullet":"black","level":0},{"text":"On the top is the results from a chip that successfully runs <em>Blink<\/em>. The bottom one does not.","text_raw":"On the top is the results from a chip that successfully runs ''Blink''. The bottom one does not.","bullet":"black","level":0},{"text":"To change the fuses we only need to go to a calculator, like <a href=\"http:\/\/www.engbedded.com\/fusecalc\/\" rel=\"nofollow\">this one<\/a>. Choose your chip, and enter the values of lfuse, efuse, and hfuse shown in the screenshot  into the bottom of the page under &quot;Current settings&quot;.","text_raw":"To change the fuses we only need to go to a calculator, like [http:\/\/www.engbedded.com\/fusecalc\/|this one]. Choose your chip, and enter the values of lfuse, efuse, and hfuse shown in the screenshot  into the bottom of the page under \"Current settings\".","bullet":"black","level":0},{"text":"It will generate new <tt>-U<\/tt> values which can be added to the end of your command after the <tt>-U flash:w:flash.bin<\/tt>. An unlimited number of <tt>-U<\/tt> commands can be chained. You can run Avrdude with the <tt>-v<\/tt> command again to verify the fuse values.","text_raw":"It will generate new ``-U`` values which can be added to the end of your command after the ``-U flash:w:flash.bin``. An unlimited number of ``-U`` commands can be chained. You can run Avrdude with the ``-v`` command again to verify the fuse values.","bullet":"black","level":0}],"object":null,"images":[{"imageid":41515,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/tbWKr4DW5hTR2EDZ"},{"imageid":41520,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/CnIjJ1aLLsyHDUip"}],"number":5},{"title":"","lines":[{"text":"Finally, here's the full command for copying the contents of the chip AND changing the fuse values to the correct ones:","text_raw":"Finally, here's the full command for copying the contents of the chip AND changing the fuse values to the correct ones:","bullet":"black","level":0},{"text":"<tt>avrdude -p m328p -P \/dev\/ttyUSB0 -c avrisp -V -b 19200 -U flash:w:flash.bin -U lfuse:w:0xff:m -U hfuse:w:0xda:m -U efuse:w:0x05:m<\/tt>","text_raw":"``avrdude -p m328p -P \/dev\/ttyUSB0 -c avrisp -V -b 19200 -U flash:w:flash.bin -U lfuse:w:0xff:m -U hfuse:w:0xda:m -U efuse:w:0x05:m``","bullet":"black","level":0},{"text":"This copies the contents of &quot;flash.bin&quot; to the chip, and overwrites the fuses. The eagle-eyed among you will notice the addition of <tt>-V<\/tt>, which tells Avrdude not to verify the process, and cuts the time from 30 seconds to a shocking <strong>2.24 seconds<\/strong> per chip. Use at your own risk, of course.","text_raw":"This copies the contents of \"flash.bin\" to the chip, and overwrites the fuses. The eagle-eyed among you will notice the addition of ``-V``, which tells Avrdude not to verify the process, and cuts the time from 30 seconds to a shocking '''2.24 seconds''' per chip. Use at your own risk, of course.","bullet":"black","level":0},{"text":"Finally, if you'd like additional information, or are still somewhat confused, these links may aid you: <a href=\"http:\/\/arduino.cc\/en\/Tutorial\/ArduinoISP\" rel=\"nofollow\">http:\/\/arduino.cc\/en\/Tutorial\/ArduinoISP<\/a>  <a href=\"http:\/\/www.ladyada.net\/learn\/avr\/avrdude.html\" rel=\"nofollow\" title=\"http:\/\/www.ladyada.net\/learn\/avr\/avrdude.html\">http:\/\/www.ladyada.net\/learn\/avr\/avrdude...<\/a> <a href=\"http:\/\/www.evilmadscientist.com\/article.php\/avrreadflash\" rel=\"nofollow\" title=\"http:\/\/www.evilmadscientist.com\/article.php\/avrreadflash\">http:\/\/www.evilmadscientist.com\/article....<\/a> <a href=\"http:\/\/www.ladyada.net\/learn\/avr\/fuses.html\" rel=\"nofollow\" title=\"http:\/\/www.ladyada.net\/learn\/avr\/fuses.html\">http:\/\/www.ladyada.net\/learn\/avr\/fuses.h...<\/a>","text_raw":"Finally, if you'd like additional information, or are still somewhat confused, these links may aid you: http:\/\/arduino.cc\/en\/Tutorial\/ArduinoISP  http:\/\/www.ladyada.net\/learn\/avr\/avrdude.html http:\/\/www.evilmadscientist.com\/article.php\/avrreadflash http:\/\/www.ladyada.net\/learn\/avr\/fuses.html","bullet":"black","level":0},{"text":"Note though, that Avrdude is only really worth it if you have large numbers of chips (or boards) to burn. The Arduino software can easily do all this stuff, albeit slower and not as scriptable. But a lot easier.","text_raw":"Note though, that Avrdude is only really worth it if you have large numbers of chips (or boards) to burn. The Arduino software can easily do all this stuff, albeit slower and not as scriptable. But a lot easier.","bullet":"black","level":0}],"object":null,"images":[{"imageid":41517,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/R2SLYMvkjPEFBnlC"}],"number":6}],"subject":"","summary":"Use Avrdude to read and write flash contents of Arduinos and AVR chips.","time_required":"2.24 seconds to 3 hours","title":"Read & Write Flash Contents of Your Arduino or AVR Chip","tools":[{"text":"Arduino Duemilanove or Diavolino (UNO is iffy and not recommended)","notes":"","url":"http:\/\/makeprojects.com\/Item\/Arduino_Duemilanove_or_Diavolino_%28UNO_is_iffy_and_not_recommended%29","thumbnail":""},{"text":"Computer running Linux, Windows, or Mac OSX","notes":"","url":"http:\/\/makeprojects.com\/Item\/Computer_running_Linux_Windows_or_Mac_OSX","thumbnail":""},{"text":"Evil Mad Scientist&apos;s ISP Shield 2.0, or any AVR ISP (In System Programmer)","notes":"","url":"http:\/\/makeprojects.com\/Item\/Evil_Mad_Scientist%27s_ISP_Shield_2.0_or_any_AVR_ISP_%28In_System_Programmer%29","thumbnail":""},{"text":"USB A to B cable","notes":"","url":"http:\/\/makeprojects.com\/Item\/USB_A_to_B_cable","thumbnail":""}],"type":"technique"},"guideid":"2076"}