{"device":"Hacks and Mods","url":"http:\/\/makeprojects.com\/Project\/Electronic+Timer+for+a+Dishwasher\/1172\/1","guide":{"author":{"text":"Miguel Marcos","userid":4700},"categories":["Hacks and Mods","Arduino"],"conclusion":"","difficulty":"Moderate","documents":[{"text":"dishwasher1.pdf","url":"http:\/\/make-documents.s3.amazonaws.com\/5XRdd4pNDL3CGTBN.pdf","documentid":188},{"text":"dishwasher2.pdf","url":"http:\/\/make-documents.s3.amazonaws.com\/BUnZY5XodFHqRodE.pdf","documentid":189}],"flags":[{"title":"User-Contributed Project","flagid":"GUIDE_USER_CONTRIBUTED","text":"This project guide is not managed by MAKE staff."}],"guideid":1172,"image":{"imageid":22859,"text":"http:\/\/guide-images.makeprojects.org\/igi\/TgTW5o2X5wNdSDYR"},"introduction":"<p>WARNING: The circuits shown herein do not provide isolation from the AC mains, and therefore any part of the circuit can be exposed to dangerous voltages relative to earth ground. Extreme care must be observed in testing or handling these circuits while connected to the powerline.<\/p>\n\n<p>AM486 appliance modules are essentially relays that are rated for 120V\/15A and thus they are well suited to the task at hand. These relays are of a bi-stable design, meaning that they require no holding current to remain either open or closed but additional circuitry is required to determine their current state.<\/p>\n\n<p>For this project one relay was allocated to each of the functions in the dishwasher which are:<\/p>\n\n<ul><li>pump motor<\/li><li>water fill<\/li><li>drain<\/li><li>soap dispenser #1<\/li><li>soap dispenser #2<\/li><li>blower motor<\/li><\/ul>","introduction_rendered":"<p>WARNING: The circuits shown herein do not provide isolation from the AC mains, and therefore any part of the circuit can be exposed to dangerous voltages relative to earth ground. Extreme care must be observed in testing or handling these circuits while connected to the powerline.<\/p>\n\n<p>AM486 appliance modules are essentially relays that are rated for 120V\/15A and thus they are well suited to the task at hand. These relays are of a bi-stable design, meaning that they require no holding current to remain either open or closed but additional circuitry is required to determine their current state.<\/p>\n\n<p>For this project one relay was allocated to each of the functions in the dishwasher which are:<\/p>\n\n<ul><li>pump motor<\/li><li>water fill<\/li><li>drain<\/li><li>soap dispenser #1<\/li><li>soap dispenser #2<\/li><li>blower motor<\/li><\/ul>","locale":"en","parts":[],"prereqs":[],"steps":[{"title":"","lines":[{"text":"The first step consisted in performing a reverse-engineering analysis of the circuitry used on the AM486 modules.","text_raw":"The first step consisted in performing a reverse-engineering analysis of the circuitry used on the AM486 modules.","bullet":"black","level":0},{"text":"The PCB uses a single copper layer which makes it very easy to trace the circuit. My analysis was confined to these areas: Power supply; Relay control; Relay state sensing.","text_raw":"The PCB uses a single copper layer which makes it very easy to trace the circuit. My analysis was confined to these areas: Power supply; Relay control; Relay state sensing.","bullet":"black","level":0},{"text":"The attached schematic shows the diagram for each area. Upper-left corner: relay state sensing; Upper-right corner: power supply; Middle: relay control; Bottom: dishwasher function.","text_raw":"The attached schematic shows the diagram for each area. Upper-left corner: relay state sensing; Upper-right corner: power supply; Middle: relay control; Bottom: dishwasher function.","bullet":"black","level":0}],"object":null,"images":[{"imageid":22855,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/eU1jTHSJ4uBLKwNo"}],"number":1},{"title":"","lines":[{"text":"For the next phase of the analysis I removed all of the unnecessary components from the PCB and attached an Arduino Pro Mini board by connecting:","text_raw":"For the next phase of the analysis I removed all of the unnecessary components from the PCB and attached an Arduino Pro Mini board by connecting:","bullet":"black","level":0},{"text":"The RAW and +5V signals to the corresponding power signals of the Arduino board,","text_raw":"The RAW and +5V signals to the corresponding power signals of the Arduino board,","bullet":"black","level":1},{"text":"The CONTROL signal to one of the digital outputs,","text_raw":"The CONTROL signal to one of the digital outputs,","bullet":"black","level":1},{"text":"The SENSE signal to one of the analog inputs.","text_raw":"The SENSE signal to one of the analog inputs.","bullet":"black","level":1},{"text":"To aid in the development, I also connected a BluetoothMate module to the Arduino board. This way I could send commands and debugging data to and from my development PC.","text_raw":"To aid in the development, I also connected a BluetoothMate module to the Arduino board. This way I could send commands and debugging data to and from my development PC.","bullet":"black","level":0},{"text":"CAUTION: Since the circuits that we are dealing with here are not isolated from the AC mains, it would likely be very unwise to attempt to make a wired connection from the Arduino board to a PC's serial port.","text_raw":"CAUTION: Since the circuits that we are dealing with here are not isolated from the AC mains, it would likely be very unwise to attempt to make a wired connection from the Arduino board to a PC's serial port.","bullet":"black","level":0}],"object":null,"images":[],"number":2},{"title":"","lines":[{"text":"I soon found out that the current draw from the Arduino+Bluetooth was overloading the transformerless power supply of the AM486 module. However, simply increasing the value of C3 and choosing components for D2 and R8 with a suitably higher power dissipation rating solved the issue.","text_raw":"I soon found out that the current draw from the Arduino+Bluetooth was overloading the transformerless power supply of the AM486 module. However, simply increasing the value of C3 and choosing components for D2 and R8 with a suitably higher power dissipation rating solved the issue.","bullet":"black","level":0},{"text":"Through experimentation I determined that the relay can be reliably actuated by sending 4 1-ms pulses evenly spaced over one powerline AC cycle.","text_raw":"Through experimentation I determined that the relay can be reliably actuated by sending 4 1-ms pulses evenly spaced over one powerline AC cycle.","bullet":"black","level":0},{"text":"The analog values read from the sensing circuit were like this:","text_raw":"The analog values read from the sensing circuit were like this:","bullet":"black","level":0},{"text":"0V if the relay switch is open and the load is disconnected;","text_raw":"0V if the relay switch is open and the load is disconnected;","bullet":"black","level":1},{"text":"Toggling between 0 and 5V (in sync with the AC) if the relay switch is open but the load is connected;","text_raw":"Toggling between 0 and 5V (in sync with the AC) if the relay switch is open but the load is connected;","bullet":"black","level":1},{"text":"5V if the relay switch is closed regardless of whether the load is connected or not. Thus the final scheme adopted for sensing the state of the relay was to sample the analog input for about 2 powerline AC cycles and return the average value.","text_raw":"5V if the relay switch is closed regardless of whether the load is connected or not. Thus the final scheme adopted for sensing the state of the relay was to sample the analog input for about 2 powerline AC cycles and return the average value.","bullet":"black","level":1},{"text":"The final revision of the Arduino sketch used for analyzing the relay circuit behavior is in the &quot;dishwasher1.pdf&quot; attachment.","text_raw":"The final revision of the Arduino sketch used for analyzing the relay circuit behavior is in the \"dishwasher1.pdf\" attachment.","bullet":"black","level":0}],"object":null,"images":[],"number":3},{"title":"","lines":[{"text":"Once the circuits and basic control software have been identified, what remains is to harvest the necessary components from the AM486 modules, assemble them onto the project's circuit board, and write the Arduino sketch that controls the timing of the relays to emulate the operation of the electromechanical timer.","text_raw":"Once the circuits and basic control software have been identified, what remains is to harvest the necessary components from the AM486 modules, assemble them onto the project's circuit board, and write the Arduino sketch that controls the timing of the relays to emulate the operation of the electromechanical timer.","bullet":"black","level":0},{"text":"Clearly, because there are multiple functions to control in the dishwasher, the relay control and state sensing circuits have to be replicated that many times with each CONTROL or SENSE signal connected to a corresponding digital or analog pin on the Arduino board.","text_raw":"Clearly, because there are multiple functions to control in the dishwasher, the relay control and state sensing circuits have to be replicated that many times with each CONTROL or SENSE signal connected to a corresponding digital or analog pin on the Arduino board.","bullet":"black","level":0},{"text":"Luckily, the Arduino Pro Mini board is provisioned with enough digital and analog pins that one doesn't need to come up with any sharing schemes (such as using multiplexers).","text_raw":"Luckily, the Arduino Pro Mini board is provisioned with enough digital and analog pins that one doesn't need to come up with any sharing schemes (such as using multiplexers).","bullet":"black","level":0},{"text":"The Arduino sketch used to control the dishwasher timer is contained in the attachment &quot;dishwasher2.pdf&quot;","text_raw":"The Arduino sketch used to control the dishwasher timer is contained in the attachment \"dishwasher2.pdf\"","bullet":"black","level":0}],"object":null,"images":[],"number":4},{"title":"","lines":[{"text":"Attachment of the electronic timer assembly to the dishwasher was straightforward: it fit nicely behind the front cover and the function wires along with the AC live and neutral were moved directly from the electromechanical timer to the terminals provided on the circuit board.","text_raw":"Attachment of the electronic timer assembly to the dishwasher was straightforward: it fit nicely behind the front cover and the function wires along with the AC live and neutral were moved directly from the electromechanical timer to the terminals provided on the circuit board.","bullet":"black","level":0}],"object":null,"images":[{"imageid":22851,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/1aUcweIEFgo1sTUm"},{"imageid":22856,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/obe6WqBDqNQ1CiCI"}],"number":5}],"subject":"","summary":"In this project I used an Arduino microcontroller and the circuitry from several X-10 AM486 appliance modules to build a replacement timer for an old dishwasher.","time_required":"","title":"Electronic Timer for a Dishwasher","tools":[],"type":"project"},"guideid":"1172"}