{"device":"Circuits","url":"http:\/\/makeprojects.com\/Project\/Electric+Random+Number+Generators\/729\/1","guide":{"author":{"text":"Charles Platt","userid":1423},"categories":["Circuits","Gadgets"],"conclusion":"<p>Of course I could have simulated dice more easily by writing a few lines of software to generate random numbers on a screen, but even a fancy screen image cannot have the same appeal as a well-made piece of hardware. Also, I derived satisfaction from using simple, dedicated chips that demonstrate the binary arithmetic and Boolean logic that are fundamental in every computer. Best of all, I ended up with an object representing my particular tastes and idiosyncracies; and to me, that\u2019s what making things is all about.<\/p>\n\n<p><strong>7400s on the Moon:<\/strong><\/p>\n\n<p>If you noticed the similarity between part numbers for the 74LS92 counter and the 74LS27 NOR gate, there is a reason for this. They both belong to the pioneering 7400 family of integrated circuits developed by Texas Instruments back in the day. The 7400s travelled on NASA\u2019s manned moon missions and have become legendary in electronics, even meriting a Wikipedia entry (<a href=\"http:\/\/wikipedia.org\/wiki\/7400\">http:\/\/wikipedia.org\/wiki\/7400<\/a>). 7400s are still used for prototyping and for teaching computer science. It doesn\u2019t take much Boolean logic to combine AND, OR, NOT, NAND, NOR, XOR, and XNOR gates in ways that will take you far beyond electronic dice.<\/p>","difficulty":"Moderate","documents":[],"flags":[{"title":"Unpublished","flagid":"GUIDE_PRIVATE","text":"This project guide will not appear in search results but can still be viewed by anyone!"}],"guideid":729,"image":{"imageid":12163,"text":"http:\/\/guide-images.makeprojects.org\/igi\/MIIBFtwdccJrimEJ"},"introduction":"<p>For me, a good construction project should create an object that is fun, functional, and pleasing to the eye \u2014 and if it teaches me something interesting along the way, so much the better. I managed to satisfy all these requirements when I designed and built a pair of electronic dice. Although dice simulations have been around for many years, I was able to simplify the project while at the same time making it more interesting.<\/p>\n\n<p>The basic principle is easy to understand. One chip generates a rapid stream of pulses. A second chip counts them and displays each number via an array of LEDs imitating the pattern of spots on a die. At an arbitrary moment, we stop the process to display one number at random.<\/p>\n\n<p>Most dice circuits use a decade counter to do the counting, but I went for a 74LS92 chip, which counts in sixes and returns the result in binary code. This may sound uninviting, but it just happens to be ideal for a dice display.<\/p>\n\n<p>Figure 1 (page 71) shows the 74LS92 seen from above. It has 14 pins, of which Pins 9, 11, and 12 are outputs. On each of these pins a higher voltage represents a 1 while a lower voltage represents a 0. The chip starts with 0 on all three pins.<\/p>\n\n<p>When it receives a timing pulse, Pin 12 counts from 0 to 1. At the next pulse, Pin 12 carries the 1 over to Pin 11 and resets itself to 0. Then it counts to 1 again, and then, since Pins 11 and 12 have both reached their maximum, they carry a 1 over to Pin 9 and reset themselves to 0. The binary counting sequence is shown in the table in Figure 2.<\/p>\n\n<p>If Pin 12 drives an LED in the center of the array, and Pin 11 is wired to two diagonally positioned LEDs, and Pin 9 adds the LEDs in the opposite corners, the counter will display all the spot patterns from 1 through 5 in correct numerical order. I liked the simplicity of this arrangement, but there was one little problem: when the counter begins with 0 on all three pins, it should really display a 6. To fix this, I needed a NOR gate.<\/p>\n\n<p>Computers function with Boolean logic, meaning that they contain many components that take two or more inputs and give an output according to a simple rule. The rule for a NOR gate is that when all of its inputs are low, it gives a positive output.<\/p>\n\n<p>A chip known as the 74LS27 contains three 3-input NORs (as shown in Figure 3). All I had to do was connect all three outputs from the counter to the three inputs on a NOR gate, and then wire the NOR output to light up six LEDs. Figure 2 shows this symbolically.<\/p>\n\n<p><strong>Note<\/strong> \u2013 Source for chips: <a href=\"http:\/\/ebay.com\" rel=\"nofollow\">http:\/\/ebay.com<\/a> or <a href=\"http:\/\/mouser.com\" rel=\"nofollow\">http:\/\/mouser.com<\/a><\/p>","introduction_rendered":"<p>For me, a good construction project should create an object that is fun, functional, and pleasing to the eye \u2014 and if it teaches me something interesting along the way, so much the better. I managed to satisfy all these requirements when I designed and built a pair of electronic dice. Although dice simulations have been around for many years, I was able to simplify the project while at the same time making it more interesting.<\/p>\n\n<p>The basic principle is easy to understand. One chip generates a rapid stream of pulses. A second chip counts them and displays each number via an array of LEDs imitating the pattern of spots on a die. At an arbitrary moment, we stop the process to display one number at random.<\/p>\n\n<p>Most dice circuits use a decade counter to do the counting, but I went for a 74LS92 chip, which counts in sixes and returns the result in binary code. This may sound uninviting, but it just happens to be ideal for a dice display.<\/p>\n\n<p>Figure 1 (page 71) shows the 74LS92 seen from above. It has 14 pins, of which Pins 9, 11, and 12 are outputs. On each of these pins a higher voltage represents a 1 while a lower voltage represents a 0. The chip starts with 0 on all three pins.<\/p>\n\n<p>When it receives a timing pulse, Pin 12 counts from 0 to 1. At the next pulse, Pin 12 carries the 1 over to Pin 11 and resets itself to 0. Then it counts to 1 again, and then, since Pins 11 and 12 have both reached their maximum, they carry a 1 over to Pin 9 and reset themselves to 0. The binary counting sequence is shown in the table in Figure 2.<\/p>\n\n<p>If Pin 12 drives an LED in the center of the array, and Pin 11 is wired to two diagonally positioned LEDs, and Pin 9 adds the LEDs in the opposite corners, the counter will display all the spot patterns from 1 through 5 in correct numerical order. I liked the simplicity of this arrangement, but there was one little problem: when the counter begins with 0 on all three pins, it should really display a 6. To fix this, I needed a NOR gate.<\/p>\n\n<p>Computers function with Boolean logic, meaning that they contain many components that take two or more inputs and give an output according to a simple rule. The rule for a NOR gate is that when all of its inputs are low, it gives a positive output.<\/p>\n\n<p>A chip known as the 74LS27 contains three 3-input NORs (as shown in Figure 3). All I had to do was connect all three outputs from the counter to the three inputs on a NOR gate, and then wire the NOR output to light up six LEDs. Figure 2 shows this symbolically.<\/p>\n\n<p><strong>Note<\/strong> \u2013 Source for chips: <a href=\"http:\/\/ebay.com\" rel=\"nofollow\">http:\/\/ebay.com<\/a> or <a href=\"http:\/\/mouser.com\" rel=\"nofollow\">http:\/\/mouser.com<\/a><\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/SPST_momentary_pushbutton_switch\">SPST momentary pushbutton switch<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;amp;filterName=Brand&amp;amp;filterValue=RadioShack\">Resistor<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;amp;filterName=Brand&amp;amp;filterValue=RadioShack\">Resistor<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;amp;filterName=Brand&amp;amp;filterValue=RadioShack\">Resistor<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;amp;filterName=Brand&amp;amp;filterValue=RadioShack\">Resistor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Capacitor\">Capacitor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Capacitor\">Capacitor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Capacitor\">Capacitor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Signal_diodes\">Signal diodes<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Signal_transistors\">Signal transistors<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Timer\">Timer<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Counter\">Counter<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Triple_3-input_NOR_gates\">Triple 3-input NOR gates<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/family\/index.jsp?categoryId=2032298\">LED<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062599\">Voltage regulator<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"SPST momentary pushbutton switch","notes":"S1","url":"http:\/\/makeprojects.com\/Item\/SPST_momentary_pushbutton_switch","thumbnail":""},{"text":"Resistor","notes":"R1, and R4","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;filterName=Brand&amp;filterValue=RadioShack","thumbnail":""},{"text":"Resistor","notes":"R2 and R3, for time increment","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;filterName=Brand&amp;filterValue=RadioShack","thumbnail":""},{"text":"Resistor","notes":"R5, R6, R7, and R8; for IC protection","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;filterName=Brand&amp;filterValue=RadioShack","thumbnail":""},{"text":"Resistor","notes":"R9, R10, R11, and R12; for LED protection (adjust the values to suit your LEDs)","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;filterName=Brand&amp;filterValue=RadioShack","thumbnail":""},{"text":"Capacitor","notes":"C1, for decoupling","url":"http:\/\/makeprojects.com\/Item\/Capacitor","thumbnail":""},{"text":"Capacitor","notes":"C2, for timer slowdown","url":"http:\/\/makeprojects.com\/Item\/Capacitor","thumbnail":""},{"text":"Capacitor","notes":"C3 for time increment, C4 for decoupling","url":"http:\/\/makeprojects.com\/Item\/Capacitor","thumbnail":""},{"text":"Signal diodes","notes":"D1, D2, D3, and D4","url":"http:\/\/makeprojects.com\/Item\/Signal_diodes","thumbnail":""},{"text":"Signal transistors","notes":"Q1, Q2, Q3, and Q4","url":"http:\/\/makeprojects.com\/Item\/Signal_transistors","thumbnail":""},{"text":"Timer","notes":"IC1","url":"http:\/\/makeprojects.com\/Item\/Timer","thumbnail":""},{"text":"Counter","notes":"IC2","url":"http:\/\/makeprojects.com\/Item\/Counter","thumbnail":""},{"text":"Triple 3-input NOR gates","notes":"IC3","url":"http:\/\/makeprojects.com\/Item\/Triple_3-input_NOR_gates","thumbnail":""},{"text":"LED","notes":"your choice","url":"http:\/\/www.radioshack.com\/family\/index.jsp?categoryId=2032298","thumbnail":""},{"text":"Voltage regulator","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062599","thumbnail":""}],"prereqs":[],"steps":[{"title":"","lines":[{"text":"Note that pin numbers reference the schematics.","text_raw":"Note that pin numbers reference the schematics.","bullet":"icon_note","level":0},{"text":"The actual circuit is in Figure 4, with components laid out as you are likely to place them on a breadboard. For the sake of clarity, I omitted the wires supplying positive and negative voltage.","text_raw":"The actual circuit is in Figure 4, with components laid out as you are likely to place them on a breadboard. For the sake of clarity, I omitted the wires supplying positive and negative voltage.","bullet":"black","level":0}],"object":null,"images":[],"number":1},{"title":"","lines":[{"text":"You\u2019ll have to link all the plus (red) symbols and all the minus (blue) symbols with the positive and negative sides of a power supply, which must provide a properly regulated 5V DC. The best way to guarantee this is by passing a higher voltage (for instance, from a 12V AC adapter) through a regulator such as the Fairchild LM7805CT. I\u2019ve always liked this component since I read the manufacturer\u2019s spec sheet, which describes it as \u201cessentially indestructible.\u201d Now, that\u2019s a semiconductor I can live with.","text_raw":"You\u2019ll have to link all the plus (red) symbols and all the minus (blue) symbols with the positive and negative sides of a power supply, which must provide a properly regulated 5V DC. The best way to guarantee this is by passing a higher voltage (for instance, from a 12V AC adapter) through a regulator such as the Fairchild LM7805CT. I\u2019ve always liked this component since I read the manufacturer\u2019s spec sheet, which describes it as \u201cessentially indestructible.\u201d Now, that\u2019s a semiconductor I can live with.","bullet":"black","level":0}],"object":null,"images":[],"number":2},{"title":"","lines":[{"text":"I had to add four diodes around the 74LS27 chip to prevent outputs conflicting with inputs. I needed transistors to drive the LEDs, because the counter chip doesn\u2019t have enough power to do this on its own. Resistors R5 through R8 prevent the transistors from overloading the chip, and R9 through R12 protect the LEDs. Their exact values will depend on which LEDs you happen to use. Check the manufacturer\u2019s recommended voltage (usually somewhere between 2.5V and 3.5V), apply a meter to each LED while it is illuminated, and adjust the resistor values up or down accordingly.","text_raw":"I had to add four diodes around the 74LS27 chip to prevent outputs conflicting with inputs. I needed transistors to drive the LEDs, because the counter chip doesn\u2019t have enough power to do this on its own. Resistors R5 through R8 prevent the transistors from overloading the chip, and R9 through R12 protect the LEDs. Their exact values will depend on which LEDs you happen to use. Check the manufacturer\u2019s recommended voltage (usually somewhere between 2.5V and 3.5V), apply a meter to each LED while it is illuminated, and adjust the resistor values up or down accordingly.","bullet":"black","level":0}],"object":null,"images":[],"number":3},{"title":"","lines":[{"text":"Most likely you will mount your LEDs on a separate display panel, in a configuration such as the one in Figure 5. The little dice icons in the LED circuit indicate inputs that correspond with outputs from the circuit in Figure 4. Just connect a wire between each matching pair of icons.","text_raw":"Most likely you will mount your LEDs on a separate display panel, in a configuration such as the one in Figure 5. The little dice icons in the LED circuit indicate inputs that correspond with outputs from the circuit in Figure 4. Just connect a wire between each matching pair of icons.","bullet":"black","level":0}],"object":null,"images":[],"number":4},{"title":"","lines":[{"text":"When you have finished building your circuit, you should short the unused pins on the 74LS27 chip together and ground them, to reduce the chance of errors caused by electronic noise.","text_raw":"When you have finished building your circuit, you should short the unused pins on the 74LS27 chip together and ground them, to reduce the chance of errors caused by electronic noise.","bullet":"black","level":0}],"object":null,"images":[],"number":5},{"title":"","lines":[{"text":"S1 at the top of the circuit is a momentary pushbutton, supplying power to a 555 timer, which sends about 500 pulses per second to the counter. The LEDs become a blur, and no one can tell which number is being generated at any moment.","text_raw":"S1 at the top of the circuit is a momentary pushbutton, supplying power to a 555 timer, which sends about 500 pulses per second to the counter. The LEDs become a blur, and no one can tell which number is being generated at any moment.","bullet":"black","level":0},{"text":"When the button is released, this is equivalent to throwing the die. Power to the 555 is cut off, but capacitor C2 has accumulated a potential and now slowly discharges itself. As its voltage diminishes, the 555 runs more slowly, until the LEDs finally stop flickering and show one number \u2014 much like a die as it rolls across a table and stops with one face up.","text_raw":"When the button is released, this is equivalent to throwing the die. Power to the 555 is cut off, but capacitor C2 has accumulated a potential and now slowly discharges itself. As its voltage diminishes, the 555 runs more slowly, until the LEDs finally stop flickering and show one number \u2014 much like a die as it rolls across a table and stops with one face up.","bullet":"black","level":0}],"object":null,"images":[],"number":6},{"title":"","lines":[{"text":"If you want two dice instead of one, you will need to duplicate the entire circuit (except for the 74LS27 chip, which still has two spare NOR gates on it). To ensure randomicity, the second die must run at a different speed from the first, requiring slightly different values for C3, R2, and R3. You can double the value of C2 so that the second die takes longer to stop flashing, like the second reel on a Las Vegas slot machine. The two dice displays should still start simultaneously, which will entail using a double-pole pushbutton for S1, providing power separately to each circuit.","text_raw":"If you want two dice instead of one, you will need to duplicate the entire circuit (except for the 74LS27 chip, which still has two spare NOR gates on it). To ensure randomicity, the second die must run at a different speed from the first, requiring slightly different values for C3, R2, and R3. You can double the value of C2 so that the second die takes longer to stop flashing, like the second reel on a Las Vegas slot machine. The two dice displays should still start simultaneously, which will entail using a double-pole pushbutton for S1, providing power separately to each circuit.","bullet":"black","level":0},{"text":"If you need to troubleshoot the circuit, try adding a 10\u00b5F capacitor in parallel with C3 to make the 555 timer run very slowly. Disconnect IC3 and use a meter to check voltage on the outputs from IC2. If they are counting properly, reconnect IC3 and check its outputs one at a time. Be sure to use a power supply of only 5V; any more will burn out the counter chip.","text_raw":"If you need to troubleshoot the circuit, try adding a 10\u00b5F capacitor in parallel with C3 to make the 555 timer run very slowly. Disconnect IC3 and use a meter to check voltage on the outputs from IC2. If they are counting properly, reconnect IC3 and check its outputs one at a time. Be sure to use a power supply of only 5V; any more will burn out the counter chip.","bullet":"black","level":0}],"object":null,"images":[],"number":7}],"subject":"","summary":"Build a pair of electronic number generators.","time_required":"1 day","title":"Electric Random Number Generators","tools":[],"type":"project"},"guideid":"729"}