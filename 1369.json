{"device":"Remote Control","url":"http:\/\/makeprojects.com\/Project\/Lawnbot400\/1369\/1","guide":{"author":{"text":"J D Warren","userid":9381},"categories":["Remote Control","Arduino"],"conclusion":"<h3 id=\"Section_Going_Further\">Going Further<\/h3>\n\n<p>How about adding ultrasonic sensors, wireless cameras, and an XBee wireless link? I got an ArduPilot with GPS for Christmas, so we\u2019ll see what happens there. I also plan to connect an electric motor to the lawn mower drive shaft to charge the batteries, which will also act as an onboard electric starter for the engine in case it dies during operation.<\/p>\n\n<p>To automate the process, I\u2019d start by mowing the grass with the R\/C remote while using a GPS logger to record its movements. Then the ArduPilot would guide the Lawnbot through the recorded GPS path, using sensors to keep it from hitting anything the GPS didn\u2019t catch. Of course, I\u2019d be inside, watching via camera while enjoying a cold beverage.<\/p>\n\n<p>Find parts lists, schematics, code, and videos of the Lawnbot400 at <a href=\"http:\/\/makezine.com\/22\/rclawnmower\">http:\/\/makezine.com\/22\/rclawnmower<\/a>.<\/p>\n\n<p><strong>This project first appeared in <a href=\"http:\/\/makezine.com\/22\">MAKE Volume 22<\/a>, page 42.<\/strong><\/p>","difficulty":"Difficult","documents":[],"flags":[{"title":"From MAKE Magazine","flagid":"FROM_MAKE","text":"This project first appeared on the pages of MAKE magazine."}],"guideid":1369,"image":{"imageid":28772,"text":"http:\/\/guide-images.makeprojects.org\/igi\/u4h6EefCTkeLlpsv"},"introduction":"<p>I have always hated mowing the lawn. I was the guy who only mowed when the grass got to be 6&quot; taller than the neighbors\u2019 lawns \u2014 not because I don\u2019t like my neighbors, but because mowing was such a pain. After being hit by one too many rocks, I decided I no longer wanted to stand behind a mower while cutting the grass. I also realized that if I got a riding mower, I\u2019d still be right in the middle of all that dust and pollen.<\/p>\n\n<p>I started thinking, what if I could mow the grass from the back deck, or even the computer? To handle my 1-acre backyard\u2019s hills, dips, and rocks, an R\/C lawn mower would have to be very sturdy, be controllable from a good distance, and have enough battery power to last several hours. I built the Lawnbot400 to meet these criteria.<\/p>\n\n<h3 id=\"Section_Functional_Overview\">Functional Overview<\/h3>\n\n<p>Basically, if you took the wheels and handlebar off any old gas-powered push mower, bolted it into a sturdy metal frame with 2 electric wheelchair motors, and added the electronics needed to make it move, you\u2019d have the Lawnbot400. I control mine with a standard hobby R\/C transmitter and receiver, but with just a few modifications it could be made autonomous.<\/p>\n\n<p>Steering the Lawnbot is simple. Move the left control stick up, and the left wheel moves forward. Move the right control stick back, and the right wheel moves backward. Both sticks forward and you go straight ahead. This is called \u201ctank steering,\u201d and it gives the Lawnbot400 a zero turn radius.<\/p>\n\n<p>The pieces that enable this control are a bit more complex. The hobby R\/C transmitter encodes the control sticks\u2019 positions and sends them to the receiver using pulse-position modulation (PPM), which encodes a value, such as the desired position of a servo, as the ratio of ON time to OFF time in a fixed-duration series of repeated pulses. But the H-bridge motor controller that supplies variable voltage to the wheelchair motors needs a simpler pulse-width modulation (PWM) signal, in which the pulses don\u2019t repeat within a fixed time frame. So I used an Arduino-based microcontroller to translate the PPM R\/C signal into PWM for the H-bridge.<\/p>\n\n<p>The H-bridge uses transistors to convert the 0V\u20135V PWM values into straight 0V\u201324V DC voltages running from the batteries to the motors in both directions. The wheelchair motors are electric, so the bot will drive even if the gas-powered mower isn\u2019t running. Instead of buying an H-bridge, I chose to build my own. (It should be noted that I didn\u2019t plan to take the easiest route in this project. Instead, I wanted to learn how each electronic part worked, so I\u2019d know how to fix it if it broke.)<\/p>\n\n<p>I didn\u2019t want to donate my Arduino to the project, so I made my own controller with screw terminals on each pin for secure connections during bumpy rides. Like an off-the-shelf Arduino, this board serves as a breakout board for the ATmega168 microcontroller chip, and it has its own 5V regulator (LM7805), 16MHz crystal, power LED, and reset button. I also added a header to the board for my R\/C receiver to plug directly into. My board lacks the standard Arduino programming port and FTDI USB chip, so to use it, I simply program an ATmega chip in my Arduino, then swap it over.<\/p>\n\n<p>With all of the above, I got the Lawnbot400 running successfully, and in the next version, I added a fail-safe to keep the bot from running away if it loses its signal. The fail-safe uses a second (even simpler) Arduino-compatible breakout board to read a third R\/C channel, controlled by a toggle switch on the transmitter. The code reads this channel using the PulseIn method and sets a digital output pin accordingly. If signal is present, the output pin stays on, which uses a 5V relay circuit to keep a 60-amp relay open, to let the main 24V battery power reach the motor controller. But if the bot gets out of range or the switch is turned off, the channel reads LOW and motor power shuts off until signal is restored.<\/p>\n\n<p>Both the R\/C and fail-safe control boards were simple to build and cost around $12 each. Later, I figured out how to add fail-safe handling into the main R\/C code, so you could use just one microcontroller chip with all 3 channels, but this would sacrifice some safety. If the sole ATmega goes crazy and stops responding, you\u2019re out of luck, whereas it\u2019s highly unlikely that both chips will fail at the same time. So I still use the separate, dedicated fail-safe.<\/p>\n\n<p>Here\u2019s how I built my latest Lawnbot400; see the Substitutions box on the previous page for easier options that will have you mowing from your deck chair sooner.<\/p>","introduction_rendered":"<p>I have always hated mowing the lawn. I was the guy who only mowed when the grass got to be 6&quot; taller than the neighbors\u2019 lawns \u2014 not because I don\u2019t like my neighbors, but because mowing was such a pain. After being hit by one too many rocks, I decided I no longer wanted to stand behind a mower while cutting the grass. I also realized that if I got a riding mower, I\u2019d still be right in the middle of all that dust and pollen.<\/p>\n\n<p>I started thinking, what if I could mow the grass from the back deck, or even the computer? To handle my 1-acre backyard\u2019s hills, dips, and rocks, an R\/C lawn mower would have to be very sturdy, be controllable from a good distance, and have enough battery power to last several hours. I built the Lawnbot400 to meet these criteria.<\/p>\n\n<h3 id=\"Section_Functional_Overview\">Functional Overview<\/h3>\n\n<p>Basically, if you took the wheels and handlebar off any old gas-powered push mower, bolted it into a sturdy metal frame with 2 electric wheelchair motors, and added the electronics needed to make it move, you\u2019d have the Lawnbot400. I control mine with a standard hobby R\/C transmitter and receiver, but with just a few modifications it could be made autonomous.<\/p>\n\n<p>Steering the Lawnbot is simple. Move the left control stick up, and the left wheel moves forward. Move the right control stick back, and the right wheel moves backward. Both sticks forward and you go straight ahead. This is called \u201ctank steering,\u201d and it gives the Lawnbot400 a zero turn radius.<\/p>\n\n<p>The pieces that enable this control are a bit more complex. The hobby R\/C transmitter encodes the control sticks\u2019 positions and sends them to the receiver using pulse-position modulation (PPM), which encodes a value, such as the desired position of a servo, as the ratio of ON time to OFF time in a fixed-duration series of repeated pulses. But the H-bridge motor controller that supplies variable voltage to the wheelchair motors needs a simpler pulse-width modulation (PWM) signal, in which the pulses don\u2019t repeat within a fixed time frame. So I used an Arduino-based microcontroller to translate the PPM R\/C signal into PWM for the H-bridge.<\/p>\n\n<p>The H-bridge uses transistors to convert the 0V\u20135V PWM values into straight 0V\u201324V DC voltages running from the batteries to the motors in both directions. The wheelchair motors are electric, so the bot will drive even if the gas-powered mower isn\u2019t running. Instead of buying an H-bridge, I chose to build my own. (It should be noted that I didn\u2019t plan to take the easiest route in this project. Instead, I wanted to learn how each electronic part worked, so I\u2019d know how to fix it if it broke.)<\/p>\n\n<p>I didn\u2019t want to donate my Arduino to the project, so I made my own controller with screw terminals on each pin for secure connections during bumpy rides. Like an off-the-shelf Arduino, this board serves as a breakout board for the ATmega168 microcontroller chip, and it has its own 5V regulator (LM7805), 16MHz crystal, power LED, and reset button. I also added a header to the board for my R\/C receiver to plug directly into. My board lacks the standard Arduino programming port and FTDI USB chip, so to use it, I simply program an ATmega chip in my Arduino, then swap it over.<\/p>\n\n<p>With all of the above, I got the Lawnbot400 running successfully, and in the next version, I added a fail-safe to keep the bot from running away if it loses its signal. The fail-safe uses a second (even simpler) Arduino-compatible breakout board to read a third R\/C channel, controlled by a toggle switch on the transmitter. The code reads this channel using the PulseIn method and sets a digital output pin accordingly. If signal is present, the output pin stays on, which uses a 5V relay circuit to keep a 60-amp relay open, to let the main 24V battery power reach the motor controller. But if the bot gets out of range or the switch is turned off, the channel reads LOW and motor power shuts off until signal is restored.<\/p>\n\n<p>Both the R\/C and fail-safe control boards were simple to build and cost around $12 each. Later, I figured out how to add fail-safe handling into the main R\/C code, so you could use just one microcontroller chip with all 3 channels, but this would sacrifice some safety. If the sole ATmega goes crazy and stops responding, you\u2019re out of luck, whereas it\u2019s highly unlikely that both chips will fail at the same time. So I still use the separate, dedicated fail-safe.<\/p>\n\n<p>Here\u2019s how I built my latest Lawnbot400; see the Substitutions box on the previous page for easier options that will have you mowing from your deck chair sooner.<\/p><div class=\"parts\"><strong>Relevant parts<\/strong><ul><li><a href=\"http:\/\/makeprojects.com\/Item\/R_C_transmitter_and_receiver\">R\/C transmitter and receiver<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/IC_chips\">IC chips<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Pieces_of_perf_board\">Pieces of perf board<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2049742\">Wire<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Sockets\">Sockets<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Voltage_regulators\">Voltage regulators<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Crystal_oscillators\">Crystal oscillators<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/SPDT_switches\">SPDT switches<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2102517\">Capacitors<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/resistors\">resistors<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Switches\">Switches<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Screw_terminal_blocks\">Screw terminal blocks<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Pin_headers\">Pin headers<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/LEDs\">LEDs<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/resistors\">resistors<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2036270\">Diode<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Automotive_relay\">Automotive relay<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Fuse\">Fuse<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062610\">Transistors<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062610\">Transistors<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Resistor_networks\">Resistor networks<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Screw_terminal_blocks\">Screw terminal blocks<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/resistors\">resistors<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/PC_board\">PC board<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2102517\">Capacitors<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/family\/index.jsp?categoryId=2032298\">LED<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;amp;filterName=Brand&amp;amp;filterValue=RadioShack\">Resistor<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/PC_cooling_fan\">PC cooling fan<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Heatsinks\">Heatsinks<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Bolts\">Bolts<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Power_distribution_block\">Power distribution block<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Wheelchair_motors\">Wheelchair motors<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Sprockets\">Sprockets<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Bolts\">Bolts<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Roller_chain\">Roller chain<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Drive_wheels_with_bearings\">Drive wheels with bearings<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Push_mower\">Push mower<\/a><\/li><li><a href=\"http:\/\/www.radioshack.com\/product\/index.jsp?productId=4356387\">Batteries<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Metal_stock\">Metal stock<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Metal_stock\">Metal stock<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Metal_stock\">Metal stock<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Metal_stock\">Metal stock<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Rod\">Rod<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Bolts\">Bolts<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Bolts\">Bolts<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Caster_wheels\">Caster wheels<\/a><\/li><li><a href=\"http:\/\/makeprojects.com\/Item\/Scrap_of_plywood\">Scrap of plywood<\/a><\/li><\/ul><\/div>","locale":"en","parts":[{"text":"R\/C transmitter and receiver","notes":"that outputs a servo signal. Most do. I bought an ESky EK2-0420A 6-channel set on eBay for $50.","url":"http:\/\/makeprojects.com\/Item\/R_C_transmitter_and_receiver","thumbnail":""},{"text":"IC chips","notes":"part #DEV-08846 from SparkFun (http:\/\/sparkfun.com)","url":"http:\/\/makeprojects.com\/Item\/IC_chips","thumbnail":""},{"text":"Pieces of perf board","notes":"","url":"http:\/\/makeprojects.com\/Item\/Pieces_of_perf_board","thumbnail":""},{"text":"Wire","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2049742","thumbnail":""},{"text":"Sockets","notes":"","url":"http:\/\/makeprojects.com\/Item\/Sockets","thumbnail":""},{"text":"Voltage regulators","notes":"","url":"http:\/\/makeprojects.com\/Item\/Voltage_regulators","thumbnail":""},{"text":"Crystal oscillators","notes":"","url":"http:\/\/makeprojects.com\/Item\/Crystal_oscillators","thumbnail":""},{"text":"SPDT switches","notes":"","url":"http:\/\/makeprojects.com\/Item\/SPDT_switches","thumbnail":""},{"text":"Capacitors","notes":"","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2102517","thumbnail":""},{"text":"resistors","notes":"","url":"http:\/\/makeprojects.com\/Item\/resistors","thumbnail":""},{"text":"Switches","notes":"","url":"http:\/\/makeprojects.com\/Item\/Switches","thumbnail":""},{"text":"Screw terminal blocks","notes":"","url":"http:\/\/makeprojects.com\/Item\/Screw_terminal_blocks","thumbnail":""},{"text":"Pin headers","notes":"for the R\/C","url":"http:\/\/makeprojects.com\/Item\/Pin_headers","thumbnail":""},{"text":"LEDs","notes":"3 for the R\/C","url":"http:\/\/makeprojects.com\/Item\/LEDs","thumbnail":""},{"text":"resistors","notes":"3 for the R\/C","url":"http:\/\/makeprojects.com\/Item\/resistors","thumbnail":""},{"text":"Diode","notes":"for the fail-safe","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2036270","thumbnail":""},{"text":"Automotive relay","notes":"$6","url":"http:\/\/makeprojects.com\/Item\/Automotive_relay","thumbnail":""},{"text":"Fuse","notes":"for the fail-safe","url":"http:\/\/makeprojects.com\/Item\/Fuse","thumbnail":""},{"text":"Transistors","notes":"Digi-Key part #FQP47P06","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062610","thumbnail":""},{"text":"Transistors","notes":"parts #FQP50N06L and #2N7000","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2062610","thumbnail":""},{"text":"Resistor networks","notes":"#4606X-1-470LF-ND","url":"http:\/\/makeprojects.com\/Item\/Resistor_networks","thumbnail":""},{"text":"Screw terminal blocks","notes":"#ED1609-ND","url":"http:\/\/makeprojects.com\/Item\/Screw_terminal_blocks","thumbnail":""},{"text":"resistors","notes":"#CF1\/84.7KJRCT-ND","url":"http:\/\/makeprojects.com\/Item\/resistors","thumbnail":""},{"text":"PC board","notes":"#PC9-ND","url":"http:\/\/makeprojects.com\/Item\/PC_board","thumbnail":""},{"text":"Capacitors","notes":"#P5575-ND","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2102517","thumbnail":""},{"text":"LED","notes":"any color","url":"http:\/\/www.radioshack.com\/family\/index.jsp?categoryId=2032298","thumbnail":""},{"text":"Resistor","notes":"for the LED","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=2994580&amp;filterName=Brand&amp;filterValue=RadioShack","thumbnail":""},{"text":"PC cooling fan","notes":"","url":"http:\/\/makeprojects.com\/Item\/PC_cooling_fan","thumbnail":""},{"text":"Heatsinks","notes":"","url":"http:\/\/makeprojects.com\/Item\/Heatsinks","thumbnail":""},{"text":"Bolts","notes":"","url":"http:\/\/makeprojects.com\/Item\/Bolts","thumbnail":""},{"text":"Power distribution block","notes":"helps with wiring","url":"http:\/\/makeprojects.com\/Item\/Power_distribution_block","thumbnail":""},{"text":"Wheelchair motors","notes":"","url":"http:\/\/makeprojects.com\/Item\/Wheelchair_motors","thumbnail":""},{"text":"Sprockets","notes":"part #G13610 from goldmine-elec.com and  part #127-12 from partsforscooters.com","url":"http:\/\/makeprojects.com\/Item\/Sprockets","thumbnail":""},{"text":"Bolts","notes":"","url":"http:\/\/makeprojects.com\/Item\/Bolts","thumbnail":""},{"text":"Roller chain","notes":"about $12","url":"http:\/\/makeprojects.com\/Item\/Roller_chain","thumbnail":""},{"text":"Drive wheels with bearings","notes":"part #36054 from Harbor Freight Tools (http:\/\/harborfreight.com)","url":"http:\/\/makeprojects.com\/Item\/Drive_wheels_with_bearings","thumbnail":""},{"text":"Push mower","notes":"about $50 used","url":"http:\/\/makeprojects.com\/Item\/Push_mower","thumbnail":""},{"text":"Batteries","notes":"$20\u2013$50","url":"http:\/\/www.radioshack.com\/product\/index.jsp?productId=4356387","thumbnail":""},{"text":"Metal stock","notes":"$6\u2013$8 each from Home Depot","url":"http:\/\/makeprojects.com\/Item\/Metal_stock","thumbnail":""},{"text":"Metal stock","notes":"$6\u2013$8 each from Home Depot","url":"http:\/\/makeprojects.com\/Item\/Metal_stock","thumbnail":""},{"text":"Metal stock","notes":"$6\u2013$8 each from Home Depot","url":"http:\/\/makeprojects.com\/Item\/Metal_stock","thumbnail":""},{"text":"Metal stock","notes":"$6\u2013$8 each from Home Depot","url":"http:\/\/makeprojects.com\/Item\/Metal_stock","thumbnail":""},{"text":"Rod","notes":"","url":"http:\/\/makeprojects.com\/Item\/Rod","thumbnail":""},{"text":"Bolts","notes":"","url":"http:\/\/makeprojects.com\/Item\/Bolts","thumbnail":""},{"text":"Bolts","notes":"","url":"http:\/\/makeprojects.com\/Item\/Bolts","thumbnail":""},{"text":"Caster wheels","notes":"Harbor Freight #38944, $15","url":"http:\/\/makeprojects.com\/Item\/Caster_wheels","thumbnail":""},{"text":"Scrap of plywood","notes":"to carry the electronics","url":"http:\/\/makeprojects.com\/Item\/Scrap_of_plywood","thumbnail":""}],"prereqs":[],"steps":[{"title":"Make the controller boards (optional).","lines":[{"text":"You can use 2 Arduino boards (or just one) for the R\/C and fail-safe controllers, but here\u2019s how I built my own simpler and semi-ruggedized versions cheaper. The fail-safe is optional but strongly recommended for safety. Visit <a href=\"http:\/\/makezine.com\/22\/rclawnmower\">http:\/\/makezine.com\/22\/rclawnmower<\/a> for parts lists, schematics, and code.","text_raw":"You can use 2 Arduino boards (or just one) for the R\/C and fail-safe controllers, but here\u2019s how I built my own simpler and semi-ruggedized versions cheaper. The fail-safe is optional but strongly recommended for safety. Visit http:\/\/makezine.com\/22\/rclawnmower for parts lists, schematics, and code.","bullet":"black","level":0},{"text":"The fail-safe board simply breaks out the pins from the Arduino\u2019s ATmega chip to screw terminal blocks at the edges of the board.\u00a0I put in a few capacitors for the 7805 voltage regulator and a crystal oscillator for the external clock, and that\u2019s it. The fail-safe relay and fuse are too large to fit on the board but can be mounted nearby.","text_raw":"The fail-safe board simply breaks out the pins from the Arduino\u2019s ATmega chip to screw terminal blocks at the edges of the board.\u00a0I put in a few capacitors for the 7805 voltage regulator and a crystal oscillator for the external clock, and that\u2019s it. The fail-safe relay and fuse are too large to fit on the board but can be mounted nearby.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28772,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/u4h6EefCTkeLlpsv"}],"number":1},{"title":"","lines":[{"text":"<strong>See reference #1 in photo:<\/strong> Pins 23\u201328 of the ATmega go directly to screw terminals for analog pins 0\u20135.","text_raw":"'''See reference #1 in photo:''' Pins 23\u201328 of the ATmega go directly to screw terminals for analog pins 0\u20135.","bullet":"black","level":0},{"text":"<strong>2-3:<\/strong> Pins 15\u201319 of the ATmega go directly to screw terminals for digital pins 9\u201313 (from right to left). The power LED is tied to +5V and a 330\u03a9 resistor to ground.","text_raw":"'''2-3:''' Pins 15\u201319 of the ATmega go directly to screw terminals for digital pins 9\u201313 (from right to left). The power LED is tied to +5V and a 330\u03a9 resistor to ground.","bullet":"black","level":0},{"text":"<strong>4:<\/strong> The reset button goes from ground to pin 1 of the ATmega. Pin 1 also needs a 10K pull-up resistor. If you don\u2019t want a reset button, put a 10K resistor from pin 1 to +5V.","text_raw":"'''4:''' The reset button goes from ground to pin 1 of the ATmega. Pin 1 also needs a 10K pull-up resistor. If you don\u2019t want a reset button, put a 10K resistor from pin 1 to +5V.","bullet":"black","level":0},{"text":"<strong>5:<\/strong> Pins 7, 20, and 21 are tied to +5V. Pins 8 and 22 are tied to ground.","text_raw":"'''5:''' Pins 7, 20, and 21 are tied to +5V. Pins 8 and 22 are tied to ground.","bullet":"black","level":0},{"text":"<strong>6:<\/strong> The power supply consists of a 7805 5V regulator, 2 capacitors, and a screw terminal. The 7805 can accept up to 36v dc input and will deliver 5V to the ATmega. The green capacitor is a 0.1\u00b5f decoupling capacitor and the larger blue one is a 220\u00b5f 10V.","text_raw":"'''6:''' The power supply consists of a 7805 5V regulator, 2 capacitors, and a screw terminal. The 7805 can accept up to 36v dc input and will deliver 5V to the ATmega. The green capacitor is a 0.1\u00b5f decoupling capacitor and the larger blue one is a 220\u00b5f 10V.","bullet":"black","level":0},{"text":"<strong>7:<\/strong> Pins 2\u20136 of the ATmega go directly to screw terminals for digital pins 0, 1, 3, and 4.","text_raw":"'''7:''' Pins 2\u20136 of the ATmega go directly to screw terminals for digital pins 0, 1, 3, and 4.","bullet":"black","level":0},{"text":"<strong>8:<\/strong> The 16mhz crystal resonator goes to pins 9 and 10 of the ATmega (center pin of the resonator to ground).","text_raw":"'''8:''' The 16mhz crystal resonator goes to pins 9 and 10 of the ATmega (center pin of the resonator to ground).","bullet":"black","level":0},{"text":"<strong>9:<\/strong> Pins 11\u201314 of the ATmega go directly to screw terminals for digital pins 5\u20138.","text_raw":"'''9:''' Pins 11\u201314 of the ATmega go directly to screw terminals for digital pins 5\u20138.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28780,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/aPijTUuFEvLbMFnc"}],"number":2},{"title":"","lines":[{"text":"<strong>10-11:<\/strong> Pins 23\u201328 go to screw terminals for analog pins 0\u20135. The first 6 screw terminals go directly to the 6 channels from the R\/C receiver. None of these wires are connected to the ATmega. You must route the wires from these screw terminals to the desired ATmega pin\u2019s screw terminals.","text_raw":"'''10-11:''' Pins 23\u201328 go to screw terminals for analog pins 0\u20135. The first 6 screw terminals go directly to the 6 channels from the R\/C receiver. None of these wires are connected to the ATmega. You must route the wires from these screw terminals to the desired ATmega pin\u2019s screw terminals.","bullet":"black","level":0},{"text":"<strong>12:<\/strong> These 2 screw terminals are connected to the 2 sets of male servo pins below. The top pin is signal, middle pin is +5V, and the bottom pin is ground.","text_raw":"'''12:''' These 2 screw terminals are connected to the 2 sets of male servo pins below. The top pin is signal, middle pin is +5V, and the bottom pin is ground.","bullet":"black","level":0},{"text":"<strong>13:<\/strong> This header is for the R\/C receiver. The top row breaks out each channel to a screw terminal. The second row is +5V. The third row is ground.","text_raw":"'''13:''' This header is for the R\/C receiver. The top row breaks out each channel to a screw terminal. The second row is +5V. The third row is ground.","bullet":"black","level":0},{"text":"<strong>14:<\/strong> The reset button goes from ground to pin 1 of the ATmega. Also use a 10K pull-up resistor from pin 1 to +5V.","text_raw":"'''14:''' The reset button goes from ground to pin 1 of the ATmega. Also use a 10K pull-up resistor from pin 1 to +5V.","bullet":"black","level":0},{"text":"<strong>15:<\/strong> 16MHz crystal resonator to pins 9 and 10 of the ATmega.","text_raw":"'''15:''' 16MHz crystal resonator to pins 9 and 10 of the ATmega.","bullet":"black","level":0},{"text":"<strong>16:<\/strong> Two LEDs with 330\u03a9 resistors from digital pins 12 and 13 to ground. I use these as neutral indicator lights. When the control sticks are centered, these lights come on, which helps when fine-tuning the R\/C transmitter. I sacrificed any other use of these pins for the LEDs.","text_raw":"'''16:''' Two LEDs with 330\u03a9 resistors from digital pins 12 and 13 to ground. I use these as neutral indicator lights. When the control sticks are centered, these lights come on, which helps when fine-tuning the R\/C transmitter. I sacrificed any other use of these pins for the LEDs.","bullet":"black","level":0},{"text":"<strong>17:<\/strong> The power supply: a 7805 5V regulator, screw terminal, and 2 capacitors.  I put in several capacitors  I had lying around (they must be above 10V rating), but it only needs a 220\u00b5f capacitor at the output and a 0.1\u00b5f decoupling capacitor close to the ATmega. If you\u2019re not using bulk capacitors in your motor controller, use several here. I also added a 1N4001 diode to protect against reverse polarity.","text_raw":"'''17:''' The power supply: a 7805 5V regulator, screw terminal, and 2 capacitors.  I put in several capacitors  I had lying around (they must be above 10V rating), but it only needs a 220\u00b5f capacitor at the output and a 0.1\u00b5f decoupling capacitor close to the ATmega. If you\u2019re not using bulk capacitors in your motor controller, use several here. I also added a 1N4001 diode to protect against reverse polarity.","bullet":"black","level":0},{"text":"<strong>18:<\/strong> Screw terminals for digital pins 2\u201311. I don\u2019t use digital pins 0 and 1 on this board, and pins 12 and 13 are being used by the 2 neutral indicator LEDs.","text_raw":"'''18:''' Screw terminals for digital pins 2\u201311. I don\u2019t use digital pins 0 and 1 on this board, and pins 12 and 13 are being used by the 2 neutral indicator LEDs.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28781,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/R3rE4Bonqhc3RZZY"}],"number":3},{"title":"","lines":[{"text":"The R\/C controller uses a slightly larger piece of RadioShack perf board to carry the same components as the fail-safe board, plus 2 LED motor indicators connected to digital output pins 12 and 13, and a port for the R\/C receiver consisting of three 6-pin female headers stacked together.","text_raw":"The R\/C controller uses a slightly larger piece of RadioShack perf board to carry the same components as the fail-safe board, plus 2 LED motor indicators connected to digital output pins 12 and 13, and a port for the R\/C receiver consisting of three 6-pin female headers stacked together.","bullet":"black","level":0},{"text":"The control pins from this R\/C port connect to another screw terminal block on the board. I could have simply used jumper wires to connect the R\/C receiver to power and to the microcontroller, but the header and screw terminals make the connections stronger and very easy to reconfigure.","text_raw":"The control pins from this R\/C port connect to another screw terminal block on the board. I could have simply used jumper wires to connect the R\/C receiver to power and to the microcontroller, but the header and screw terminals make the connections stronger and very easy to reconfigure.","bullet":"black","level":0},{"text":"The 6\u00d73 grid of connector pins on my R\/C receiver are mapped with the first row of pins carrying each channel, the second row all +5V, and the third row all ground. You want to find 2 channels that are controlled by up\/down movements on your transmitter, such as the ones used for throttle and elevation.","text_raw":"The 6\u00d73 grid of connector pins on my R\/C receiver are mapped with the first row of pins carrying each channel, the second row all +5V, and the third row all ground. You want to find 2 channels that are controlled by up\/down movements on your transmitter, such as the ones used for throttle and elevation.","bullet":"black","level":0},{"text":"To do this, go down the line plugging a servomotor into each channel. Move every control stick until the servo moves, then write down which channel is controlled by what stick. Decide which 2 channels to use for the Lawnbot motors.","text_raw":"To do this, go down the line plugging a servomotor into each channel. Move every control stick until the servo moves, then write down which channel is controlled by what stick. Decide which 2 channels to use for the Lawnbot motors.","bullet":"black","level":1},{"text":"Connect these 2 channels on the R\/C receiver to pins 4 and 5 of the microcontroller chip (which function as Arduino digital pins 2 and 3, the only 2 external interrupts). For the receiver\u2019s power, I jumpered wires over from my Arduino-based R\/C controller\u2019s +5V and Ground pins.","text_raw":"Connect these 2 channels on the R\/C receiver to pins 4 and 5 of the microcontroller chip (which function as Arduino digital pins 2 and 3, the only 2 external interrupts). For the receiver\u2019s power, I jumpered wires over from my Arduino-based R\/C controller\u2019s +5V and Ground pins.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28768,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/mIAkNyB2BRHDtMSF"}],"number":4},{"title":"Load and test the code.","lines":[{"text":"Download the  <a href=\"http:\/\/makezine.com\/images\/22\/arduino_code.zip\">code<\/a> and load it onto your Arduino(s). To check the R\/C code from your computer, keep the Arduino plugged into the USB port, connect the R\/C receiver as in Step 4, turn the transmitter on, and click on the Serial Monitor button in the Arduino IDE. Moving the left control stick should change the reading for your left motor\u2019s channel, and the right stick should control the right channel. If not, swap the inputs.","text_raw":"Download the  [http:\/\/makezine.com\/images\/22\/arduino_code.zip|code] and load it onto your Arduino(s). To check the R\/C code from your computer, keep the Arduino plugged into the USB port, connect the R\/C receiver as in Step 4, turn the transmitter on, and click on the Serial Monitor button in the Arduino IDE. Moving the left control stick should change the reading for your left motor\u2019s channel, and the right stick should control the right channel. If not, swap the inputs.","bullet":"black","level":0},{"text":"The on-pulse duration readings should range from 1,000 to 2,000 microseconds, showing 1,500 when the control stick is centered. If not, adjust the stick\u2019s trim control on the transmitter, or change the max and min values in the code to match the range of readings you see in the serial monitor.","text_raw":"The on-pulse duration readings should range from 1,000 to 2,000 microseconds, showing 1,500 when the control stick is centered. If not, adjust the stick\u2019s trim control on the transmitter, or change the max and min values in the code to match the range of readings you see in the serial monitor.","bullet":"black","level":0},{"text":"If you\u2019re in the field using standalone controller boards, you can use a multimeter to probe the Arduino pins\u2019 voltage outputs while moving the control sticks. Arduino digital pins 5 and 9 (ATmega chip pins 11 and 15) run forward and reverse for left motor, and digital pins 6 and 10 (chip pins 12 and 16) control the right. Probe the pins one at a time, checking for a good 0V\u20135V PWM signal. Or use LEDs for a quick visual test; place them short leg to ground, long leg to the Arduino output pin, and look for the control stick to work like a dimmer.","text_raw":"If you\u2019re in the field using standalone controller boards, you can use a multimeter to probe the Arduino pins\u2019 voltage outputs while moving the control sticks. Arduino digital pins 5 and 9 (ATmega chip pins 11 and 15) run forward and reverse for left motor, and digital pins 6 and 10 (chip pins 12 and 16) control the right. Probe the pins one at a time, checking for a good 0V\u20135V PWM signal. Or use LEDs for a quick visual test; place them short leg to ground, long leg to the Arduino output pin, and look for the control stick to work like a dimmer.","bullet":"black","level":0}],"object":null,"images":[],"number":5},{"title":"Build the H-bridge (optional).","lines":[{"text":"You can buy an H-bridge motor controller like the Sabertooth 2\u00d725 from Dimension Engineering, but if you feel like an adventure, build your own. Here\u2019s how I built one on a custom PC board for about $35.","text_raw":"You can buy an H-bridge motor controller like the Sabertooth 2\u00d725 from Dimension Engineering, but if you feel like an adventure, build your own. Here\u2019s how I built one on a custom PC board for about $35.","bullet":"black","level":0},{"text":"Download the circuit board layout and schematic files <em>triple8.brd<\/em> and <em>triple8.sch<\/em> files <a href=\"http:\/\/makezine.com\/images\/22\/eagle_files.zip\">both here<\/a>. Also download Eagle from <a href=\"http:\/\/cadsoft.de\/\" rel=\"nofollow\">cadsoft.de<\/a>; the free version is fine.","text_raw":"Download the circuit board layout and schematic files ''triple8.brd'' and ''triple8.sch'' files [http:\/\/makezine.com\/images\/22\/eagle_files.zip|both here]. Also download Eagle from [http:\/\/cadsoft.de\/|cadsoft.de]; the free version is fine.","bullet":"black","level":0},{"text":"Open <em>triple8.brd<\/em> in Eagle and use a laser printer to print only the bottom layer on a piece of glossy magazine paper. I have tried many types of paper, and had the best results with my wife\u2019s <em>Cosmopolitan<\/em> magazines. Find pages with plain black text only, like the backs of prescription drug ads, where they list the side effects. Feed the page into the printer manually to make sure it goes in straight.","text_raw":"Open ''triple8.brd'' in Eagle and use a laser printer to print only the bottom layer on a piece of glossy magazine paper. I have tried many types of paper, and had the best results with my wife\u2019s ''Cosmopolitan'' magazines. Find pages with plain black text only, like the backs of prescription drug ads, where they list the side effects. Feed the page into the printer manually to make sure it goes in straight.","bullet":"black","level":0},{"text":"Turn your iron to its high setting. Scrub the PC board\u2019s copper side with a Scotch-Brite pad and clean it with acetone and paper towels several times.","text_raw":"Turn your iron to its high setting. Scrub the PC board\u2019s copper side with a Scotch-Brite pad and clean it with acetone and paper towels several times.","bullet":"black","level":0},{"text":"Place the print facedown on the copper-clad board and place the iron on top. Apply pressure and heat for about 3 minutes, moving every 30 seconds. Let the board sit for a few minutes, then soak it in a bowl of warm, soapy water for 30 minutes. After soaking, rub the paper off with your thumb until only black toner traces remain.","text_raw":"Place the print facedown on the copper-clad board and place the iron on top. Apply pressure and heat for about 3 minutes, moving every 30 seconds. Let the board sit for a few minutes, then soak it in a bowl of warm, soapy water for 30 minutes. After soaking, rub the paper off with your thumb until only black toner traces remain.","bullet":"black","level":0},{"text":"Mix an etchant solution with 2 parts hydrogen peroxide to 1 part muriatic acid. Pour the etchant over the copper board in a glass dish and agitate it for about 10 minutes with a plastic implement or air pump. When the unmasked copper has all dissolved, rinse off the board and remove the black toner with more acetone and paper towels (photo).","text_raw":"Mix an etchant solution with 2 parts hydrogen peroxide to 1 part muriatic acid. Pour the etchant over the copper board in a glass dish and agitate it for about 10 minutes with a plastic implement or air pump. When the unmasked copper has all dissolved, rinse off the board and remove the black toner with more acetone and paper towels (photo).","bullet":"black","level":0},{"text":"Always wear chemical gloves and safety goggles while working with etchant, and take care not to drip or splash.","text_raw":"Always wear chemical gloves and safety goggles while working with etchant, and take care not to drip or splash.","bullet":"icon_caution","level":0}],"object":null,"images":[{"imageid":28771,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/qTWTBFvMipuJVjBJ"}],"number":6},{"title":"","lines":[{"text":"Drill holes in the PCB at every hole location. Solder the components on the board, following the schematic. Start with the resistors and terminals, and finish with the transistors and capacitors, making sure all the transistor gates point toward the resistor networks that drive them.","text_raw":"Drill holes in the PCB at every hole location. Solder the components on the board, following the schematic. Start with the resistors and terminals, and finish with the transistors and capacitors, making sure all the transistor gates point toward the resistor networks that drive them.","bullet":"black","level":0},{"text":"Finally, attach heat sinks to the 47A and 52A transistors and bolt a PC cooling fan on top, aimed to draw air away from the board.","text_raw":"Finally, attach heat sinks to the 47A and 52A transistors and bolt a PC cooling fan on top, aimed to draw air away from the board.","bullet":"black","level":0},{"text":"To test your H-bridge, hook it up to a 12V power source, following the schematic. Apply your Arduino\u2019s 5V to each input, and use your voltage meter to look for 12V at the 2-pole motor terminal outputs.","text_raw":"To test your H-bridge, hook it up to a 12V power source, following the schematic. Apply your Arduino\u2019s 5V to each input, and use your voltage meter to look for 12V at the 2-pole motor terminal outputs.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28758,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/gHL2GVdyTAW1yOAO"},{"imageid":28787,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/vudEwJWtuTjL1dxy"},{"imageid":28788,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/DSEmXeGc6jCbUMCR"}],"number":7},{"title":"Mount the wheel sprockets.","lines":[{"text":"The easy way is to find a set of wheelchair motors that have wheels already mounted. I couldn\u2019t find any in my price range, so I just went with the motors and found my own wheels. I didn\u2019t think the motors would be strong enough to drive the wheels directly, so I opted for a 17:65 chain drive.","text_raw":"The easy way is to find a set of wheelchair motors that have wheels already mounted. I couldn\u2019t find any in my price range, so I just went with the motors and found my own wheels. I didn\u2019t think the motors would be strong enough to drive the wheels directly, so I opted for a 17:65 chain drive.","bullet":"black","level":0},{"text":"To mount the sprockets to the wheels, I drilled matching sets of 3 holes aligned around the centers of the drive wheels and the 65-tooth sprockets. Then I bolted the sprockets on and tightened them up against the inside hubs as much as possible. I also welded the sprockets to the hubs to keep them centered. Welding isn\u2019t necessary, but it helps.","text_raw":"To mount the sprockets to the wheels, I drilled matching sets of 3 holes aligned around the centers of the drive wheels and the 65-tooth sprockets. Then I bolted the sprockets on and tightened them up against the inside hubs as much as possible. I also welded the sprockets to the hubs to keep them centered. Welding isn\u2019t necessary, but it helps.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28773,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/pmyQoVQFE3TevtD3"},{"imageid":28765,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/etFordpBfJKaTMVG"}],"number":8},{"title":"Build the frame.","lines":[{"text":"I made a simple rectangular frame and suspended the lawn mower body underneath it using 4 lengths of angle iron bolted to the mower\u2019s original axle holes. You\u2019ll want to custom-size your frame to fit your particular mower, and if something doesn\u2019t line up exactly, you may have to use your creativity. Luckily, the dimensions don\u2019t all have to be perfect.","text_raw":"I made a simple rectangular frame and suspended the lawn mower body underneath it using 4 lengths of angle iron bolted to the mower\u2019s original axle holes. You\u2019ll want to custom-size your frame to fit your particular mower, and if something doesn\u2019t line up exactly, you may have to use your creativity. Luckily, the dimensions don\u2019t all have to be perfect.","bullet":"black","level":0},{"text":"Begin planning your frame by measuring your lawn mower\u2019s footprint and height. The frame\u2019s width should match the mower\u2019s original wheelbase, and its length must let the front caster wheels swing 360\u00b0 without hitting the mower deck. Its height should allow you to adjust the deck to sit at its original height range. For my frame, this meant 24&quot; wide by 48&quot; long by 18&quot; tall.","text_raw":"Begin planning your frame by measuring your lawn mower\u2019s footprint and height. The frame\u2019s width should match the mower\u2019s original wheelbase, and its length must let the front caster wheels swing 360\u00b0 without hitting the mower deck. Its height should allow you to adjust the deck to sit at its original height range. For my frame, this meant 24\" wide by 48\" long by 18\" tall.","bullet":"black","level":0},{"text":"I constructed my frame by cutting, drilling, bolting, and welding together lengths of angle iron, square tubing, threaded rod, and flat steel. The main part of the frame consists of 2 long pieces of 2&quot; angle iron that run from front to back, one on each side. In front, these runners are bolted to 2 crosspieces of square tubing, which in turn bolt to the mounting plates of the 2 caster wheels.","text_raw":"I constructed my frame by cutting, drilling, bolting, and welding together lengths of angle iron, square tubing, threaded rod, and flat steel. The main part of the frame consists of 2 long pieces of 2\" angle iron that run from front to back, one on each side. In front, these runners are bolted to 2 crosspieces of square tubing, which in turn bolt to the mounting plates of the 2 caster wheels.","bullet":"black","level":0},{"text":"In back, the left and right runners are held up level by vertical angle-iron risers that connect down to the drive wheel axle. The axle consists of a length of threaded rod that passes through a hole in the bottom of each riser, held in place by nuts on either side. The drive wheels have built-in bearings, so they attach onto the ends of the axle with another nut, sprocket side in.","text_raw":"In back, the left and right runners are held up level by vertical angle-iron risers that connect down to the drive wheel axle. The axle consists of a length of threaded rod that passes through a hole in the bottom of each riser, held in place by nuts on either side. The drive wheels have built-in bearings, so they attach onto the ends of the axle with another nut, sprocket side in.","bullet":"black","level":0},{"text":"Angle-iron crosspieces connect the risers\u2019 tops and bottoms together in back, forming a box shape at the back of the frame. Flat steel braces further reinforce the risers by angling up diagonally from the bottoms of the risers, near the axle, to the left and right runners.","text_raw":"Angle-iron crosspieces connect the risers\u2019 tops and bottoms together in back, forming a box shape at the back of the frame. Flat steel braces further reinforce the risers by angling up diagonally from the bottoms of the risers, near the axle, to the left and right runners.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28754,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/26w3YOSsehyidAbd"},{"imageid":28762,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/MwRcoNbFEPUWETSy"}],"number":9},{"title":"Mount the motors.","lines":[{"text":"The motor mounts were the most difficult part of the frame to plan. The motor sprockets need to align precisely with the wheel sprockets, but the motor positions must also be adjustable, to set proper tension on the chain. I mounted the motors to 8&quot; lengths of angle iron, which in turn bolted through longitudinal slots in the runners, so they could slide forward and backward before tightening down.","text_raw":"The motor mounts were the most difficult part of the frame to plan. The motor sprockets need to align precisely with the wheel sprockets, but the motor positions must also be adjustable, to set proper tension on the chain. I mounted the motors to 8\" lengths of angle iron, which in turn bolted through longitudinal slots in the runners, so they could slide forward and backward before tightening down.","bullet":"black","level":0},{"text":"The angle-iron plates have 2 holes for mounting, one in front of the motor and one behind it. To mark where the slots need to be, line up the mounting plates (preferably with the motor mounted) onto the runners as far back as you can without hitting any other bolts underneath the frame. Use a Sharpie to mark the mounting hole positions on the runners, then move the motors forward 2&quot; and mark the new positions. I drilled one hole at each mark and used a Dremel tool with a cutoff wheel to cut out the rest.","text_raw":"The angle-iron plates have 2 holes for mounting, one in front of the motor and one behind it. To mark where the slots need to be, line up the mounting plates (preferably with the motor mounted) onto the runners as far back as you can without hitting any other bolts underneath the frame. Use a Sharpie to mark the mounting hole positions on the runners, then move the motors forward 2\" and mark the new positions. I drilled one hole at each mark and used a Dremel tool with a cutoff wheel to cut out the rest.","bullet":"black","level":0},{"text":"Mount the sprockets to the motors\u2019 shafts, using a Woodruff key if your motors have a slotted bore. With the motors slid all the way toward the back of the frame, wrap the #25 chain around each motor and wheel sprocket pair, and mark where they overlap. Check that they\u2019re the same length for both sides, or else the bot won\u2019t drive straight!","text_raw":"Mount the sprockets to the motors\u2019 shafts, using a Woodruff key if your motors have a slotted bore. With the motors slid all the way toward the back of the frame, wrap the #25 chain around each motor and wheel sprocket pair, and mark where they overlap. Check that they\u2019re the same length for both sides, or else the bot won\u2019t drive straight!","bullet":"black","level":0},{"text":"Cut the 2 pieces of chain and connect them around the sprockets using the universal chain links. To tension the chains, loosen the motor mounts and slide them forward until there\u2019s good tension on the chain, then tighten the bolts back up.","text_raw":"Cut the 2 pieces of chain and connect them around the sprockets using the universal chain links. To tension the chains, loosen the motor mounts and slide them forward until there\u2019s good tension on the chain, then tighten the bolts back up.","bullet":"black","level":0},{"text":"Now you can try generating some electricity. Connect a voltage meter to one set of motor terminals, push the bot around, and watch the motor work in reverse as a generator.","text_raw":"Now you can try generating some electricity. Connect a voltage meter to one set of motor terminals, push the bot around, and watch the motor work in reverse as a generator.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28763,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/JoM1cdvBCXUiTCKT"},{"imageid":28747,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/BUgyEVqYDu2c4DfD"}],"number":10},{"title":"Attach the mower deck.","lines":[{"text":"You need to suspend the lawn mower deck level, at its normal working height. Make sure the mower\u2019s original wheels are all adjusted to their center position. Measure the wheels\u2019 radius and subtract it from the height of the Lawnbot frame.","text_raw":"You need to suspend the lawn mower deck level, at its normal working height. Make sure the mower\u2019s original wheels are all adjusted to their center position. Measure the wheels\u2019 radius and subtract it from the height of the Lawnbot frame.","bullet":"black","level":0},{"text":"Cut 4 pieces of 1&quot; angle iron to this length; these are the hangers that will attach to the top of the frame and suspend the deck. The bottom holes should fit the mower wheel shafts, and the top holes will be the standard \u00bd&quot; used for bolting the frame together.","text_raw":"Cut 4 pieces of 1\" angle iron to this length; these are the hangers that will attach to the top of the frame and suspend the deck. The bottom holes should fit the mower wheel shafts, and the top holes will be the standard \u00bd\" used for bolting the frame together.","bullet":"black","level":0},{"text":"Once you have all 4 hangers installed, install the mower deck and tighten the bolts. The deck should hang about 2&quot;\u20133&quot; above the ground. Make sure the front wheels can swing all the way around with at least \u00bd&quot; clearance from the deck","text_raw":"Once you have all 4 hangers installed, install the mower deck and tighten the bolts. The deck should hang about 2\"\u20133\" above the ground. Make sure the front wheels can swing all the way around with at least \u00bd\" clearance from the deck","bullet":"black","level":0}],"object":null,"images":[{"imageid":28752,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/PSEfUkNu6uI42pJO"},{"imageid":28764,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/5QP6sDLvYALhyHK1"}],"number":11},{"title":"Install the electronics.","lines":[{"text":"To hold my 2 large marine batteries, I welded a rack to the back of the frame. This may not be necessary if you\u2019re using smaller batteries.","text_raw":"To hold my 2 large marine batteries, I welded a rack to the back of the frame. This may not be necessary if you\u2019re using smaller batteries.","bullet":"black","level":0},{"text":"Now it\u2019s time to connect everything together and hope it works! I mounted all the electronics to a scrap of plywood bolted on top of the frame. A block of wood on the left carries the R\/C controller, the H-bridge and fan on top, and a power distribution block along the back. The rest of the plywood holds the fail-safe board, relay, and fuse, and a battery for all the 5V electronics.","text_raw":"Now it\u2019s time to connect everything together and hope it works! I mounted all the electronics to a scrap of plywood bolted on top of the frame. A block of wood on the left carries the R\/C controller, the H-bridge and fan on top, and a power distribution block along the back. The rest of the plywood holds the fail-safe board, relay, and fuse, and a battery for all the 5V electronics.","bullet":"black","level":0},{"text":"If you\u2019re using two 12V batteries to achieve 24V, run a heavy-gauge jumper from the negative pole of one battery to the positive pole of the other. Plug the fuse from the free positive battery pole into the power distribution block.","text_raw":"If you\u2019re using two 12V batteries to achieve 24V, run a heavy-gauge jumper from the negative pole of one battery to the positive pole of the other. Plug the fuse from the free positive battery pole into the power distribution block.","bullet":"black","level":0},{"text":"Both Arduino control boards can connect to a 12V battery for power. I actually used three 12V batteries, 2 big ones for the motors and a smaller one dedicated to the electronics, so they\u2019re unaffected by current draw during fast reversing and takeoffs. But you can just as easily connect them to the main battery power supply.","text_raw":"Both Arduino control boards can connect to a 12V battery for power. I actually used three 12V batteries, 2 big ones for the motors and a smaller one dedicated to the electronics, so they\u2019re unaffected by current draw during fast reversing and takeoffs. But you can just as easily connect them to the main battery power supply.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28751,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/Ib2mMPd4QKZvyCEq"},{"imageid":28753,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/KWZTWMaT3MJ5UU2Z"}],"number":12},{"title":"","lines":[{"text":"Use the power distribution block to route power and motor wires to the motor controller, making sure you have the correct polarity. Connect the R\/C controller to the motor controller: Arduino digital pins 5 and 9 (ATmega pins 11 and 15) run to inputs A and B on the H-bridge for the left motor\u2019s forward and reverse, while digital pins 6 and 10 (ATmega pins 12 and 16) go to motor controller inputs C and D.","text_raw":"Use the power distribution block to route power and motor wires to the motor controller, making sure you have the correct polarity. Connect the R\/C controller to the motor controller: Arduino digital pins 5 and 9 (ATmega pins 11 and 15) run to inputs A and B on the H-bridge for the left motor\u2019s forward and reverse, while digital pins 6 and 10 (ATmega pins 12 and 16) go to motor controller inputs C and D.","bullet":"black","level":0},{"text":"Hook up the fail-safe following the schematic <em>fail-safe.sch<\/em>, so that the controller uses an offboard 5V relay to switch the larger, 60A power relay. This code turns the relay off unless it receives a microsecond value between 1,900 and 2,100, which corresponds to an R\/C channel that\u2019s fully on, like from a toggle switch.","text_raw":"Hook up the fail-safe following the schematic ''fail-safe.sch'', so that the controller uses an offboard 5V relay to switch the larger, 60A power relay. This code turns the relay off unless it receives a microsecond value between 1,900 and 2,100, which corresponds to an R\/C channel that\u2019s fully on, like from a toggle switch.","bullet":"black","level":0},{"text":"The first R\/C radio I used had a switch like this, but not the second one, so I desoldered the pot from one of its left-right joysticks (channel 3, I think) and replaced it with a small DPST switch, mounted to the front of the transmitter.","text_raw":"The first R\/C radio I used had a switch like this, but not the second one, so I desoldered the pot from one of its left-right joysticks (channel 3, I think) and replaced it with a small DPST switch, mounted to the front of the transmitter.","bullet":"black","level":0},{"text":"If you connected everything correctly, you should be cutting grass right now.","text_raw":"If you connected everything correctly, you should be cutting grass right now.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28757,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/GQEfJDjHLxbZaGsq"},{"imageid":28749,"orderby":2,"text":"http:\/\/guide-images.makeprojects.org\/igi\/YYQJOkfIZ6rxPPR3"},{"imageid":28755,"orderby":3,"text":"http:\/\/guide-images.makeprojects.org\/igi\/LMIv5BhQjDFCxeQ1"}],"number":13},{"title":"Operation.","lines":[{"text":"To operate the Lawnbot400, turn on the transmitter and flip the power switch on the bot. The Arduino breakout board should power up and the Neutral indicator lights on the R\/C control should come on. These LEDs, connected to Arduino digital pins 12 and 13, indicate when the signal is in the neutral range. If they aren\u2019t lit, adjust the trim on the transmitter until they are.","text_raw":"To operate the Lawnbot400, turn on the transmitter and flip the power switch on the bot. The Arduino breakout board should power up and the Neutral indicator lights on the R\/C control should come on. These LEDs, connected to Arduino digital pins 12 and 13, indicate when the signal is in the neutral range. If they aren\u2019t lit, adjust the trim on the transmitter until they are.","bullet":"black","level":0},{"text":"Time to crank up the lawn mower engine, and remember to prime the bulb. Flip the switch for the fail-safe channel on the transmitter, and the motor controller should power on, along with the cooling fan. Now all you have to do is drive.","text_raw":"Time to crank up the lawn mower engine, and remember to prime the bulb. Flip the switch for the fail-safe channel on the transmitter, and the motor controller should power on, along with the cooling fan. Now all you have to do is drive.","bullet":"black","level":0},{"text":"The Lawnbot400 will scoot across the yard at 5mph\u201310mph, which may be faster than optimal for mowing the grass. Proper cutting speed depends on the power of the lawn mower engine and the condition of the grass. If you use the cheapest mower available (like me), the engine will bog down if the grass is too tall or wet.","text_raw":"The Lawnbot400 will scoot across the yard at 5mph\u201310mph, which may be faster than optimal for mowing the grass. Proper cutting speed depends on the power of the lawn mower engine and the condition of the grass. If you use the cheapest mower available (like me), the engine will bog down if the grass is too tall or wet.","bullet":"black","level":0},{"text":"But if you mow before it gets too tall, you should be able to go as fast as you want. With a little practice, you\u2019ll learn to adjust the speed based on the sound of the engine and how hard it\u2019s working. At worst, the mower dies and you drive the bot back over to you to restart it.","text_raw":"But if you mow before it gets too tall, you should be able to go as fast as you want. With a little practice, you\u2019ll learn to adjust the speed based on the sound of the engine and how hard it\u2019s working. At worst, the mower dies and you drive the bot back over to you to restart it.","bullet":"black","level":0},{"text":"My fears about the bot\u2019s ability to pull itself up a large hill were put to rest when I took it to a friend\u2019s property and watched it devour \u00bc acre of woods with no problems. I was further convinced when it carried me (155lbs) across the yard and up a hill at a reasonable speed, without a hitch.","text_raw":"My fears about the bot\u2019s ability to pull itself up a large hill were put to rest when I took it to a friend\u2019s property and watched it devour \u00bc acre of woods with no problems. I was further convinced when it carried me (155lbs) across the yard and up a hill at a reasonable speed, without a hitch.","bullet":"black","level":0}],"object":null,"images":[{"imageid":28789,"orderby":1,"text":"http:\/\/guide-images.makeprojects.org\/igi\/vVN5KafYKqAibBCt"}],"number":14}],"subject":"","summary":"Make an Arduino-controlled R\/C lawn mower.","time_required":"3-5 days","title":"Lawnbot400","tools":[],"type":"project"},"guideid":"1369"}